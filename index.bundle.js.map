{"version":3,"file":"index.bundle.js","sources":["../node_modules/hsluv/hsluv.js","../src/rezult.js","../src/colorgen.js","../src/domkit.js","../src/hashbind.js","../src/prompt.js","../src/sample.js","../src/coord.js","../src/turmite/constants.js","../node_modules/nearley/lib/nearley.js","../src/turmite/grammar_rules.js","../src/turmite/grammar.js","../src/turmite/parse.js","../src/turmite/rle-builder.js","../src/turmite/tostring.js","../src/turmite/analyze.js","../src/turmite/compile.js","../src/turmite/index.js","../node_modules/gl-matrix/esm/common.js","../node_modules/gl-matrix/esm/mat3.js","../node_modules/gl-matrix/esm/mat4.js","../node_modules/gl-matrix/esm/vec3.js","../node_modules/gl-matrix/esm/vec4.js","../node_modules/gl-matrix/esm/quat.js","../node_modules/gl-matrix/esm/vec2.js","../src/glprogram.js","../src/glpalette.js","../src/rangelist.js","../src/tileglbuffer.js","../src/hextile.js","../src/hextiletree.js","../src/world.js","../src/glsl-shader.js","../src/oddq_point.js","../src/hex.js","../src/view_gl.js","../src/hexant.js","../index.js"],"sourcesContent":["// Generated by Haxe 3.4.4\nvar hsluv = hsluv || {};\nhsluv.Geometry = function() { };\nhsluv.Geometry.intersectLineLine = function(a,b) {\n\tvar x = (a.intercept - b.intercept) / (b.slope - a.slope);\n\tvar y = a.slope * x + a.intercept;\n\treturn { x : x, y : y};\n};\nhsluv.Geometry.distanceFromOrigin = function(point) {\n\treturn Math.sqrt(Math.pow(point.x,2) + Math.pow(point.y,2));\n};\nhsluv.Geometry.distanceLineFromOrigin = function(line) {\n\treturn Math.abs(line.intercept) / Math.sqrt(Math.pow(line.slope,2) + 1);\n};\nhsluv.Geometry.perpendicularThroughPoint = function(line,point) {\n\tvar slope = -1 / line.slope;\n\tvar intercept = point.y - slope * point.x;\n\treturn { slope : slope, intercept : intercept};\n};\nhsluv.Geometry.angleFromOrigin = function(point) {\n\treturn Math.atan2(point.y,point.x);\n};\nhsluv.Geometry.normalizeAngle = function(angle) {\n\tvar m = 2 * Math.PI;\n\treturn (angle % m + m) % m;\n};\nhsluv.Geometry.lengthOfRayUntilIntersect = function(theta,line) {\n\treturn line.intercept / (Math.sin(theta) - line.slope * Math.cos(theta));\n};\nhsluv.Hsluv = function() { };\nhsluv.Hsluv.getBounds = function(L) {\n\tvar result = [];\n\tvar sub1 = Math.pow(L + 16,3) / 1560896;\n\tvar sub2 = sub1 > hsluv.Hsluv.epsilon ? sub1 : L / hsluv.Hsluv.kappa;\n\tvar _g = 0;\n\twhile(_g < 3) {\n\t\tvar c = _g++;\n\t\tvar m1 = hsluv.Hsluv.m[c][0];\n\t\tvar m2 = hsluv.Hsluv.m[c][1];\n\t\tvar m3 = hsluv.Hsluv.m[c][2];\n\t\tvar _g1 = 0;\n\t\twhile(_g1 < 2) {\n\t\t\tvar t = _g1++;\n\t\t\tvar top1 = (284517 * m1 - 94839 * m3) * sub2;\n\t\t\tvar top2 = (838422 * m3 + 769860 * m2 + 731718 * m1) * L * sub2 - 769860 * t * L;\n\t\t\tvar bottom = (632260 * m3 - 126452 * m2) * sub2 + 126452 * t;\n\t\t\tresult.push({ slope : top1 / bottom, intercept : top2 / bottom});\n\t\t}\n\t}\n\treturn result;\n};\nhsluv.Hsluv.maxSafeChromaForL = function(L) {\n\tvar bounds = hsluv.Hsluv.getBounds(L);\n\tvar min = Infinity;\n\tvar _g = 0;\n\twhile(_g < bounds.length) {\n\t\tvar bound = bounds[_g];\n\t\t++_g;\n\t\tvar length = hsluv.Geometry.distanceLineFromOrigin(bound);\n\t\tmin = Math.min(min,length);\n\t}\n\treturn min;\n};\nhsluv.Hsluv.maxChromaForLH = function(L,H) {\n\tvar hrad = H / 360 * Math.PI * 2;\n\tvar bounds = hsluv.Hsluv.getBounds(L);\n\tvar min = Infinity;\n\tvar _g = 0;\n\twhile(_g < bounds.length) {\n\t\tvar bound = bounds[_g];\n\t\t++_g;\n\t\tvar length = hsluv.Geometry.lengthOfRayUntilIntersect(hrad,bound);\n\t\tif(length >= 0) {\n\t\t\tmin = Math.min(min,length);\n\t\t}\n\t}\n\treturn min;\n};\nhsluv.Hsluv.dotProduct = function(a,b) {\n\tvar sum = 0;\n\tvar _g1 = 0;\n\tvar _g = a.length;\n\twhile(_g1 < _g) {\n\t\tvar i = _g1++;\n\t\tsum += a[i] * b[i];\n\t}\n\treturn sum;\n};\nhsluv.Hsluv.fromLinear = function(c) {\n\tif(c <= 0.0031308) {\n\t\treturn 12.92 * c;\n\t} else {\n\t\treturn 1.055 * Math.pow(c,0.416666666666666685) - 0.055;\n\t}\n};\nhsluv.Hsluv.toLinear = function(c) {\n\tif(c > 0.04045) {\n\t\treturn Math.pow((c + 0.055) / 1.055,2.4);\n\t} else {\n\t\treturn c / 12.92;\n\t}\n};\nhsluv.Hsluv.xyzToRgb = function(tuple) {\n\treturn [hsluv.Hsluv.fromLinear(hsluv.Hsluv.dotProduct(hsluv.Hsluv.m[0],tuple)),hsluv.Hsluv.fromLinear(hsluv.Hsluv.dotProduct(hsluv.Hsluv.m[1],tuple)),hsluv.Hsluv.fromLinear(hsluv.Hsluv.dotProduct(hsluv.Hsluv.m[2],tuple))];\n};\nhsluv.Hsluv.rgbToXyz = function(tuple) {\n\tvar rgbl = [hsluv.Hsluv.toLinear(tuple[0]),hsluv.Hsluv.toLinear(tuple[1]),hsluv.Hsluv.toLinear(tuple[2])];\n\treturn [hsluv.Hsluv.dotProduct(hsluv.Hsluv.minv[0],rgbl),hsluv.Hsluv.dotProduct(hsluv.Hsluv.minv[1],rgbl),hsluv.Hsluv.dotProduct(hsluv.Hsluv.minv[2],rgbl)];\n};\nhsluv.Hsluv.yToL = function(Y) {\n\tif(Y <= hsluv.Hsluv.epsilon) {\n\t\treturn Y / hsluv.Hsluv.refY * hsluv.Hsluv.kappa;\n\t} else {\n\t\treturn 116 * Math.pow(Y / hsluv.Hsluv.refY,0.333333333333333315) - 16;\n\t}\n};\nhsluv.Hsluv.lToY = function(L) {\n\tif(L <= 8) {\n\t\treturn hsluv.Hsluv.refY * L / hsluv.Hsluv.kappa;\n\t} else {\n\t\treturn hsluv.Hsluv.refY * Math.pow((L + 16) / 116,3);\n\t}\n};\nhsluv.Hsluv.xyzToLuv = function(tuple) {\n\tvar X = tuple[0];\n\tvar Y = tuple[1];\n\tvar Z = tuple[2];\n\tvar divider = X + 15 * Y + 3 * Z;\n\tvar varU = 4 * X;\n\tvar varV = 9 * Y;\n\tif(divider != 0) {\n\t\tvarU /= divider;\n\t\tvarV /= divider;\n\t} else {\n\t\tvarU = NaN;\n\t\tvarV = NaN;\n\t}\n\tvar L = hsluv.Hsluv.yToL(Y);\n\tif(L == 0) {\n\t\treturn [0,0,0];\n\t}\n\tvar U = 13 * L * (varU - hsluv.Hsluv.refU);\n\tvar V = 13 * L * (varV - hsluv.Hsluv.refV);\n\treturn [L,U,V];\n};\nhsluv.Hsluv.luvToXyz = function(tuple) {\n\tvar L = tuple[0];\n\tvar U = tuple[1];\n\tvar V = tuple[2];\n\tif(L == 0) {\n\t\treturn [0,0,0];\n\t}\n\tvar varU = U / (13 * L) + hsluv.Hsluv.refU;\n\tvar varV = V / (13 * L) + hsluv.Hsluv.refV;\n\tvar Y = hsluv.Hsluv.lToY(L);\n\tvar X = 0 - 9 * Y * varU / ((varU - 4) * varV - varU * varV);\n\tvar Z = (9 * Y - 15 * varV * Y - varV * X) / (3 * varV);\n\treturn [X,Y,Z];\n};\nhsluv.Hsluv.luvToLch = function(tuple) {\n\tvar L = tuple[0];\n\tvar U = tuple[1];\n\tvar V = tuple[2];\n\tvar C = Math.sqrt(U * U + V * V);\n\tvar H;\n\tif(C < 0.00000001) {\n\t\tH = 0;\n\t} else {\n\t\tvar Hrad = Math.atan2(V,U);\n\t\tH = Hrad * 180.0 / Math.PI;\n\t\tif(H < 0) {\n\t\t\tH = 360 + H;\n\t\t}\n\t}\n\treturn [L,C,H];\n};\nhsluv.Hsluv.lchToLuv = function(tuple) {\n\tvar L = tuple[0];\n\tvar C = tuple[1];\n\tvar H = tuple[2];\n\tvar Hrad = H / 360.0 * 2 * Math.PI;\n\tvar U = Math.cos(Hrad) * C;\n\tvar V = Math.sin(Hrad) * C;\n\treturn [L,U,V];\n};\nhsluv.Hsluv.hsluvToLch = function(tuple) {\n\tvar H = tuple[0];\n\tvar S = tuple[1];\n\tvar L = tuple[2];\n\tif(L > 99.9999999) {\n\t\treturn [100,0,H];\n\t}\n\tif(L < 0.00000001) {\n\t\treturn [0,0,H];\n\t}\n\tvar max = hsluv.Hsluv.maxChromaForLH(L,H);\n\tvar C = max / 100 * S;\n\treturn [L,C,H];\n};\nhsluv.Hsluv.lchToHsluv = function(tuple) {\n\tvar L = tuple[0];\n\tvar C = tuple[1];\n\tvar H = tuple[2];\n\tif(L > 99.9999999) {\n\t\treturn [H,0,100];\n\t}\n\tif(L < 0.00000001) {\n\t\treturn [H,0,0];\n\t}\n\tvar max = hsluv.Hsluv.maxChromaForLH(L,H);\n\tvar S = C / max * 100;\n\treturn [H,S,L];\n};\nhsluv.Hsluv.hpluvToLch = function(tuple) {\n\tvar H = tuple[0];\n\tvar S = tuple[1];\n\tvar L = tuple[2];\n\tif(L > 99.9999999) {\n\t\treturn [100,0,H];\n\t}\n\tif(L < 0.00000001) {\n\t\treturn [0,0,H];\n\t}\n\tvar max = hsluv.Hsluv.maxSafeChromaForL(L);\n\tvar C = max / 100 * S;\n\treturn [L,C,H];\n};\nhsluv.Hsluv.lchToHpluv = function(tuple) {\n\tvar L = tuple[0];\n\tvar C = tuple[1];\n\tvar H = tuple[2];\n\tif(L > 99.9999999) {\n\t\treturn [H,0,100];\n\t}\n\tif(L < 0.00000001) {\n\t\treturn [H,0,0];\n\t}\n\tvar max = hsluv.Hsluv.maxSafeChromaForL(L);\n\tvar S = C / max * 100;\n\treturn [H,S,L];\n};\nhsluv.Hsluv.rgbToHex = function(tuple) {\n\tvar h = \"#\";\n\tvar _g = 0;\n\twhile(_g < 3) {\n\t\tvar i = _g++;\n\t\tvar chan = tuple[i];\n\t\tvar c = Math.round(chan * 255);\n\t\tvar digit2 = c % 16;\n\t\tvar digit1 = (c - digit2) / 16 | 0;\n\t\th += hsluv.Hsluv.hexChars.charAt(digit1) + hsluv.Hsluv.hexChars.charAt(digit2);\n\t}\n\treturn h;\n};\nhsluv.Hsluv.hexToRgb = function(hex) {\n\thex = hex.toLowerCase();\n\tvar ret = [];\n\tvar _g = 0;\n\twhile(_g < 3) {\n\t\tvar i = _g++;\n\t\tvar digit1 = hsluv.Hsluv.hexChars.indexOf(hex.charAt(i * 2 + 1));\n\t\tvar digit2 = hsluv.Hsluv.hexChars.indexOf(hex.charAt(i * 2 + 2));\n\t\tvar n = digit1 * 16 + digit2;\n\t\tret.push(n / 255.0);\n\t}\n\treturn ret;\n};\nhsluv.Hsluv.lchToRgb = function(tuple) {\n\treturn hsluv.Hsluv.xyzToRgb(hsluv.Hsluv.luvToXyz(hsluv.Hsluv.lchToLuv(tuple)));\n};\nhsluv.Hsluv.rgbToLch = function(tuple) {\n\treturn hsluv.Hsluv.luvToLch(hsluv.Hsluv.xyzToLuv(hsluv.Hsluv.rgbToXyz(tuple)));\n};\nhsluv.Hsluv.hsluvToRgb = function(tuple) {\n\treturn hsluv.Hsluv.lchToRgb(hsluv.Hsluv.hsluvToLch(tuple));\n};\nhsluv.Hsluv.rgbToHsluv = function(tuple) {\n\treturn hsluv.Hsluv.lchToHsluv(hsluv.Hsluv.rgbToLch(tuple));\n};\nhsluv.Hsluv.hpluvToRgb = function(tuple) {\n\treturn hsluv.Hsluv.lchToRgb(hsluv.Hsluv.hpluvToLch(tuple));\n};\nhsluv.Hsluv.rgbToHpluv = function(tuple) {\n\treturn hsluv.Hsluv.lchToHpluv(hsluv.Hsluv.rgbToLch(tuple));\n};\nhsluv.Hsluv.hsluvToHex = function(tuple) {\n\treturn hsluv.Hsluv.rgbToHex(hsluv.Hsluv.hsluvToRgb(tuple));\n};\nhsluv.Hsluv.hpluvToHex = function(tuple) {\n\treturn hsluv.Hsluv.rgbToHex(hsluv.Hsluv.hpluvToRgb(tuple));\n};\nhsluv.Hsluv.hexToHsluv = function(s) {\n\treturn hsluv.Hsluv.rgbToHsluv(hsluv.Hsluv.hexToRgb(s));\n};\nhsluv.Hsluv.hexToHpluv = function(s) {\n\treturn hsluv.Hsluv.rgbToHpluv(hsluv.Hsluv.hexToRgb(s));\n};\nhsluv.Hsluv.m = [[3.240969941904521,-1.537383177570093,-0.498610760293],[-0.96924363628087,1.87596750150772,0.041555057407175],[0.055630079696993,-0.20397695888897,1.056971514242878]];\nhsluv.Hsluv.minv = [[0.41239079926595,0.35758433938387,0.18048078840183],[0.21263900587151,0.71516867876775,0.072192315360733],[0.019330818715591,0.11919477979462,0.95053215224966]];\nhsluv.Hsluv.refY = 1.0;\nhsluv.Hsluv.refU = 0.19783000664283;\nhsluv.Hsluv.refV = 0.46831999493879;\nhsluv.Hsluv.kappa = 903.2962962;\nhsluv.Hsluv.epsilon = 0.0088564516;\nhsluv.Hsluv.hexChars = \"0123456789abcdef\";\nvar root = {\n    \"hsluvToRgb\": hsluv.Hsluv.hsluvToRgb,\n    \"rgbToHsluv\": hsluv.Hsluv.rgbToHsluv,\n    \"hpluvToRgb\": hsluv.Hsluv.hpluvToRgb,\n    \"rgbToHpluv\": hsluv.Hsluv.rgbToHpluv,\n    \"hsluvToHex\": hsluv.Hsluv.hsluvToHex,\n    \"hexToHsluv\": hsluv.Hsluv.hexToHsluv,\n    \"hpluvToHex\": hsluv.Hsluv.hpluvToHex,\n    \"hexToHpluv\": hsluv.Hsluv.hexToHpluv,\n    \"lchToHpluv\": hsluv.Hsluv.lchToHpluv,\n    \"hpluvToLch\": hsluv.Hsluv.hpluvToLch,\n    \"lchToHsluv\": hsluv.Hsluv.lchToHsluv,\n    \"hsluvToLch\": hsluv.Hsluv.hsluvToLch,\n    \"lchToLuv\": hsluv.Hsluv.lchToLuv,\n    \"luvToLch\": hsluv.Hsluv.luvToLch,\n    \"xyzToLuv\": hsluv.Hsluv.xyzToLuv,\n    \"luvToXyz\": hsluv.Hsluv.luvToXyz,\n    \"xyzToRgb\": hsluv.Hsluv.xyzToRgb,\n    \"rgbToXyz\": hsluv.Hsluv.rgbToXyz,\n    \"lchToRgb\": hsluv.Hsluv.lchToRgb,\n    \"rgbToLch\": hsluv.Hsluv.rgbToLch\n};\n\nmodule.exports = root;\n","// @ts-check\n\n/** @template T\n * @typedef {(\n * | {value: T, err?: never}\n * | {err: Error, value?: never}\n * )} Result */\n\n/**\n * @template T\n * @param {Result<T>} res\n */\nexport function toValue({ err, value }) {\n  if (err) {\n    throw err;\n  } else {\n    return value;\n  }\n}\n\n/** @template T\n * @param {Result<T>} res\n * @returns {Promise<T>}\n */\nexport function toPromise({ err, value }) {\n  return err\n    ? Promise.reject(err)\n    : Promise.resolve(value);\n}\n\n/**\n * @template T\n * @param {T} value\n * @returns {Result<T>}\n */\nexport function just(value) {\n  return { value };\n}\n\n/**\n * @param {Error} err\n * @returns {Result<never>}\n */\nexport function error(err) {\n  return { err };\n}\n\n/**\n * @template T\n * @param {() => Result<T>} body\n * @returns {Result<T>}\n */\nexport function catchErr(body) {\n  try {\n    return body();\n  } catch (err) {\n    return error(err instanceof Error ? err : new Error(`${err}`));\n  }\n}\n\n/**\n * @template T\n * @param {(...args: any[]) => T} func\n * @returns {(...args: any[]) => Result<T>}\n */\nexport function lift(func) {\n  /** @this {any} */\n  return function rezultLifted(...args) {\n    return catchErr(() => just(func.apply(this, args)));\n  };\n}\n\n/**\n * @template T, S\n * @param {Result<T>} res\n * @param {(t: T) => Result<S>} next\n * @returns {Result<S>}\n */\nexport function bind(res, next) {\n  return res.err ? res : next(res.value);\n}\n","// @ts-check\n\nimport { hsluvToRgb } from 'hsluv';\n\nimport * as rezult from './rezult.js';\n\n/** A color tuple in some color space (e.g. rgb or hsl)\n *\n * @typedef {[a: number, b: number, c: number]} ColorTuple\n */\n\n/** A function which can generate N color tuples\n *\n * @typedef {(n: number) => IterableIterator<ColorTuple>} ColorGen\n */\n\n/** A factory for creating N-color generators for a given intensity level\n *\n * The view module currently uses these intensity levels for fixed roles:\n * 0: empty cells\n * 1: ant traced cells\n * 2: ant body\n * 3: ant head\n *\n * @typedef {object} ColorGenMaker\n * @prop {(intensity: number) => ColorGen} makeColorGen\n * @prop {() => string} toString\n */\n\n/** A family of N-color-generator factories, parameterized by 2 arguments\n *\n * Family implementations must provide argument defaults\n *\n * Family aguments are presumabley 2 fixed color space but not necessarily so...\n *\n * @typedef {(a?: number, b?: number) => ColorGenMaker} ColorGenFam2\n */\n\n/** @type {Map<string, ColorGenFam2>} */\nconst gens = new Map();\n\n/**\n * @param {string} str\n * @returns {rezult.Result<ColorGenMaker>}\n */\nexport default function parse(str) {\n  const match = /^(\\w+)(?:\\((.*)\\))?$/.exec(str);\n  if (!match) {\n    return rezult.error(new Error('invalid color spec'));\n  }\n\n  const name = match[1] || '';\n  const gen = gens.get(name);\n  if (!gen) {\n    const choices = Object.keys(gens).sort().join(', ');\n    return rezult.error(new Error(\n      `no such color scheme ${JSON.stringify(name)}, valid choices: ${choices}`\n    ));\n  }\n\n  const args = match[2] ? match[2].split(/, */) : [];\n  const a = args[0] ? parseInt(args[0], 10) : undefined;\n  const b = args[1] ? parseInt(args[1], 10) : undefined;\n\n  return rezult.just(gen(a, b));\n}\n\ngens.set('light', (hue = 0, sat = 100) => {\n  if (hue === 0) {\n    hue = 360;\n  }\n  return {\n    toString() {\n      return `light(${hue}, ${sat})`;\n    },\n    makeColorGen(intensity) {\n      const h = hue * (1 + (intensity - 1) / 3) % 360;\n      return function*(ncolors) {\n        const step = 100 / (ncolors + 1);\n        for (let i = 0, l = step; i < ncolors; l += step, i++) {\n          yield hsluvToRgb([h, sat, l]);\n        }\n      };\n    },\n  };\n});\n\ngens.set('hue', (sat = 70, light = 40) => {\n  const satDelta = sat > 70 ? -10 : 10;\n  const lightDelta = light > 70 ? -10 : 10;\n  return {\n    toString() {\n      return `hue(${sat}, ${light})`;\n    },\n    makeColorGen(intensity) {\n      const mySat = sat + satDelta * intensity;\n      const myLight = light + lightDelta * intensity;\n      return function*(ncolors) {\n        const step = 360 / ncolors;\n        for (let i = 0, h = 0; i < ncolors; h += step, i++) {\n          yield [h, mySat, myLight];\n        }\n      };\n    },\n  };\n});\n\n// TODO: implement a 'hsluv' family\n","// @ts-check\n\n/**\n * @template {abstract new(...args: any[]) => any} T\n * @param {HTMLElement} el\n * @param {string} selector\n * @param {T} type\n * @returns {InstanceType<T>}\n */\nexport function mustQuery(el, selector, type) {\n  const res = el.querySelector(selector);\n  if (!res) {\n    throw new Error(`unable to find a ${selector}`);\n  }\n  if (!(res instanceof type)) {\n    throw new Error(`invalid ${selector} element, must be a ${type.name} instance`);\n  }\n  return /** @type {InstanceType<T>} */ (res);\n}\n\n/**\n * @template {abstract new(...args: any[]) => any} T\n * @param {HTMLElement} el\n * @param {string} selector\n * @param {T} type\n * @returns {InstanceType<T>|null}\n */\nexport function mayQuery(el, selector, type) {\n  const res = el.querySelector(selector);\n  if (!res) {\n    return null;\n  }\n  if (!(res instanceof type)) {\n    throw new Error(`invalid ${selector} element, must be a ${type.name} instance`);\n  }\n  return /** @type {InstanceType<T>} */ (res);\n}\n","// @ts-check\n\nimport * as rezult from './rezult.js';\n\n/** @param {Window} window */\nexport default function makeHash(window) {\n  const codecs = makeCodecSuite();\n\n  codecs.addCodec('', {\n    encodeKeys(keyvals) {\n      const parts = [];\n      for (const [key, val] of keyvals) {\n        let part = encodeURIComponent(key);\n        if (val !== undefined && val !== '') {\n          part += '=' + encodeURIComponent(val);\n        }\n        parts.push(part);\n      }\n      return parts.join('&');\n    },\n    *decodeKeys(str) {\n      for (const part of str.split('&')) {\n        let [key, val] = part.split('=');\n        key = decodeURIComponent(key || '');\n        val = decodeURIComponent(val || '');\n        if (key) {\n          yield [key, val];\n        }\n      }\n    },\n  });\n\n  codecs.addCodec('b64:', {\n    encode: btoa,\n    decode: atob,\n    // TODO direct key codec is possible, no need to url-escape under base64\n  });\n\n  /** @type {Map<string, string>} */\n  const cache = new Map();\n\n  /** @type {Map<string, any>} */\n  const values = new Map();\n\n  /** @type {Map<string, any>} */\n  const defaults = new Map();\n\n  /** @type {Map<string, (s: string) => rezult.Result<any>>} */\n  const parsers = new Map();\n\n  /** @type {Map<string, (val: any) => (string|undefined)>} */\n  const stringers = new Map();\n\n  /** @type {Map<string, Array<(val: any) => void>>} */\n  const listeners = new Map();\n\n  let last = '';\n  let loaded = false;\n\n  window.addEventListener('hashchange', () => reload());\n\n  function reload(hash = window.location.hash) {\n    if (loaded && hash !== last) {\n      load(hash);\n    }\n  }\n\n  function load(hash = window.location.hash) {\n    const resave = loadValues(hash);\n    last = hash;\n    if (resave) {\n      save();\n    }\n  }\n\n  function save() {\n    let hash = codecs.encode(cache.entries());\n    if (hash) {\n      hash = '#' + hash;\n    }\n    if (hash !== last) {\n      last = hash;\n      window.location.hash = hash;\n    }\n  }\n\n  /** @param {string} hash */\n  function loadValues(hash) {\n    let resave = false;\n    /** @type Set<string> */\n    const seen = new Set();\n    /** @type {{key: string, value: any}[]} */\n    const toNotify = [];\n\n    for (const [key, str] of codecs.decode(hash.slice(1))) {\n      seen.add(key);\n      if (cache.get(key) !== str) {\n        cache.set(key, str);\n        toNotify.push({ key, value: loadBinding(key) });\n      }\n    }\n\n    for (const [key, value] of defaults.entries()) {\n      if (!seen.has(key)) {\n        seen.add(key);\n        if (values.get(key) !== value) {\n          if (value === undefined) {\n            values.delete(key);\n            cache.delete(key);\n          } else {\n            values.set(key, value);\n            const stringer = stringers.get(key) || valueToString;\n            const str = stringer(value);\n            if (str !== undefined) {\n              cache.set(key, str);\n            } else {\n              cache.delete(key);\n            }\n          }\n          toNotify.push({ key, value });\n          resave = true;\n        }\n      }\n    }\n\n    for (const key of cache.keys()) {\n      if (!seen.has(key)) {\n        seen.add(key);\n        cache.delete(key);\n        values.delete(key);\n        toNotify.push({ key, value: defaults.get(key) });\n        resave = true;\n      }\n    }\n\n    for (const { key, value } of toNotify) {\n      notifyBinding(key, value);\n    }\n\n    loaded = true;\n    return resave;\n  }\n\n  /** @param {string} key */\n  function loadBinding(key) {\n    const str = cache.get(key);\n    if (str === undefined) {\n      return defaults.get(key);\n    }\n\n    const parser = parsers.get(key) || parseValue;\n\n    let { err, value } = parser(str);\n    if (err) {\n      // intentionally ignore parse error; best-effort load\n      return;\n    }\n\n    if (values.get(key) !== value) {\n      if (value === undefined) {\n        values.delete(key);\n      } else {\n        values.set(key, value);\n      }\n    }\n\n    if (value === undefined) {\n      return defaults.get(key);\n    }\n\n    return value;\n  }\n\n  /** @param {string} key */\n  function saveBinding(key, value = values.get(key)) {\n    const stringer = stringers.get(key) || valueToString;\n    const str = stringer(value);\n    if (cache.get(key) !== str) {\n      if (str === undefined) {\n        cache.delete(key);\n      } else {\n        cache.set(key, str);\n      }\n      save();\n    }\n  }\n\n  /**\n   * @param {string} key\n   * @param {any} value\n   */\n  function notifyBinding(key, value) {\n    for (const fn of listeners.get(key) || []) {\n      fn(value);\n    }\n  }\n\n  /**\n   * @param {string} key\n   * @param {any} val\n   */\n  function parseBindingValue(key, val) {\n    if ((val === null || val === undefined) && defaults.has(key)) {\n      val = defaults.get(key);\n    }\n    let res = rezult.just(val);\n    /** @type {string|undefined} */\n    let str = '';\n    if (typeof val === 'string') {\n      const parser = parsers.get(key) || parseValue;\n      res = parser(val), str = val;\n    } else {\n      const stringer = stringers.get(key) || valueToString;\n      str = stringer(val);\n    }\n    return { res, str };\n  }\n\n  /**\n   * @param {any} val\n   * @returns {string|undefined}\n   */\n  function valueToString(val) {\n    if (val === false) {\n      return undefined;\n    }\n    if (val === true) {\n      return '';\n    }\n    return '' + val;\n  }\n\n  /**\n   * @param {string} str\n   * @returns {rezult.Result<any>}\n   */\n  function parseValue(str) {\n    if (str === '' || str === 'true') {\n      return rezult.just(true);\n    }\n    if (str === 'false') {\n      return rezult.just(false);\n    }\n    if (str === 'null') {\n      return rezult.just(null);\n    }\n    return rezult.just(str);\n  }\n\n  return {\n    get encoding() {\n      return codecs.defaultEncoding;\n    },\n    set encoding(enc) {\n      codecs.defaultEncoding = enc;\n      save();\n    },\n\n    /** @template T\n     * @param {string} key\n     * @param {object} params\n     * @param {T} params.defaultValue\n     * @param {(val: T) => void} params.listener\n     * @param {(str: string) => rezult.Result<T>} [params.parse]\n     * @param {(val: T) => string|undefined} [params.stringer]\n     */\n    bind(key, {\n      parse = parseValue,\n      stringer = valueToString,\n      listener,\n      defaultValue,\n    }) {\n      if (typeof defaultValue === 'string') {\n        defaultValue = rezult.toValue(parse(defaultValue));\n      }\n      parsers.set(key, parse);\n      stringers.set(key, stringer);\n      defaults.set(key, defaultValue);\n      if (listener) {\n        listeners.set(key, [listener]);\n      } else {\n        listeners.delete(key);\n      }\n\n      if (loaded) {\n        const value = loadBinding(key);\n        saveBinding(key, value);\n        notifyBinding(key, value);\n      }\n    },\n\n    load,\n\n    /** @param {string} key */\n    getStr(key) {\n      const prior = cache.get(key);\n      if (prior !== undefined) {\n        return prior;\n      }\n\n      const defaultValue = defaults.get(key);\n      if (defaultValue !== undefined && typeof defaultValue !== 'string') {\n        const stringer = stringers.get(key) || valueToString;\n        const defaultString = stringer(defaultValue);\n        if (defaultString !== undefined) {\n          return defaultString;\n        }\n      }\n\n      return '';\n    },\n\n    /** @param {string} key */\n    get(key) {\n      return values.get(key);\n    },\n\n    /**\n     * @param {string} key\n     * @param {any} val\n     */\n    set(key, val) {\n      const r = parseBindingValue(key, val);\n      const { res: { err, value } } = r;\n      if (!err && values.get(key) !== value) {\n        values.set(key, value);\n        saveBinding(key, value);\n        notifyBinding(key, value);\n      }\n      return r;\n    },\n\n    [Symbol.iterator]() {\n      return values.entries();\n    },\n\n    stringEntries() {\n      return cache.entries();\n    },\n\n  };\n}\n\nfunction makeCodecSuite() {\n\n  /** @type {string[]} */\n  let defaultEncoding = [];\n\n  /** @type {Map<string, (s: string) => string>} */\n  const encoders = new Map();\n\n  /** @type {Map<string, (s: string) => string>} */\n  const decoders = new Map();\n\n  /** @type {Map<string, (keyvals: Iterable<[key: string, val: string]>) => string>} */\n  const keyEncoders = new Map();\n\n  /** @type {Map<string, (s: string) => IterableIterator<[key: string, val: string]>>} */\n  const keyDecoders = new Map();\n\n  /**\n   * @param {Iterable<[key: string, val: string]>} keyvals\n   * @returns {string}\n   */\n  function encode(keyvals) {\n    let encoded = '';\n\n    let i = 0;\n\n    // if the first encoder can directly handle keys, let it; otherwise,\n    // fallback to a base key encoder, and proceed to the wrapping phase\n    const firstKey = defaultEncoding[i];\n    let firstEnc = firstKey && keyEncoders.get(firstKey);\n    if (firstEnc) {\n      encoded = firstKey + firstEnc(keyvals);\n      i++;\n    } else {\n      firstEnc = keyEncoders.get('');\n      if (!firstEnc) {\n        throw new Error('no default keyEncoder available!');\n      }\n      encoded = firstEnc(keyvals);\n    }\n\n    // apply any number of wrapped string encodings\n    for (; i < defaultEncoding.length; i++) {\n      const key = defaultEncoding[i];\n      const enc = key && encoders.get(key);\n      if (enc) {\n        encoded = key + enc(encoded);\n      } else {\n        break;\n      }\n    }\n\n    return encoded;\n  }\n\n  /**\n   * @param {string} str\n   * @returns {IterableIterator<[key: string, val: string]>}\n   */\n  function decode(str) {\n    const orig = str;\n    round: for (let sanity = 100; sanity-- > 0;) {\n      // prefer to decode directly into final keyvals when possible\n      for (const [key, decoder] of keyDecoders) {\n        if (str.startsWith(key)) {\n          return decoder(str.slice(key.length));\n        }\n      }\n      // intermediate string encoding\n      for (const [key, decoder] of decoders) {\n        if (str.startsWith(key)) {\n          str = decoder(str.slice(key.length));\n          continue round;\n        }\n      }\n      // exhausted all possible decoders, unable to progress\n      break;\n    }\n    if (str === orig) {\n      throw new Error(`unable to decode: ${JSON.stringify(str)}`);\n    } else {\n      throw new Error(`unable to decode: ${JSON.stringify(str)}, original form: ${JSON.stringify(orig)}`);\n    }\n  }\n\n  /**\n   * @param {string} key\n   * @param {object} codec\n   * @param {(s: string) => string} [codec.encode]\n   * @param {(s: string) => string} [codec.decode]\n   * @param {(keyvals: Iterable<[key: string, val: string]>) => string} [codec.encodeKeys]\n   * @param {(s: string) => IterableIterator<[key: string, val: string]>} [codec.decodeKeys]\n   */\n  function addCodec(key, { encode, decode, encodeKeys, decodeKeys }) {\n    if (encode) {\n      encoders.set(key, encode);\n    }\n    if (decode) {\n      decoders.set(key, decode);\n    }\n    if (encodeKeys) {\n      keyEncoders.set(key, encodeKeys);\n    }\n    if (decodeKeys) {\n      keyDecoders.set(key, decodeKeys);\n    }\n  }\n\n  return {\n    get defaultEncoding() {\n      switch (defaultEncoding.length) {\n        case 0:\n          return '';\n        case 1:\n          return defaultEncoding[0] || '';\n        default:\n          return defaultEncoding.join('');\n      }\n    },\n    set defaultEncoding(enc) {\n      const encs = [];\n      let rem = enc;\n      parse: while (rem.length) {\n        for (const key of encoders.keys()) {\n          if (rem.startsWith(key)) {\n            encs.push(key);\n            rem = rem.slice(key.length);\n            continue parse;\n          }\n        }\n        throw new Error(`invalid encoding ${JSON.stringify(rem)} in ${JSON.stringify(enc)}`);\n      }\n      defaultEncoding = encs;\n    },\n\n    addCodec,\n\n    encode,\n    decode,\n  };\n}\n","// @ts-check\n\nimport { mayQuery } from './domkit.js';\n\n/** @template T\n * @typedef {Generator<Output[], T, Input[]>} Interactor\n */\n\n/** @template T\n * @typedef {(inputs: Input[]) => Generator<Output, T|undefined>} Looper\n */\n\n/** @typedef {(\n * | {value: string}\n * | {command: string}\n * )} Input */\n\n/** @typedef {(\n * | {title: string}\n * | {value: string}\n * | {help: string|Iterable<string>}\n * | {error: string}\n * | {command: string, label?: string}\n * )} Output */\n\n/** @typedef {(...args: string[]) => Iterable<Output>} Command */\n\n/**\n * @template T\n * @param {() => HTMLElement} makeEl\n * @param {Interactor<T>} tor\n */\nexport async function runPrompt(makeEl, tor) {\n  const $el = makeEl();\n  try {\n    return await prompt($el, tor);\n  } finally {\n    $el.parentNode?.removeChild($el);\n  }\n}\n\n/** @template T\n * @param {HTMLElement} $body\n * @param {Interactor<T>} tor\n * @returns {Promise<T|undefined>}\n */\nexport async function prompt($body, tor) {\n  /** @typedef {(\n   * | {value: string}\n   * | {command: string}\n   * | {canceled: true}\n   * )} Response */\n\n  const handleEvents = ['click', 'keydown', 'keyup'];\n\n  /** @type {((res: Response) => void)} */\n  let callback = () => { };\n\n  function makeHeader() {\n    let $header = mayQuery($body, 'h1', HTMLHeadingElement);\n    if (!$header) {\n      $header = $body.insertBefore(\n        $body.ownerDocument.createElement('h1'),\n        $body.firstElementChild);\n    }\n    return $header;\n  }\n\n  function makeText() {\n    let $text = mayQuery($body, '#text', HTMLTextAreaElement);\n    if (!$text) {\n      $text = $body.appendChild(\n        $body.ownerDocument.createElement('textarea'));\n      $text.id = 'text';\n    }\n    return $text;\n  }\n\n  function makeHelp() {\n    let $help = mayQuery($body, '#help', HTMLElement);\n    if (!$help) {\n      $help = $body.appendChild(\n        $body.ownerDocument.createElement('div'));\n      $help.id = 'help';\n      $help.classList.add('help');\n    }\n    return $help;\n  }\n\n  function makeError() {\n    let $error = mayQuery($body, '#error', HTMLElement);\n    if (!$error) {\n      $error = $body.appendChild(\n        $body.ownerDocument.createElement('div'));\n      $error.id = 'error';\n      $error.classList.add('error');\n    }\n    return $error;\n  }\n\n  /**\n   * @param {object} options\n   * @param {string} options.id\n   * @param {string} options.label\n   * @param {string} [options.title]\n   */\n  function makeButton({ id, label, title }) {\n    let $btn = mayQuery($body, `button[id=\"${id}\"]`, HTMLButtonElement);\n    if (!$btn) {\n      $btn = $body.appendChild(\n        $body.ownerDocument.createElement('button'));\n      $btn.id = id;\n    }\n    $btn.innerText = label;\n    $btn.title = title || '';\n    return $btn;\n  }\n\n  function resetOutputElements() {\n    const $header = mayQuery($body, 'h1', HTMLHeadingElement);\n    if ($header) {\n      $header.style.display = 'none';\n      $header.innerText = '';\n    }\n\n    const $text = mayQuery($body, '#text', HTMLTextAreaElement);\n    if ($text) {\n      $text.value = '';\n      $text.rows = 1;\n    }\n\n    const $help = mayQuery($body, '#help', HTMLElement);\n    if ($help) {\n      $help.style.display = 'none';\n      $help.innerText = '';\n    }\n\n    const $error = mayQuery($body, '#error', HTMLElement);\n    if ($error) {\n      $error.style.display = 'none';\n      $error.innerText = '';\n    }\n  }\n\n  function resizeTextRows() {\n    let $text = mayQuery($body, '#text', HTMLTextAreaElement);\n    if ($text) {\n      const lines = $text.value.split(/\\n/);\n      $text.rows = lines.length + 1;\n    }\n  }\n\n  let lastEnter = 0;\n\n  /** @param {Event} e */\n  function handleEvent(e) {\n    switch (e.type) {\n\n      case 'click':\n        {\n          const { target } = e;\n          if (target && target instanceof HTMLButtonElement) {\n            const { command } = target.dataset;\n            if (command) {\n              e.preventDefault();\n              callback({ command });\n            }\n          }\n        }\n        break;\n\n      case 'keydown':\n        if (e instanceof KeyboardEvent) {\n          switch (e.key) {\n\n            case 'Enter':\n              const $text = mayQuery($body, '#text', HTMLTextAreaElement);\n              if ($text && e.target === $text) {\n                if (e.ctrlKey) {\n                  e.preventDefault();\n                }\n              }\n              break;\n\n            case 'Escape':\n              e.preventDefault();\n              callback({ canceled: true });\n              return;\n\n          }\n          resizeTextRows();\n        }\n        break;\n\n      case 'keyup':\n        if (e instanceof KeyboardEvent) {\n          switch (e.key) {\n\n            case 'Enter':\n              const $text = mayQuery($body, '#text', HTMLTextAreaElement);\n              if ($text && e.target === $text) {\n                if (Date.now() - lastEnter < 1000 || e.ctrlKey) {\n                  e.preventDefault();\n                  callback({ value: $text ? $text.value.replace(/(?:\\r?\\n)+$/, '') : '' });\n                  return;\n                }\n                lastEnter = Date.now();\n              }\n              break;\n\n            default:\n              lastEnter = 0;\n\n          }\n          resizeTextRows();\n        }\n        break;\n\n    }\n  }\n\n  const _canceled = new Object();\n  try {\n    $body.style.display = '';\n    for (const event of handleEvents)\n      $body.addEventListener(event, handleEvent);\n\n    /** @type {Input[]} */\n    let inputs = [];\n    for (; ;) {\n\n      { // tick tor\n        const { done, value } = tor.next(inputs);\n        if (done) { return value }\n        const outputs = value;\n\n        resetOutputElements();\n\n        /** @type {WeakSet<HTMLButtonElement>} */\n        const activeButtons = new WeakSet();\n\n        for (const output of outputs) {\n          if ('title' in output) {\n            const { title } = output;\n            const $header = makeHeader();\n            $header.innerText = title;\n            $header.style.display = '';\n          }\n\n          else if ('value' in output) {\n            const { value } = output;\n            const $text = makeText();\n            $text.value = value;\n            resizeTextRows();\n            $text.select();\n            $text.focus();\n          }\n\n          else if ('error' in output) {\n            const { error } = output;\n            if (error) {\n              const $error = makeError();\n              $error.innerText = error;\n              $error.style.display = '';\n            }\n          }\n\n          else if ('help' in output) {\n            const { help } = output;\n            if (help) {\n              const $help = makeHelp();\n              $help.innerText += typeof help == 'string' ? terminate(help) : coalesce(help);\n              $help.style.display = '';\n            }\n          }\n\n          else if ('command' in output) {\n            const { command, label = command } = output;\n            const id = `${$body.id}$${command}`;\n            const $btn = makeButton({ id, label });\n            $btn.dataset['command'] = command;\n            activeButtons.add($btn);\n          }\n\n          else assertNever(output, 'unimplemented');\n        }\n\n        for (const $btn of $body.querySelectorAll('button')) {\n          if (!activeButtons.has($btn)) {\n            $body.removeChild($btn);\n          }\n        }\n      }\n\n      { // wait for user\n        inputs = [];\n        const res = await /** @type {Promise<Response>} */ (\n          new Promise(resolve => callback = resolve));\n        callback = () => { };\n        if ('canceled' in res) { throw _canceled }\n        else inputs.push(res);\n      }\n    }\n  } catch (e) {\n    if (e !== _canceled) throw e;\n    return undefined;\n  } finally {\n    for (const event of handleEvents)\n      $body.removeEventListener(event, handleEvent);\n    $body.style.display = 'none';\n    while ($body.lastChild) $body.removeChild($body.lastChild);\n  }\n}\n\n/** @param {Iterable<string>} strs */\nfunction coalesce(strs, sep = '\\n') {\n  let out = '';\n  for (const str of strs) {\n    out += terminate(str, sep);\n  }\n  return out;\n}\n\n/** @param {string} str */\nfunction terminate(str, end = '\\n') {\n  return str.endsWith(end) ? str : `${str}${end}`;\n}\n\n/** @template T\n * @param {Looper<T>[]} loopers\n * @returns {Interactor<T>}\n */\nexport function loop(...loopers) {\n  const body = firstLooper(...loopers);\n  return function*() {\n    let { values: outputs, value } = collectIt(body([]));\n    while (value === undefined) {\n      const inputs = yield outputs;\n      ({ values: outputs, value } = collectIt(body(inputs)));\n    }\n    return value;\n  }();\n}\n\n/** @template T\n * @param {Looper<T>[]} loopers\n * @returns {Looper<T>}\n */\nfunction firstLooper(...loopers) {\n  switch (loopers.length) {\n    case 0:\n      return function*() { return undefined };\n    case 1:\n      return loopers[0];\n  }\n  return function*(inputs) {\n    for (const looper of loopers) {\n      const gen = looper(inputs);\n      const { done, value: first } = gen.next();\n\n      // looper produces output, so the rest don't get a shot this round\n      if (!done) {\n        yield first;\n        return yield* gen;\n      }\n\n      // looper returned a final result, we'll take it!\n      if (first !== undefined) {\n        return first;\n      }\n    }\n\n    // we'll have to do this all again with a different batch of inputs\n    return undefined;\n  };\n}\n\n/** @template V, R\n * @param {Iterator<V, R>} it\n */\nfunction collectIt(it) {\n  /** @type {V[]} */\n  const values = [];\n  for (; ;) {\n    const { done, value } = it.next();\n    if (done) { return { values, value } }\n    values.push(value);\n  }\n}\n\n/**\n * @param {never} impossible\n * @param {string} mess\n */\nfunction assertNever(impossible, mess) {\n  throw new Error(`${mess}: ${JSON.stringify(impossible)}`);\n}\n","// @ts-check\n\n/* TODO:\n * - evaluate online sorting\n * - improve anomaly scoring\n * - better consider all the marking stuff in context of its use case\n * - maybe split out the marking stuff, and combine it with its use case\n *   around animation throttling into a separate subclass\n */\n\n// TODO recall what the point / idea of TIGHT_TOL and subsequent mode switching\n// under classifyAnomalies\nconst TIGHT_TOL = 0.1;\n\nexport class Sample {\n\n  /** @param {number} n */\n  constructor(n) {\n    this.n = n;\n    /** @type {number[]} */\n    this.data = [];\n    this.lastMark = 0;\n    this.markWeight = 1;\n  }\n\n  // TODO sort out and document the semantics of marking and weight\n\n  mark() {\n    this.markWeight = 1;\n    this.lastMark = this.data.length;\n  }\n\n  /** @param {number} weight */\n  weightedMark(weight) {\n    if (this.lastMark > 0) {\n      this.markWeight *= weight;\n    }\n    this.lastMark = this.data.length;\n  }\n\n  sinceWeightedMark() {\n    return (this.data.length - this.lastMark) / this.markWeight;\n  }\n\n  sinceMark() {\n    return this.data.length - this.lastMark;\n  }\n\n  reset() {\n    this.data.length = 0;\n    this.lastMark = 0;\n    this.markWeight = 1;\n  }\n\n  complete() {\n    return this.data.length >= this.n;\n  }\n\n  /** @param {number} datum */\n  collect(datum) {\n    while (this.data.length >= this.n) {\n      this.data.shift();\n    }\n    this.data.push(datum);\n    if (this.lastMark > 0) {\n      if (--this.lastMark === 0) {\n        this.markWeight = 1;\n      }\n    }\n  }\n\n  classifyAnomalies() {\n    const q = this.quantileSelector();\n    const q25 = q(0.25), q50 = q(0.50), q75 = q(0.75);\n    const iqr = q75 - q25;\n    const { data } = this;\n\n    // TODO what is this?\n    if (iqr / q50 < TIGHT_TOL) {\n      return data.map(\n        datum => datum / q50 - 1\n      );\n    }\n\n    // const lh = q50 - q25;\n    // const rh = q75 - q50;\n    // const skew = (rh - lh) / iqr;\n\n    const tol = iqr * 1.5;\n    const lo = q25 - tol;\n    const hi = q75 + tol;\n\n    return data.map(datum => {\n      if (datum < lo) {\n        return (datum - lo) / iqr;\n      } else if (datum > hi) {\n        return (datum - hi) / iqr;\n      } else {\n        return 0;\n      }\n    });\n  }\n\n  /** @returns {(q: number) => number} */\n  quantileSelector() {\n    // TODO when is a cleverer data structure / algo worth?\n    const S = [...this.data];\n    S.sort((a, b) => a - b);\n    return q => {\n      const i = q * S.length;\n      // @ts-ignore proven by S.length bound in prior line\n      return S[Math.floor(i)] / 2 + S[Math.ceil(i)] / 2;\n    }\n  }\n}\n","// @ts-check\n\nexport class ScreenPoint {\n  /**\n   * @param {number} [x]\n   * @param {number} [y]\n   */\n  constructor(x = 0, y = 0) {\n    this.x = x;\n    this.y = y;\n  }\n\n  type = 'point.screen'\n\n  copy() {\n    return new ScreenPoint(this.x, this.y);\n  }\n\n  /** @param {ScreenPoint} other */\n  copyFrom(other) {\n    this.x = other.x;\n    this.y = other.y;\n    return this;\n  }\n\n  toString() {\n    return `ScreenPoint(${this.x}, ${this.y});`\n  }\n\n  /** @param {ScreenPoint} screenPoint */\n  toScreenInto(screenPoint) {\n    screenPoint.x = this.x;\n    screenPoint.y = this.y;\n    return screenPoint;\n  }\n\n  toScreen() {\n    return this;\n  }\n\n  /** @param {number} n */\n  scale(n) {\n    this.x *= n;\n    this.y *= n;\n    return this;\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   */\n  mulBy(x, y) {\n    this.x *= x;\n    this.y *= y;\n    return this;\n  }\n\n  /** @param {ScreenPoint} other */\n  add(other) {\n    if (other.type !== this.type) {\n      other = other.toScreen();\n    }\n    this.x += other.x;\n    this.y += other.y;\n    return this;\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   */\n  addTo(x, y) {\n    this.x += x;\n    this.y += y;\n    return this;\n  }\n\n  /** @param {ScreenPoint} other */\n  sub(other) {\n    if (other.type !== this.type) {\n      other = other.toScreen();\n    }\n    this.x -= other.x;\n    this.y -= other.y;\n    return this;\n  }\n}\n\nexport class CubePoint {\n  /**\n   * @param {number} [x]\n   * @param {number} [y]\n   * @param {number} [z]\n   */\n  constructor(x = 0, y = 0, z = 0) {\n    if (x + y + z !== 0) {\n      throw new Error(`CubePoint invariant violated: ${x} + ${y} + ${z} = ${x + y + z}`);\n    }\n    this.x = x;\n    this.y = y;\n    this.z = z;\n  }\n\n  type = 'point.cube'\n\n  toString() {\n    return `CubePoint(${this.x}, ${this.y}, ${this.z})`;\n  }\n\n  copy() {\n    return new CubePoint(this.x, this.y, this.z);\n  }\n\n  /** @param {CubePoint} other */\n  copyFrom(other) {\n    if (other.type !== this.type) {\n      return other.toCubeInto(this);\n    }\n    this.x = other.x;\n    this.y = other.y;\n    this.z = other.z;\n    return this;\n  }\n\n  /** @param {CubePoint} other */\n  add(other) {\n    if (other.type !== this.type) {\n      other = other.toCube();\n    }\n    this.x += other.x;\n    this.y += other.y;\n    this.z += other.z;\n    return this;\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @param {number} z\n   */\n  addTo(x, y, z) {\n    this.x += x;\n    this.y += y;\n    this.z += z;\n    return this;\n  }\n\n  /** @param {CubePoint} other */\n  sub(other) {\n    if (other.type !== this.type) {\n      other = other.toCube();\n    }\n    this.x -= other.x;\n    this.y -= other.y;\n    this.z -= other.z;\n    return this;\n  }\n\n  /**\n   * @param {number} n\n   */\n  scale(n) {\n    this.x *= n;\n    this.y *= n;\n    this.z *= n;\n    return this;\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @param {number} z\n   */\n  mulBy(x, y, z) {\n    this.x *= x;\n    this.y *= y;\n    this.z *= z;\n    return this;\n  }\n\n  /** @param {ScreenPoint} screenPoint */\n  toScreenInto(screenPoint) {\n    screenPoint.x = 3 / 2 * this.x;\n    screenPoint.y = Math.sqrt(3) * (this.z + this.x / 2);\n    return screenPoint;\n  }\n\n  toScreen() {\n    return this.toScreenInto(new ScreenPoint());\n  }\n\n  /** @param {CubePoint} other */\n  toCubeInto(other) {\n    other.x = this.x;\n    other.y = this.y;\n    other.z = this.z;\n    return other;\n  }\n\n  toCube() {\n    return this;\n  }\n\n  toOddQOffset() {\n    const q = this.x;\n    const r = this.z + (this.x - (this.x & 1)) / 2;\n    return new OddQOffset(q, r);\n  }\n\n  /** @param {OddQOffset} oqo */\n  toOddQOffsetInto(oqo) {\n    oqo.q = this.x;\n    oqo.r = this.z + (this.x - (this.x & 1)) / 2;\n  }\n\n  static basis = [\n    new CubePoint(1, -1, 0), // SE -- 0, 1\n    new CubePoint(0, -1, 1), // S  -- 1, 2\n    new CubePoint(-1, 0, 1), // SW -- 2, 3\n    new CubePoint(-1, 1, 0), // NW -- 3, 4\n    new CubePoint(0, 1, -1), // N  -- 4, 5\n    new CubePoint(1, 0, -1)  // NE -- 5, 0\n  ]\n}\n\n/**\n * @typedef {object} oddQPotent\n * @prop {(oqo: OddQOffset) => void} toOddQOffsetInto\n */\n\n/**\n * @typedef {object} oddQToable\n * @prop {() => OddQOffset} toOddQOffset\n */\n\nexport class OddQOffset {\n  /**\n   * @param {number} [q]\n   * @param {number} [r]\n   */\n  constructor(q = 0, r = 0) {\n    this.q = q;\n    this.r = r;\n  }\n\n  type = 'offset.odd-q'\n\n  toString() {\n    return `OddQOffset(${this.q}, ${this.r})`;\n  }\n\n  copy() {\n    return new OddQOffset(this.q, this.r);\n  }\n\n  /** @param {oddQPotent} other */\n  copyFrom(other) {\n    other.toOddQOffsetInto(this);\n    return this;\n  }\n\n  /** @param {OddQOffset|oddQToable} other */\n  add(other) {\n    if (other instanceof OddQOffset) {\n      const { q, r } = other;\n      this.q += q, this.r += r;\n    } else {\n      const { q, r } = other.toOddQOffset();\n      this.q += q, this.r += r;\n    }\n    return this;\n  }\n\n  /**\n   * @param {number} q\n   * @param {number} r\n   */\n  addTo(q, r) {\n    this.q += q;\n    this.r += r;\n    return this;\n  }\n\n  /** @param {OddQOffset|oddQToable} other */\n  sub(other) {\n    if (other instanceof OddQOffset) {\n      const { q, r } = other;\n      this.q -= q, this.r -= r;\n    } else {\n      const { q, r } = other.toOddQOffset();\n      this.q -= q, this.r -= r;\n    }\n    return this;\n  }\n\n  /**\n   * @param {number} n\n   */\n  scale(n) {\n    this.q *= n;\n    this.r *= n;\n    return this;\n  }\n\n  /**\n   * @param {number} q\n   * @param {number} r\n   */\n  mulBy(q, r) {\n    this.q *= q;\n    this.r *= r;\n    return this;\n  }\n\n  /** @param {ScreenPoint} screenPoint */\n  toScreenInto(screenPoint) {\n    screenPoint.x = 3 / 2 * this.q;\n    screenPoint.y = Math.sqrt(3) * (this.r + 0.5 * (this.q & 1));\n    return screenPoint;\n  }\n\n  toScreen() {\n    return this.toScreenInto(new ScreenPoint());\n  }\n\n  toOddQOffset() {\n    return this;\n  }\n\n  /** @param {OddQOffset} oqo */\n  toOddQOffsetInto(oqo) {\n    oqo.q = this.q;\n    oqo.r = this.r;\n  }\n\n  /** @param {CubePoint} cubePoint */\n  toCubeInto(cubePoint) {\n    cubePoint.x = this.q;\n    cubePoint.z = this.r - (this.q - (this.q & 1)) / 2;\n    cubePoint.y = -cubePoint.x - cubePoint.z;\n    return cubePoint;\n  }\n\n  toCube() {\n    return this.toCubeInto(new CubePoint());\n  }\n}\n\n/**\n * @typedef {{toOddQOffset: () => OddQOffset}} OddQOffsetIsh\n */\n\nexport class OddQBox {\n  /**\n   * @param {OddQOffsetIsh} [topLeft]\n   * @param {OddQOffsetIsh} [bottomRight]\n   */\n  constructor(topLeft = new OddQOffset(), bottomRight = new OddQOffset()) {\n    this.topLeft = topLeft.toOddQOffset();\n    this.bottomRight = bottomRight.toOddQOffset();\n  }\n\n  copy() {\n    return new OddQBox(this.topLeft.copy(), this.bottomRight.copy());\n  }\n\n  /** @param {OddQBox} other */\n  copyFrom(other) {\n    this.topLeft.copyFrom(other.topLeft);\n    this.bottomRight.copyFrom(other.bottomRight);\n    return this;\n  }\n\n  toString() {\n    return 'OddQBox(' +\n      this.topLeft.toString() + ', ' +\n      this.bottomRight.toString() + ')';\n  }\n\n  screenCount() {\n    return this.screenCountInto(new ScreenPoint());\n  }\n\n  /** @param {ScreenPoint} screenPoint */\n  screenCountInto(screenPoint) {\n    const W = this.bottomRight.q - this.topLeft.q;\n    const H = this.bottomRight.r - this.topLeft.r;\n\n    // return the count number of hexes needed in screen x space and screen y\n    // space\n\n    // first one is a unit, each successive column backs 1/4 with the last\n    // const x = 1 + 3 / 4 * (W - 1);\n    screenPoint.x = (3 * W + 1) / 4;\n\n    // height backs directly, but we need an extra half cell except when we\n    // have only one column\n    screenPoint.y = H + (W > 1 ? 0.5 : 0);\n\n    return screenPoint;\n  }\n\n  /** @param {OddQOffsetIsh} pointArg */\n  contains(pointArg) {\n    const point = pointArg.toOddQOffset();\n    return point.q >= this.topLeft.q && point.q < this.bottomRight.q &&\n      point.r >= this.topLeft.r && point.r < this.bottomRight.r;\n  }\n\n  /** @param {OddQOffsetIsh} pointArg */\n  expandTo(pointArg) {\n    let expanded = false;\n    const point = pointArg.toOddQOffset();\n\n    if (point.q < this.topLeft.q) {\n      this.topLeft.q = point.q;\n      expanded = true;\n    } else if (point.q >= this.bottomRight.q) {\n      this.bottomRight.q = point.q + 1;\n      expanded = true;\n    }\n\n    if (point.r < this.topLeft.r) {\n      this.topLeft.r = point.r;\n      expanded = true;\n    } else if (point.r >= this.bottomRight.r) {\n      this.bottomRight.r = point.r + 1;\n      expanded = true;\n    }\n\n    return expanded;\n  }\n}\n","// @ts-check\n\n/** @enum {number} - resultant turn bits in a Rules table */\nexport const Turn = {\n  // relative turns\n  //    F -- +0 -- no turn, forward\n  //    B -- +3 -- u turn, backaward\n  //    P -- -2 -- double left turn\n  //    L -- -1 -- left turn\n  //    R -- +1 -- right turn\n  //    S -- +2 -- double right turn\n  RelForward: 0x0001,\n  RelBackward: 0x0002,\n  RelLeft: 0x0004,\n  RelRight: 0x0008,\n  RelDoubleLeft: 0x0010,\n  RelDoubleRight: 0x0020,\n\n  // absolute turns (for \"flat-top\" odd or even q hexagons)\n  //   NW -- ? -- North West\n  //   NO -- ? -- North\n  //   NE -- ? -- North East\n  //   SE -- ? -- South East\n  //   SO -- ? -- South\n  //   SW -- ? -- South West\n  AbsNorthWest: 0x0040,\n  AbsNorth: 0x0080,\n  AbsNorthEast: 0x0100,\n  AbsSouthEast: 0x0200,\n  AbsSouth: 0x0400,\n  AbsSouthWest: 0x0800,\n};\n\n/**\n * @param {Turn} turn - a bit field containing any/all chosen turn(s)\n * @param {number} dir - current heading direction for relative turns\n * @returns {Generator<number>} - resultant absolute direction heading(s)\n */\nexport function* turnDirs(turn, dir) {\n  let t = 0x0001;\n  for (; t <= 0x0020; t <<= 1) {\n    if (turn & t) {\n      yield (dir + (RelTurnDelta.get(t) || 0) + 6) % 6;\n    }\n  }\n  for (; t <= 0x0800; t <<= 1) {\n    if (turn & t) {\n      yield (AbsTurnDir.get(t) || 0);\n    }\n  }\n}\n\n/** @type {Map<Turn, number>} */\nexport const RelTurnDelta = new Map([\n  [Turn.RelBackward, 3],\n  [Turn.RelDoubleLeft, -2],\n  [Turn.RelLeft, -1],\n  [Turn.RelForward, 0],\n  [Turn.RelRight, 1],\n  [Turn.RelDoubleRight, 2],\n]);\n\n/** @type {Map<Turn, number>} */\nexport const AbsTurnDir = new Map([\n  [Turn.AbsSouthEast, 0],\n  [Turn.AbsSouth, 1],\n  [Turn.AbsSouthWest, 2],\n  [Turn.AbsNorthWest, 3],\n  [Turn.AbsNorth, 4],\n  [Turn.AbsNorthEast, 5],\n]);\n\n/** @type {Map<Turn, string>} */\nexport const RelTurnSymbol = new Map([\n  [Turn.RelBackward, 'B'],\n  [Turn.RelDoubleLeft, 'BL'],\n  [Turn.RelLeft, 'L'],\n  [Turn.RelForward, 'F'],\n  [Turn.RelRight, 'R'],\n  [Turn.RelDoubleRight, 'BR'],\n]);\n\n// TODO why no AbsTurnSymbol?\n\n/** @type {Map<string, Turn>} */\nexport const RelSymbolTurns = new Map([\n  ['B', Turn.RelBackward],\n  ['P', Turn.RelDoubleLeft],\n  ['L', Turn.RelLeft],\n  ['F', Turn.RelForward],\n  ['R', Turn.RelRight],\n  ['S', Turn.RelDoubleRight],\n]);\n\n/** @type {Map<string, Turn>} */\nexport const AbsSymbolTurns = new Map([\n  ['NW', Turn.AbsNorthWest],\n  ['NO', Turn.AbsNorth],\n  ['NE', Turn.AbsNorthEast],\n  ['SE', Turn.AbsSouthEast],\n  ['SO', Turn.AbsSouth],\n  ['SW', Turn.AbsSouthWest],\n]);\n","(function(root, factory) {\n    if (typeof module === 'object' && module.exports) {\n        module.exports = factory();\n    } else {\n        root.nearley = factory();\n    }\n}(this, function() {\n\n    function Rule(name, symbols, postprocess) {\n        this.id = ++Rule.highestId;\n        this.name = name;\n        this.symbols = symbols;        // a list of literal | regex class | nonterminal\n        this.postprocess = postprocess;\n        return this;\n    }\n    Rule.highestId = 0;\n\n    Rule.prototype.toString = function(withCursorAt) {\n        var symbolSequence = (typeof withCursorAt === \"undefined\")\n                             ? this.symbols.map(getSymbolShortDisplay).join(' ')\n                             : (   this.symbols.slice(0, withCursorAt).map(getSymbolShortDisplay).join(' ')\n                                 + \" ● \"\n                                 + this.symbols.slice(withCursorAt).map(getSymbolShortDisplay).join(' ')     );\n        return this.name + \" → \" + symbolSequence;\n    }\n\n\n    // a State is a rule at a position from a given starting point in the input stream (reference)\n    function State(rule, dot, reference, wantedBy) {\n        this.rule = rule;\n        this.dot = dot;\n        this.reference = reference;\n        this.data = [];\n        this.wantedBy = wantedBy;\n        this.isComplete = this.dot === rule.symbols.length;\n    }\n\n    State.prototype.toString = function() {\n        return \"{\" + this.rule.toString(this.dot) + \"}, from: \" + (this.reference || 0);\n    };\n\n    State.prototype.nextState = function(child) {\n        var state = new State(this.rule, this.dot + 1, this.reference, this.wantedBy);\n        state.left = this;\n        state.right = child;\n        if (state.isComplete) {\n            state.data = state.build();\n            // Having right set here will prevent the right state and its children\n            // form being garbage collected\n            state.right = undefined;\n        }\n        return state;\n    };\n\n    State.prototype.build = function() {\n        var children = [];\n        var node = this;\n        do {\n            children.push(node.right.data);\n            node = node.left;\n        } while (node.left);\n        children.reverse();\n        return children;\n    };\n\n    State.prototype.finish = function() {\n        if (this.rule.postprocess) {\n            this.data = this.rule.postprocess(this.data, this.reference, Parser.fail);\n        }\n    };\n\n\n    function Column(grammar, index) {\n        this.grammar = grammar;\n        this.index = index;\n        this.states = [];\n        this.wants = {}; // states indexed by the non-terminal they expect\n        this.scannable = []; // list of states that expect a token\n        this.completed = {}; // states that are nullable\n    }\n\n\n    Column.prototype.process = function(nextColumn) {\n        var states = this.states;\n        var wants = this.wants;\n        var completed = this.completed;\n\n        for (var w = 0; w < states.length; w++) { // nb. we push() during iteration\n            var state = states[w];\n\n            if (state.isComplete) {\n                state.finish();\n                if (state.data !== Parser.fail) {\n                    // complete\n                    var wantedBy = state.wantedBy;\n                    for (var i = wantedBy.length; i--; ) { // this line is hot\n                        var left = wantedBy[i];\n                        this.complete(left, state);\n                    }\n\n                    // special-case nullables\n                    if (state.reference === this.index) {\n                        // make sure future predictors of this rule get completed.\n                        var exp = state.rule.name;\n                        (this.completed[exp] = this.completed[exp] || []).push(state);\n                    }\n                }\n\n            } else {\n                // queue scannable states\n                var exp = state.rule.symbols[state.dot];\n                if (typeof exp !== 'string') {\n                    this.scannable.push(state);\n                    continue;\n                }\n\n                // predict\n                if (wants[exp]) {\n                    wants[exp].push(state);\n\n                    if (completed.hasOwnProperty(exp)) {\n                        var nulls = completed[exp];\n                        for (var i = 0; i < nulls.length; i++) {\n                            var right = nulls[i];\n                            this.complete(state, right);\n                        }\n                    }\n                } else {\n                    wants[exp] = [state];\n                    this.predict(exp);\n                }\n            }\n        }\n    }\n\n    Column.prototype.predict = function(exp) {\n        var rules = this.grammar.byName[exp] || [];\n\n        for (var i = 0; i < rules.length; i++) {\n            var r = rules[i];\n            var wantedBy = this.wants[exp];\n            var s = new State(r, 0, this.index, wantedBy);\n            this.states.push(s);\n        }\n    }\n\n    Column.prototype.complete = function(left, right) {\n        var copy = left.nextState(right);\n        this.states.push(copy);\n    }\n\n\n    function Grammar(rules, start) {\n        this.rules = rules;\n        this.start = start || this.rules[0].name;\n        var byName = this.byName = {};\n        this.rules.forEach(function(rule) {\n            if (!byName.hasOwnProperty(rule.name)) {\n                byName[rule.name] = [];\n            }\n            byName[rule.name].push(rule);\n        });\n    }\n\n    // So we can allow passing (rules, start) directly to Parser for backwards compatibility\n    Grammar.fromCompiled = function(rules, start) {\n        var lexer = rules.Lexer;\n        if (rules.ParserStart) {\n          start = rules.ParserStart;\n          rules = rules.ParserRules;\n        }\n        var rules = rules.map(function (r) { return (new Rule(r.name, r.symbols, r.postprocess)); });\n        var g = new Grammar(rules, start);\n        g.lexer = lexer; // nb. storing lexer on Grammar is iffy, but unavoidable\n        return g;\n    }\n\n\n    function StreamLexer() {\n      this.reset(\"\");\n    }\n\n    StreamLexer.prototype.reset = function(data, state) {\n        this.buffer = data;\n        this.index = 0;\n        this.line = state ? state.line : 1;\n        this.lastLineBreak = state ? -state.col : 0;\n    }\n\n    StreamLexer.prototype.next = function() {\n        if (this.index < this.buffer.length) {\n            var ch = this.buffer[this.index++];\n            if (ch === '\\n') {\n              this.line += 1;\n              this.lastLineBreak = this.index;\n            }\n            return {value: ch};\n        }\n    }\n\n    StreamLexer.prototype.save = function() {\n      return {\n        line: this.line,\n        col: this.index - this.lastLineBreak,\n      }\n    }\n\n    StreamLexer.prototype.formatError = function(token, message) {\n        // nb. this gets called after consuming the offending token,\n        // so the culprit is index-1\n        var buffer = this.buffer;\n        if (typeof buffer === 'string') {\n            var lines = buffer\n                .split(\"\\n\")\n                .slice(\n                    Math.max(0, this.line - 5), \n                    this.line\n                );\n\n            var nextLineBreak = buffer.indexOf('\\n', this.index);\n            if (nextLineBreak === -1) nextLineBreak = buffer.length;\n            var col = this.index - this.lastLineBreak;\n            var lastLineDigits = String(this.line).length;\n            message += \" at line \" + this.line + \" col \" + col + \":\\n\\n\";\n            message += lines\n                .map(function(line, i) {\n                    return pad(this.line - lines.length + i + 1, lastLineDigits) + \" \" + line;\n                }, this)\n                .join(\"\\n\");\n            message += \"\\n\" + pad(\"\", lastLineDigits + col) + \"^\\n\";\n            return message;\n        } else {\n            return message + \" at index \" + (this.index - 1);\n        }\n\n        function pad(n, length) {\n            var s = String(n);\n            return Array(length - s.length + 1).join(\" \") + s;\n        }\n    }\n\n    function Parser(rules, start, options) {\n        if (rules instanceof Grammar) {\n            var grammar = rules;\n            var options = start;\n        } else {\n            var grammar = Grammar.fromCompiled(rules, start);\n        }\n        this.grammar = grammar;\n\n        // Read options\n        this.options = {\n            keepHistory: false,\n            lexer: grammar.lexer || new StreamLexer,\n        };\n        for (var key in (options || {})) {\n            this.options[key] = options[key];\n        }\n\n        // Setup lexer\n        this.lexer = this.options.lexer;\n        this.lexerState = undefined;\n\n        // Setup a table\n        var column = new Column(grammar, 0);\n        var table = this.table = [column];\n\n        // I could be expecting anything.\n        column.wants[grammar.start] = [];\n        column.predict(grammar.start);\n        // TODO what if start rule is nullable?\n        column.process();\n        this.current = 0; // token index\n    }\n\n    // create a reserved token for indicating a parse fail\n    Parser.fail = {};\n\n    Parser.prototype.feed = function(chunk) {\n        var lexer = this.lexer;\n        lexer.reset(chunk, this.lexerState);\n\n        var token;\n        while (true) {\n            try {\n                token = lexer.next();\n                if (!token) {\n                    break;\n                }\n            } catch (e) {\n                // Create the next column so that the error reporter\n                // can display the correctly predicted states.\n                var nextColumn = new Column(this.grammar, this.current + 1);\n                this.table.push(nextColumn);\n                var err = new Error(this.reportLexerError(e));\n                err.offset = this.current;\n                err.token = e.token;\n                throw err;\n            }\n            // We add new states to table[current+1]\n            var column = this.table[this.current];\n\n            // GC unused states\n            if (!this.options.keepHistory) {\n                delete this.table[this.current - 1];\n            }\n\n            var n = this.current + 1;\n            var nextColumn = new Column(this.grammar, n);\n            this.table.push(nextColumn);\n\n            // Advance all tokens that expect the symbol\n            var literal = token.text !== undefined ? token.text : token.value;\n            var value = lexer.constructor === StreamLexer ? token.value : token;\n            var scannable = column.scannable;\n            for (var w = scannable.length; w--; ) {\n                var state = scannable[w];\n                var expect = state.rule.symbols[state.dot];\n                // Try to consume the token\n                // either regex or literal\n                if (expect.test ? expect.test(value) :\n                    expect.type ? expect.type === token.type\n                                : expect.literal === literal) {\n                    // Add it\n                    var next = state.nextState({data: value, token: token, isToken: true, reference: n - 1});\n                    nextColumn.states.push(next);\n                }\n            }\n\n            // Next, for each of the rules, we either\n            // (a) complete it, and try to see if the reference row expected that\n            //     rule\n            // (b) predict the next nonterminal it expects by adding that\n            //     nonterminal's start state\n            // To prevent duplication, we also keep track of rules we have already\n            // added\n\n            nextColumn.process();\n\n            // If needed, throw an error:\n            if (nextColumn.states.length === 0) {\n                // No states at all! This is not good.\n                var err = new Error(this.reportError(token));\n                err.offset = this.current;\n                err.token = token;\n                throw err;\n            }\n\n            // maybe save lexer state\n            if (this.options.keepHistory) {\n              column.lexerState = lexer.save()\n            }\n\n            this.current++;\n        }\n        if (column) {\n          this.lexerState = lexer.save()\n        }\n\n        // Incrementally keep track of results\n        this.results = this.finish();\n\n        // Allow chaining, for whatever it's worth\n        return this;\n    };\n\n    Parser.prototype.reportLexerError = function(lexerError) {\n        var tokenDisplay, lexerMessage;\n        // Planning to add a token property to moo's thrown error\n        // even on erroring tokens to be used in error display below\n        var token = lexerError.token;\n        if (token) {\n            tokenDisplay = \"input \" + JSON.stringify(token.text[0]) + \" (lexer error)\";\n            lexerMessage = this.lexer.formatError(token, \"Syntax error\");\n        } else {\n            tokenDisplay = \"input (lexer error)\";\n            lexerMessage = lexerError.message;\n        }\n        return this.reportErrorCommon(lexerMessage, tokenDisplay);\n    };\n\n    Parser.prototype.reportError = function(token) {\n        var tokenDisplay = (token.type ? token.type + \" token: \" : \"\") + JSON.stringify(token.value !== undefined ? token.value : token);\n        var lexerMessage = this.lexer.formatError(token, \"Syntax error\");\n        return this.reportErrorCommon(lexerMessage, tokenDisplay);\n    };\n\n    Parser.prototype.reportErrorCommon = function(lexerMessage, tokenDisplay) {\n        var lines = [];\n        lines.push(lexerMessage);\n        var lastColumnIndex = this.table.length - 2;\n        var lastColumn = this.table[lastColumnIndex];\n        var expectantStates = lastColumn.states\n            .filter(function(state) {\n                var nextSymbol = state.rule.symbols[state.dot];\n                return nextSymbol && typeof nextSymbol !== \"string\";\n            });\n\n        if (expectantStates.length === 0) {\n            lines.push('Unexpected ' + tokenDisplay + '. I did not expect any more input. Here is the state of my parse table:\\n');\n            this.displayStateStack(lastColumn.states, lines);\n        } else {\n            lines.push('Unexpected ' + tokenDisplay + '. Instead, I was expecting to see one of the following:\\n');\n            // Display a \"state stack\" for each expectant state\n            // - which shows you how this state came to be, step by step.\n            // If there is more than one derivation, we only display the first one.\n            var stateStacks = expectantStates\n                .map(function(state) {\n                    return this.buildFirstStateStack(state, []) || [state];\n                }, this);\n            // Display each state that is expecting a terminal symbol next.\n            stateStacks.forEach(function(stateStack) {\n                var state = stateStack[0];\n                var nextSymbol = state.rule.symbols[state.dot];\n                var symbolDisplay = this.getSymbolDisplay(nextSymbol);\n                lines.push('A ' + symbolDisplay + ' based on:');\n                this.displayStateStack(stateStack, lines);\n            }, this);\n        }\n        lines.push(\"\");\n        return lines.join(\"\\n\");\n    }\n    \n    Parser.prototype.displayStateStack = function(stateStack, lines) {\n        var lastDisplay;\n        var sameDisplayCount = 0;\n        for (var j = 0; j < stateStack.length; j++) {\n            var state = stateStack[j];\n            var display = state.rule.toString(state.dot);\n            if (display === lastDisplay) {\n                sameDisplayCount++;\n            } else {\n                if (sameDisplayCount > 0) {\n                    lines.push('    ^ ' + sameDisplayCount + ' more lines identical to this');\n                }\n                sameDisplayCount = 0;\n                lines.push('    ' + display);\n            }\n            lastDisplay = display;\n        }\n    };\n\n    Parser.prototype.getSymbolDisplay = function(symbol) {\n        return getSymbolLongDisplay(symbol);\n    };\n\n    /*\n    Builds a the first state stack. You can think of a state stack as the call stack\n    of the recursive-descent parser which the Nearley parse algorithm simulates.\n    A state stack is represented as an array of state objects. Within a\n    state stack, the first item of the array will be the starting\n    state, with each successive item in the array going further back into history.\n\n    This function needs to be given a starting state and an empty array representing\n    the visited states, and it returns an single state stack.\n\n    */\n    Parser.prototype.buildFirstStateStack = function(state, visited) {\n        if (visited.indexOf(state) !== -1) {\n            // Found cycle, return null\n            // to eliminate this path from the results, because\n            // we don't know how to display it meaningfully\n            return null;\n        }\n        if (state.wantedBy.length === 0) {\n            return [state];\n        }\n        var prevState = state.wantedBy[0];\n        var childVisited = [state].concat(visited);\n        var childResult = this.buildFirstStateStack(prevState, childVisited);\n        if (childResult === null) {\n            return null;\n        }\n        return [state].concat(childResult);\n    };\n\n    Parser.prototype.save = function() {\n        var column = this.table[this.current];\n        column.lexerState = this.lexerState;\n        return column;\n    };\n\n    Parser.prototype.restore = function(column) {\n        var index = column.index;\n        this.current = index;\n        this.table[index] = column;\n        this.table.splice(index + 1);\n        this.lexerState = column.lexerState;\n\n        // Incrementally keep track of results\n        this.results = this.finish();\n    };\n\n    // nb. deprecated: use save/restore instead!\n    Parser.prototype.rewind = function(index) {\n        if (!this.options.keepHistory) {\n            throw new Error('set option `keepHistory` to enable rewinding')\n        }\n        // nb. recall column (table) indicies fall between token indicies.\n        //        col 0   --   token 0   --   col 1\n        this.restore(this.table[index]);\n    };\n\n    Parser.prototype.finish = function() {\n        // Return the possible parsings\n        var considerations = [];\n        var start = this.grammar.start;\n        var column = this.table[this.table.length - 1]\n        column.states.forEach(function (t) {\n            if (t.rule.name === start\n                    && t.dot === t.rule.symbols.length\n                    && t.reference === 0\n                    && t.data !== Parser.fail) {\n                considerations.push(t);\n            }\n        });\n        return considerations.map(function(c) {return c.data; });\n    };\n\n    function getSymbolLongDisplay(symbol) {\n        var type = typeof symbol;\n        if (type === \"string\") {\n            return symbol;\n        } else if (type === \"object\") {\n            if (symbol.literal) {\n                return JSON.stringify(symbol.literal);\n            } else if (symbol instanceof RegExp) {\n                return 'character matching ' + symbol;\n            } else if (symbol.type) {\n                return symbol.type + ' token';\n            } else if (symbol.test) {\n                return 'token matching ' + String(symbol.test);\n            } else {\n                throw new Error('Unknown symbol type: ' + symbol);\n            }\n        }\n    }\n\n    function getSymbolShortDisplay(symbol) {\n        var type = typeof symbol;\n        if (type === \"string\") {\n            return symbol;\n        } else if (type === \"object\") {\n            if (symbol.literal) {\n                return JSON.stringify(symbol.literal);\n            } else if (symbol instanceof RegExp) {\n                return symbol.toString();\n            } else if (symbol.type) {\n                return '%' + symbol.type;\n            } else if (symbol.test) {\n                return '<' + String(symbol.test) + '>';\n            } else {\n                throw new Error('Unknown symbol type: ' + symbol);\n            }\n        }\n    }\n\n    return {\n        Parser: Parser,\n        Grammar: Grammar,\n        Rule: Rule,\n    };\n\n}));\n","// @generated from id:2ca93388742b4da7a311d26c788bbaf95002b73588b88a4b0e70319aab4bd37c\n\n// Generated automatically by nearley, version 2.20.1\n// http://github.com/Hardmath123/nearley\nfunction id(x) { return x[0]; }\nlet Lexer = undefined;\nlet ParserRules = [\n    {\"name\": \"spec\", \"symbols\": [\"entries\"], \"postprocess\": ([entries]) => ({type: 'spec', entries: entries || []})},\n    {\"name\": \"entries\", \"symbols\": [\"entry\"]},\n    {\"name\": \"entries\", \"symbols\": [\"entry\", \"newline\", \"entries\"], \"postprocess\": ([head, _, tail]) => [head].concat(tail)},\n    {\"name\": \"comment$string$1\", \"symbols\": [{\"literal\":\"-\"}, {\"literal\":\"-\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"comment$macrocall$2\", \"symbols\": [/[^\\n]/]},\n    {\"name\": \"comment$macrocall$1$ebnf$1\", \"symbols\": [\"comment$macrocall$2\"]},\n    {\"name\": \"comment$macrocall$1$ebnf$1\", \"symbols\": [\"comment$macrocall$1$ebnf$1\", \"comment$macrocall$2\"], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"comment$macrocall$1\", \"symbols\": [\"comment$macrocall$1$ebnf$1\"], \"postprocess\": ([parts]) => parts.join('')},\n    {\"name\": \"comment\", \"symbols\": [\"_\", \"comment$string$1\", \"comment$macrocall$1\"], \"postprocess\": ([_0, _1, comment]) => ({type: 'comment', comment})},\n    {\"name\": \"entry\", \"symbols\": [\"assign\"], \"postprocess\": d => d[0]},\n    {\"name\": \"entry\", \"symbols\": [\"rule\"], \"postprocess\": d => d[0]},\n    {\"name\": \"entry\", \"symbols\": [\"directive\"], \"postprocess\": d => d[0]},\n    {\"name\": \"entry\", \"symbols\": [\"comment\"], \"postprocess\": d => d[0]},\n    {\"name\": \"directive$macrocall$2\", \"symbols\": [/[\\w]/]},\n    {\"name\": \"directive$macrocall$1$ebnf$1\", \"symbols\": [\"directive$macrocall$2\"]},\n    {\"name\": \"directive$macrocall$1$ebnf$1\", \"symbols\": [\"directive$macrocall$1$ebnf$1\", \"directive$macrocall$2\"], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"directive$macrocall$1\", \"symbols\": [\"directive$macrocall$1$ebnf$1\"], \"postprocess\": ([parts]) => parts.join('')},\n    {\"name\": \"directive$macrocall$4\", \"symbols\": [/[^\\n]/]},\n    {\"name\": \"directive$macrocall$3$ebnf$1\", \"symbols\": [\"directive$macrocall$4\"]},\n    {\"name\": \"directive$macrocall$3$ebnf$1\", \"symbols\": [\"directive$macrocall$3$ebnf$1\", \"directive$macrocall$4\"], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"directive$macrocall$3\", \"symbols\": [\"directive$macrocall$3$ebnf$1\"], \"postprocess\": ([parts]) => parts.join('')},\n    {\"name\": \"directive\", \"symbols\": [\"_\", {\"literal\":\"@\"}, \"directive$macrocall$1\", \"__\", \"directive$macrocall$3\"], \"postprocess\": ([_0, _1, name, _2, value]) => ({type: 'directive', name, value})},\n    {\"name\": \"assign\", \"symbols\": [\"identifier\", \"_\", {\"literal\":\"=\"}, \"_\", \"lit\"], \"postprocess\": ([id, _1, _2, _3, value]) => ({type: 'assign', id, value})},\n    {\"name\": \"rule\", \"symbols\": [\"ant\"], \"postprocess\": ([ant]) => ant},\n    {\"name\": \"rule$string$1\", \"symbols\": [{\"literal\":\"=\"}, {\"literal\":\">\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"rule\", \"symbols\": [\"when\", \"rule$string$1\", \"then\"], \"postprocess\": ([when, _1, then]) => ({type: 'rule', when, then})},\n    {\"name\": \"when\", \"symbols\": [\"expr\", {\"literal\":\",\"}, \"expr\"], \"postprocess\": ([state, _1, color]) => ({type: 'when', state, color})},\n    {\"name\": \"then\", \"symbols\": [\"thenState\", {\"literal\":\",\"}, \"thenColor\", {\"literal\":\",\"}, \"thenTurn\"], \"postprocess\": ([state, _1, color, _3, turn]) => ({type: 'then', state, color, turn})},\n    {\"name\": \"thenMode\", \"symbols\": [], \"postprocess\": () => '='},\n    {\"name\": \"thenMode\", \"symbols\": [{\"literal\":\"=\"}], \"postprocess\": () => '='},\n    {\"name\": \"thenMode\", \"symbols\": [{\"literal\":\"|\"}], \"postprocess\": () => '|'},\n    {\"name\": \"thenNoop\", \"symbols\": [\"_\", {\"literal\":\"_\"}, \"_\"], \"postprocess\": () => ({type: 'thenVal', mode: '_'})},\n    {\"name\": \"thenState\", \"symbols\": [\"thenNoop\"], \"postprocess\": d => d[0]},\n    {\"name\": \"thenState\", \"symbols\": [\"_\", \"thenMode\", \"sum\", \"_\"], \"postprocess\": ([_0, mode, value]) => ({type: 'thenVal', mode, value})},\n    {\"name\": \"thenColor\", \"symbols\": [\"thenNoop\"], \"postprocess\": d => d[0]},\n    {\"name\": \"thenColor\", \"symbols\": [\"_\", \"thenMode\", \"sum\", \"_\"], \"postprocess\": ([_0, mode, value]) => ({type: 'thenVal', mode, value})},\n    {\"name\": \"thenTurn\", \"symbols\": [\"thenNoop\"], \"postprocess\": d => d[0]},\n    {\"name\": \"thenTurn\", \"symbols\": [\"_\", \"thenMode\", \"sum\", \"_\"], \"postprocess\": ([_0, mode, value]) => ({type: 'thenVal', mode, value})},\n    {\"name\": \"thenTurn\", \"symbols\": [\"_\", \"thenMode\", \"turnExpr\", \"_\"], \"postprocess\": ([_0, mode, value]) => ({type: 'thenVal', mode, value})},\n    {\"name\": \"turnExpr\", \"symbols\": [\"turn\"], \"postprocess\": ([name]) => ({type: 'turn', names: [name]})},\n    {\"name\": \"turnExpr\", \"symbols\": [\"turnExpr\", {\"literal\":\"|\"}, \"turnExpr\"], \"postprocess\": ([a, _1, b]) => ({type: 'turn', names: a.names.concat(b.names)})},\n    {\"name\": \"expr\", \"symbols\": [\"_\", \"sum\", \"_\"], \"postprocess\": d => d[1]},\n    {\"name\": \"sumop\", \"symbols\": [\"_\", {\"literal\":\"+\"}, \"_\"], \"postprocess\": d => d[1]},\n    {\"name\": \"sumop\", \"symbols\": [\"_\", {\"literal\":\"-\"}, \"_\"], \"postprocess\": d => d[1]},\n    {\"name\": \"mulop\", \"symbols\": [\"_\", {\"literal\":\"*\"}, \"_\"], \"postprocess\": d => d[1]},\n    {\"name\": \"mulop\", \"symbols\": [\"_\", {\"literal\":\"/\"}, \"_\"], \"postprocess\": d => d[1]},\n    {\"name\": \"mulop\", \"symbols\": [\"_\", {\"literal\":\"%\"}, \"_\"], \"postprocess\": d => d[1]},\n    {\"name\": \"sum\", \"symbols\": [\"sum\", \"sumop\", \"mul\"], \"postprocess\": ([arg1, op, arg2]) => ({type: 'expr', op, arg1, arg2})},\n    {\"name\": \"sum\", \"symbols\": [\"mul\"], \"postprocess\": d => d[0]},\n    {\"name\": \"mul\", \"symbols\": [\"mul\", \"mulop\", \"fac\"], \"postprocess\": ([arg1, op, arg2]) => ({type: 'expr', op, arg1, arg2})},\n    {\"name\": \"mul\", \"symbols\": [\"fac\"], \"postprocess\": d => d[0]},\n    {\"name\": \"fac\", \"symbols\": [{\"literal\":\"(\"}, \"expr\", {\"literal\":\")\"}], \"postprocess\": d => d[1]},\n    {\"name\": \"fac\", \"symbols\": [\"lit\"], \"postprocess\": d => d[0]},\n    {\"name\": \"fac\", \"symbols\": [\"member\"], \"postprocess\": d => d[0]},\n    {\"name\": \"fac\", \"symbols\": [\"symbol\"], \"postprocess\": d => d[0]},\n    {\"name\": \"fac\", \"symbols\": [\"identifier\"], \"postprocess\": d => d[0]},\n    {\"name\": \"ant$string$1\", \"symbols\": [{\"literal\":\"a\"}, {\"literal\":\"n\"}, {\"literal\":\"t\"}, {\"literal\":\"(\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"ant\", \"symbols\": [\"_\", \"ant$string$1\", \"countTurns\", {\"literal\":\")\"}, \"_\"], \"postprocess\": ([_0, _1, turns]) => ({type: 'ant', turns})},\n    {\"name\": \"turns$string$1\", \"symbols\": [{\"literal\":\"t\"}, {\"literal\":\"u\"}, {\"literal\":\"r\"}, {\"literal\":\"n\"}, {\"literal\":\"s\"}, {\"literal\":\"(\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"turns\", \"symbols\": [\"turns$string$1\", \"countTurns\", {\"literal\":\")\"}], \"postprocess\": ([_, turns]) => ({type: 'turns', turns})},\n    {\"name\": \"turn\", \"symbols\": [{\"literal\":\"L\"}], \"postprocess\": () => 'RelLeft'},\n    {\"name\": \"turn\", \"symbols\": [{\"literal\":\"R\"}], \"postprocess\": () => 'RelRight'},\n    {\"name\": \"turn\", \"symbols\": [{\"literal\":\"F\"}], \"postprocess\": () => 'RelForward'},\n    {\"name\": \"turn\", \"symbols\": [{\"literal\":\"B\"}], \"postprocess\": () => 'RelBackward'},\n    {\"name\": \"turn\", \"symbols\": [{\"literal\":\"P\"}], \"postprocess\": () => 'RelDoubleLeft'},\n    {\"name\": \"turn\", \"symbols\": [{\"literal\":\"S\"}], \"postprocess\": () => 'RelDoubleRight'},\n    {\"name\": \"turn\", \"symbols\": [{\"literal\":\"l\"}], \"postprocess\": () => 'RelLeft'},\n    {\"name\": \"turn\", \"symbols\": [{\"literal\":\"r\"}], \"postprocess\": () => 'RelRight'},\n    {\"name\": \"turn\", \"symbols\": [{\"literal\":\"f\"}], \"postprocess\": () => 'RelForward'},\n    {\"name\": \"turn\", \"symbols\": [{\"literal\":\"b\"}], \"postprocess\": () => 'RelBackward'},\n    {\"name\": \"turn\", \"symbols\": [{\"literal\":\"p\"}], \"postprocess\": () => 'RelDoubleLeft'},\n    {\"name\": \"turn\", \"symbols\": [{\"literal\":\"s\"}], \"postprocess\": () => 'RelDoubleRight'},\n    {\"name\": \"turn$string$1\", \"symbols\": [{\"literal\":\"N\"}, {\"literal\":\"W\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"turn\", \"symbols\": [\"turn$string$1\"], \"postprocess\": () => 'AbsNorthWest'},\n    {\"name\": \"turn$string$2\", \"symbols\": [{\"literal\":\"N\"}, {\"literal\":\"O\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"turn\", \"symbols\": [\"turn$string$2\"], \"postprocess\": () => 'AbsNorth'},\n    {\"name\": \"turn$string$3\", \"symbols\": [{\"literal\":\"N\"}, {\"literal\":\"E\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"turn\", \"symbols\": [\"turn$string$3\"], \"postprocess\": () => 'AbsNorthEast'},\n    {\"name\": \"turn$string$4\", \"symbols\": [{\"literal\":\"S\"}, {\"literal\":\"E\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"turn\", \"symbols\": [\"turn$string$4\"], \"postprocess\": () => 'AbsSouthEast'},\n    {\"name\": \"turn$string$5\", \"symbols\": [{\"literal\":\"S\"}, {\"literal\":\"O\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"turn\", \"symbols\": [\"turn$string$5\"], \"postprocess\": () => 'AbsSouth'},\n    {\"name\": \"turn$string$6\", \"symbols\": [{\"literal\":\"S\"}, {\"literal\":\"W\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"turn\", \"symbols\": [\"turn$string$6\"], \"postprocess\": () => 'AbsSouthWest'},\n    {\"name\": \"turn$string$7\", \"symbols\": [{\"literal\":\"n\"}, {\"literal\":\"w\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"turn\", \"symbols\": [\"turn$string$7\"], \"postprocess\": () => 'AbsNorthWest'},\n    {\"name\": \"turn$string$8\", \"symbols\": [{\"literal\":\"n\"}, {\"literal\":\"o\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"turn\", \"symbols\": [\"turn$string$8\"], \"postprocess\": () => 'AbsNorth'},\n    {\"name\": \"turn$string$9\", \"symbols\": [{\"literal\":\"n\"}, {\"literal\":\"e\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"turn\", \"symbols\": [\"turn$string$9\"], \"postprocess\": () => 'AbsNorthEast'},\n    {\"name\": \"turn$string$10\", \"symbols\": [{\"literal\":\"s\"}, {\"literal\":\"e\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"turn\", \"symbols\": [\"turn$string$10\"], \"postprocess\": () => 'AbsSouthEast'},\n    {\"name\": \"turn$string$11\", \"symbols\": [{\"literal\":\"s\"}, {\"literal\":\"o\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"turn\", \"symbols\": [\"turn$string$11\"], \"postprocess\": () => 'AbsSouth'},\n    {\"name\": \"turn$string$12\", \"symbols\": [{\"literal\":\"s\"}, {\"literal\":\"w\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"turn\", \"symbols\": [\"turn$string$12\"], \"postprocess\": () => 'AbsSouthWest'},\n    {\"name\": \"countTurn\", \"symbols\": [\"turn\"], \"postprocess\": ([turn]) => ({count: {type: 'number', value: 1}, turn})},\n    {\"name\": \"countTurn\", \"symbols\": [\"decint\", \"turn\"], \"postprocess\": ([count, turn]) => ({count, turn})},\n    {\"name\": \"countTurns$ebnf$1\", \"symbols\": []},\n    {\"name\": \"countTurns$ebnf$1$subexpression$1\", \"symbols\": [\"__\", \"countTurn\"]},\n    {\"name\": \"countTurns$ebnf$1\", \"symbols\": [\"countTurns$ebnf$1\", \"countTurns$ebnf$1$subexpression$1\"], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"countTurns\", \"symbols\": [\"_\", \"countTurn\", \"countTurns$ebnf$1\", \"_\"], \"postprocess\": ([_, first, rest=[]]) => ([first, ...rest.map(([_, next]) => next)])},\n    {\"name\": \"member$subexpression$1\", \"symbols\": [\"member\"]},\n    {\"name\": \"member$subexpression$1\", \"symbols\": [\"symbol\"]},\n    {\"name\": \"member$subexpression$1\", \"symbols\": [\"identifier\"]},\n    {\"name\": \"member$subexpression$1\", \"symbols\": [\"lit\"]},\n    {\"name\": \"member\", \"symbols\": [\"member$subexpression$1\", {\"literal\":\"[\"}, \"expr\", {\"literal\":\"]\"}], \"postprocess\": ([[value], _1, item]) => ({type: 'member', value, item})},\n    {\"name\": \"symbol$ebnf$1\", \"symbols\": []},\n    {\"name\": \"symbol$ebnf$1\", \"symbols\": [\"symbol$ebnf$1\", /[\\w]/], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"symbol\", \"symbols\": [/[a-z]/, \"symbol$ebnf$1\"], \"postprocess\": ([head, tail]) => ({type: 'symbol', name: head + tail.join('')})},\n    {\"name\": \"identifier$ebnf$1\", \"symbols\": [/[\\w]/]},\n    {\"name\": \"identifier$ebnf$1\", \"symbols\": [\"identifier$ebnf$1\", /[\\w]/], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"identifier\", \"symbols\": [/[A-Z]/, \"identifier$ebnf$1\"], \"postprocess\": ([head, tail]) => ({type: 'identifier', name: head + tail.join('')})},\n    {\"name\": \"lit\", \"symbols\": [\"int\"], \"postprocess\": d => d[0]},\n    {\"name\": \"lit\", \"symbols\": [\"turns\"], \"postprocess\": d => d[0]},\n    {\"name\": \"int$string$1\", \"symbols\": [{\"literal\":\"0\"}, {\"literal\":\"x\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"int\", \"symbols\": [\"int$string$1\", \"hexint\"], \"postprocess\": d => d[1]},\n    {\"name\": \"int\", \"symbols\": [\"decint\"], \"postprocess\": d => d[0]},\n    {\"name\": \"hexint$macrocall$2\", \"symbols\": [/[0-9a-fA-F]/]},\n    {\"name\": \"hexint$macrocall$1$ebnf$1\", \"symbols\": [\"hexint$macrocall$2\"]},\n    {\"name\": \"hexint$macrocall$1$ebnf$1\", \"symbols\": [\"hexint$macrocall$1$ebnf$1\", \"hexint$macrocall$2\"], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"hexint$macrocall$1\", \"symbols\": [\"hexint$macrocall$1$ebnf$1\"], \"postprocess\": ([parts]) => parts.join('')},\n    {\"name\": \"hexint\", \"symbols\": [\"hexint$macrocall$1\"], \"postprocess\": ([num]) => ({type: 'number', value: parseInt(num, 16), base: 16})},\n    {\"name\": \"decint$macrocall$2\", \"symbols\": [/[0-9]/]},\n    {\"name\": \"decint$macrocall$1$ebnf$1\", \"symbols\": [\"decint$macrocall$2\"]},\n    {\"name\": \"decint$macrocall$1$ebnf$1\", \"symbols\": [\"decint$macrocall$1$ebnf$1\", \"decint$macrocall$2\"], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"decint$macrocall$1\", \"symbols\": [\"decint$macrocall$1$ebnf$1\"], \"postprocess\": ([parts]) => parts.join('')},\n    {\"name\": \"decint\", \"symbols\": [\"decint$macrocall$1\"], \"postprocess\": ([num]) => ({type: 'number', value: parseInt(num, 10)})},\n    {\"name\": \"_$ebnf$1\", \"symbols\": []},\n    {\"name\": \"_$ebnf$1\", \"symbols\": [\"_$ebnf$1\", /[\\s]/], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"_\", \"symbols\": [\"_$ebnf$1\"], \"postprocess\": () => null},\n    {\"name\": \"__$ebnf$1\", \"symbols\": [/[\\s]/]},\n    {\"name\": \"__$ebnf$1\", \"symbols\": [\"__$ebnf$1\", /[\\s]/], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"__\", \"symbols\": [\"__$ebnf$1\"], \"postprocess\": () => null},\n    {\"name\": \"newline$ebnf$1\", \"symbols\": [{\"literal\":\"\\r\"}], \"postprocess\": id},\n    {\"name\": \"newline$ebnf$1\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"newline\", \"symbols\": [\"newline$ebnf$1\", {\"literal\":\"\\n\"}], \"postprocess\": () => null}\n];\nlet ParserStart = \"spec\";\nexport default { Lexer, ParserRules, ParserStart };\n","// @ts-check\n\n// TODO these types can become the basis of a directly coded recursive descent\n// parser.js which can replace lang/grammar.{ne,js} entirely\n\n/** @typedef {(\n * | CommentNode\n * | DirectiveNode\n * | SpecNode\n * | AssignNode\n * | AntNode\n * | RuleNode\n * | WhenNode\n * | ThenNode\n * | ThenValNode\n * | MemberNode\n * | ExprNode<NumberNode|TurnsNode>\n * | IdentifierNode\n * | NumberNode\n * | SymbolNode\n * | TurnNode\n * | TurnsNode\n * )} Node */\n\n/** @typedef {object} CommentNode\n * @prop {\"comment\"} type\n * @prop {string} comment\n */\n\n/** @typedef {object} DirectiveNode\n * @prop {\"directive\"} type\n * @prop {string} name\n * @prop {string} value\n */\n\n/** @template Literal\n * @typedef {(\n * | Value<Literal>\n * | ExprNode<Literal>\n * )} Expr */\n\n/** @template Literal\n * @typedef {(\n * | MemberNode\n * | SymbolNode\n * | IdentifierNode\n * | Literal\n * )} Value */\n\n/** @typedef {object} SpecNode\n * @prop {\"spec\"} type\n * @prop {EntryNode[]} entries\n */\n\n/** @typedef {(\n * | AssignNode\n * | CommentNode\n * | DirectiveNode\n * | AntNode\n * | RuleNode\n * )} EntryNode */\n\n/** @typedef {Value<NumberNode|TurnsNode>} AnyValue */\n/** @typedef {Expr<NumberNode|TurnsNode>} AnyExpr */\n\n/** @typedef {object} AssignNode\n * @prop {\"assign\"} type\n * @prop {IdentifierNode} id\n * @prop {AnyExpr} value\n */\n\n/** @typedef {object} RuleNode\n * @prop {\"rule\"} type\n * @prop {WhenNode} when\n * @prop {ThenNode} then\n */\n\n/** @typedef {object} WhenNode\n * @prop {\"when\"} type\n * @prop {AnyExpr} state TODO should not be able to have turns\n * @prop {AnyExpr} color TODO should not be able to have turns\n */\n\n/** @typedef {object} ThenNode\n * @prop {\"then\"} type\n * @prop {ThenValNode} state TODO .value should not be be able to have turns\n * @prop {ThenValNode} color TODO .value should not be be able to have turns\n * @prop {ThenValNode} turn\n */\n\n/** @typedef {(\n * | {type: \"thenVal\", mode: (\"|\" | \"=\"), value: AnyExpr}\n * | {type: \"thenVal\", mode: \"_\"}\n * )} ThenValNode\n */\n\n/** @typedef {object} MemberNode\n * @prop {\"member\"} type\n * @prop {AnyValue} value TODO should not be able to have turns?\n * @prop {AnyExpr} item TODO should not be able to have turns?\n */\n\n/** @template Literal\n * @typedef {object} ExprNode\n * @prop {\"expr\"} type\n * @prop {ExprOp} op\n * @prop {Expr<Literal>} arg1\n * @prop {Expr<Literal>} arg2\n */\n\n/** @typedef {\"+\" | \"-\" | \"*\" | \"/\" | \"%\"} ExprOp */\n\n/** @typedef {object} IdentifierNode\n * @prop {\"identifier\"} type\n * @prop {string} name\n */\n\n/** @typedef {object} NumberNode\n * @prop {\"number\"} type\n * @prop {number} value\n * @prop {number} [base]\n */\n\n/** @typedef {object} SymbolNode\n * @prop {\"symbol\"} type\n * @prop {string} name\n */\n\n/** @typedef {(\n * | 'RelLeft'\n * | 'RelRight'\n * | 'RelForward'\n * | 'RelBackward'\n * | 'RelDoubleLeft'\n * | 'RelDoubleRight'\n * | 'AbsNorthWest'\n * | 'AbsNorth'\n * | 'AbsNorthEast'\n * | 'AbsSouthEast'\n * | 'AbsSouth'\n * | 'AbsSouthWest'\n * )} Turn */\n\n/** @typedef {object} TurnNode\n * @prop {\"turn\"} type\n * @prop {Turn[]} names\n */\n\n/** @typedef {object} AntNode\n * @prop {\"ant\"} type\n * @prop {CountTurn[]} turns\n */\n\n/** @typedef {object} TurnsNode\n * @prop {\"turns\"} type\n * @prop {CountTurn[]} turns\n */\n\n/** @typedef {object} CountTurn\n * @prop {NumberNode} count\n * @prop {Turn} turn\n */\n\n/** @typedef {Node['type']} NodeType */\n\n/**\n * @template {NodeType} T\n * @typedef {Extract<Node, {type: T}>} TypedNode\n */\n\n/**\n * @template {NodeType} T\n * @param {T} type\n * @param {Node} node\n * @returns {node is TypedNode<T>}\n */\nexport function isNodeType(type, node) {\n  return node.type === type;\n}\n\n/**\n * @param {Node} node\n * @returns {node is EntryNode}\n */\nexport function isEntryNode(node) {\n  switch (node.type) {\n    case 'ant':\n    case 'assign':\n    case 'comment':\n    case 'directive':\n    case 'rule':\n      return true;\n    default:\n      return false;\n  }\n}\n\n// TODO generic id/sym/value/expr lifts, and then used consistently throughout\n\n/**\n * @param {string} name\n * @param {string} value\n * @returns {DirectiveNode}\n */\nexport function directive(name, value) {\n  return { type: 'directive', name, value };\n}\n\n/**\n * @param {string} comment\n * @returns {CommentNode}\n */\nexport function comment(comment) {\n  return { type: 'comment', comment };\n}\n\n/**\n * @param {number} value\n * @param {number} [base] - defaults to base-10 if unspecified\n * @returns {NumberNode}\n */\nexport function number(value, base) {\n  return { type: 'number', value, base };\n}\n\n/**\n * @param {string} name\n * @returns {IdentifierNode}\n */\nexport function id(name) {\n  return { type: 'identifier', name };\n}\n\n/**\n * @param {string} name\n * @returns {SymbolNode}\n */\nexport function sym(name) {\n  return { type: 'symbol', name };\n}\n\n/**\n * @param {EntryNode[]} entries\n * @returns {SpecNode}\n */\nexport function spec(...entries) {\n  return { type: 'spec', entries };\n}\n\n/**\n * @param {string|IdentifierNode} id\n * @param {AnyExpr} value\n * @returns {AssignNode}\n */\nexport function assign(id, value) {\n  if (typeof id === 'string') id = { type: 'identifier', name: id };\n  return { type: 'assign', id, value };\n}\n\n/**\n * @param {WhenNode} when\n * @param {ThenNode} then\n * @returns {RuleNode}\n */\nexport function rule(when, then) {\n  return { type: 'rule', when, then };\n}\n\n/**\n * @param {CountTurn[]} turns\n * @returns {AntNode}\n */\nexport function ant(...turns) {\n  return { type: 'ant', turns };\n}\n\n/**\n * @param {CountTurn[]} turns\n * @returns {TurnsNode}\n */\nexport function turns(...turns) {\n  return { type: 'turns', turns };\n}\n\n/**\n * @param {AnyValue} value\n * @param {AnyExpr} item\n * @returns {MemberNode}\n */\nexport function member(value, item) {\n  return { type: 'member', value, item };\n}\n\n/**\n * @template {Node} S\n * @template {Node} T\n * @param {ExprOp} op\n * @param {S} arg1\n * @param {T} arg2\n * @returns {ExprNode<S|T>}\n */\nexport function expr(op, arg1, arg2) {\n  return { type: 'expr', op, arg1, arg2 };\n}\n\n/**\n * @param {AnyExpr} state\n * @param {AnyExpr} color\n * @returns {WhenNode}\n */\nexport function when(state, color) {\n  return ({ type: 'when', state, color });\n}\n\n/**\n * @param {AnyExpr|ThenValNode} state\n * @param {AnyExpr|ThenValNode} color\n * @param {AnyExpr|ThenValNode} turn\n * @returns {ThenNode}\n */\nexport function then(state, color, turn) {\n  return {\n    type: 'then',\n    state: thenVal(state),\n    color: thenVal(color),\n    turn: thenVal(turn),\n  };\n}\n\n/**\n * @param {AnyExpr|ThenValNode} value\n * @param {\"=\"|\"|\"} [mode]\n * @returns {ThenValNode}\n */\nexport function thenVal(value, mode = '=') {\n  return value.type === 'thenVal' ? value : { type: 'thenVal', mode, value };\n}\n\n/**\n * @param {AnyExpr} value\n * @returns {ThenValNode}\n */\nexport function thenSet(value) {\n  return { type: 'thenVal', mode: '=', value };\n}\n\n/**\n * @param {AnyExpr} value\n * @returns {ThenValNode}\n */\nexport function thenUpdate(value) {\n  return { type: 'thenVal', mode: '|', value };\n}\n\n/** @returns {ThenValNode} */\nexport function thenPass() {\n  return { type: 'thenVal', mode: '_' };\n}\n\n/**\n * @param {Node} node\n * @returns {node is AnyExpr}\n */\nexport function isAnyExpr(node) {\n  switch (node.type) {\n    // Expr<Literal>\n    case 'expr':\n      return true;\n\n    // is Value<Literal>\n    default:\n      return isAnyValue(node);\n  }\n}\n\n/**\n * @param {Node} node\n * @returns {node is AnyValue}\n */\nexport function isAnyValue(node) {\n  switch (node.type) {\n    // Value<Literal>\n    case 'member':\n    case 'symbol':\n    case 'identifier':\n\n    // Literal = NumberNode | TurnsNode\n    case 'number':\n    case 'turns':\n      return true;\n\n    default:\n      return false;\n  }\n}\n\n","// @ts-check\n\n// @ts-ignore\nimport nearley from 'nearley';\n\nimport * as rezult from '../rezult.js';\n\nimport grammarRules from './grammar_rules.js';\nconst grammar = nearley.Grammar.fromCompiled(grammarRules);\n\nimport { isNodeType } from './grammar.js';\n\n/** @typedef {import('./grammar.js').Node} Node */\n/** @typedef {import('./grammar.js').NodeType} NodeType */\n/** @template T @typedef {import('./grammar.js').TypedNode<T>} TypedNode */\n\n/**\n * @template {NodeType} T\n * @param {T} type\n * @param {Node} node\n * @returns {TypedNode<T>}\n */\nfunction asTypedNode(type, node) {\n  if (!isNodeType(type, node)) throw new Error(\n    `expected a ${JSON.stringify(type)} grammar node, ` +\n    `got a ${JSON.stringify(type)} node`);\n  return node;\n}\n\n/** @param {string} str */\nexport default function parse(str) {\n  if (typeof str !== 'string') {\n    return rezult.error(new Error('invalid argument, not a string'));\n  }\n  return rezult.catchErr(() => {\n    const parser = new nearley.Parser(grammar);\n    parser.feed(str);\n\n    /** @type {{ results: Node[] }} */\n    const { results } = parser;\n    switch (results.length) {\n      case 0:\n        return rezult.error(new Error('no parse result'));\n      case 1:\n        return rezult.just(asTypedNode('spec', results[0]));\n      default:\n        return rezult.error(new Error('ambiguous parse'));\n    }\n  });\n}\n","// @ts-check\n\n/** Builds a canonical RLE string from possibly redundant parts.\n *\n * Exemplars:\n * - \"A A A\" => \"3A\"\n * - \"3A 2A\" => \"5A\"\n *\n * Except that all tokenization concerns are up to the caller, so this builder\n * takes pre-parsed (count: number, sym: string) pairs, and returns a list\n * containing accumulated terms (not including the current one). The caller\n * shouldn't really care about the return value until after a terminal () call.\n *\n * Usage:\n *   const input = 'A B B 3C 3D D';\n *   const {consume, finish} = RLEBuilder();\n *   for (const token of input.split(/\\s+/)) {\n *     consume(token);\n *     // NOTE: caller may parser their own count/sym apart if necessary and call consume(count, sym)\n *   }\n *   const output = finish().join(' ');\n *   // output = \"A 2B 3C 4D\"\n *\n * NOTE: any empty symbol strings and counts <= 0 are elided\n */\nexport function RLEBuilder() {\n  /** @type {[count: number, sym: string][]} */\n  let parts = [];\n  let cur = '', curCount = 0;\n\n  return {\n    /**\n     * NOTE: altho it's the sym agument that is formally optional, one should\n     * think of this signature more like consume([count, ]sym):\n     * - if a single string argument is given, any numeric prefix is parsed out\n     *   and becomes count (default 1)\n     * - if a single numeric argument is given, that's a noop (empty symbol)\n     * - if two strings are given, any non-numeric suffix in the count string\n     *   is ignored\n     * - those last two cases are just unfortunate outcomes of javascript's\n     *   semimplicit type system, and not really intended use cases\n     *\n     * @param {string|number} count\n     * @param {string} [sym]\n     */\n    consume(count, sym) {\n      if (sym === undefined) {\n        if (typeof count != 'string') { return }\n        const match = /(\\d*)(\\w+)/.exec(count);\n        if (!match) { return }\n        count = match[1], sym = match[2];\n      }\n      if (typeof count == 'string') {\n        count = parseInt(count);\n        if (isNaN(count)) {\n          count = 1;\n        }\n      }\n\n      if (cur !== sym) {\n        if (cur && curCount) {\n          parts.push([curCount, cur]);\n        }\n        cur = sym, curCount = 0;\n      }\n      curCount += count;\n    },\n\n    finish() {\n      if (cur && curCount) {\n        parts.push([curCount, cur]);\n      }\n      const res = parts;\n      parts = [], cur = '', curCount = 0;\n      return res;\n    }\n  };\n}\n\n/** @param {Iterable<[count: string|number, sym?: string]>} countsyms */\nexport function from(countsyms) {\n  const { consume, finish } = RLEBuilder();\n  for (const [count, sym] of countsyms) {\n    consume(count, sym);\n  }\n  return finish();\n}\n","// @ts-check\n\nimport { from as rleFrom } from './rle-builder.js';\n\n/** @typedef {import('./grammar.js').Node} Node */\n\n\n// TODO reconcile with ./constants.js\nconst TurnSyms = {\n  RelLeft: 'L',\n  RelRight: 'R',\n  RelForward: 'F',\n  RelBackward: 'B',\n  RelDoubleLeft: 'P',\n  RelDoubleRight: 'S',\n  AbsNorth: 'NO',\n  AbsNorthWest: 'NW',\n  AbsNorthEast: 'NE',\n  AbsSouth: 'SO',\n  AbsSouthEast: 'SE',\n  AbsSouthWest: 'SW'\n};\n\n// TODO: de-dupe\nconst opPrec = ['+', '-', '*', '/', '%'];\n\n/**\n * @param {Node[]} nodes\n * @returns {Generator<string>}\n */\nexport default function* toSpecString(...nodes) {\n  yield* toString(0, ...nodes);\n}\n\n/**\n * @param {number} outerPrec\n * @param {Node[]} nodes\n * @returns {Generator<string>}\n */\nfunction* toString(outerPrec, ...nodes) {\n  for (const node of nodes) {\n    switch (node.type) {\n\n      case 'spec': {\n        const { entries } = node;\n        for (const entry of entries) {\n          yield* toString(outerPrec, entry);\n        }\n        break;\n      }\n\n      case 'comment': {\n        const { comment } = node;\n        yield `--${comment}`;\n        break;\n      }\n\n      case 'directive': {\n        const { name, value } = node;\n        yield `@${name} ${value}`\n        break;\n      }\n\n      case 'assign': {\n        const { id: { name }, value } = node;\n        const it = toString(outerPrec, value)\n        yield `${name} = ${next(it, '')}`;\n        yield* it;\n        break;\n      }\n\n      case 'rule': {\n        const { when, then } = node;\n        const it = toString(outerPrec, when, then)\n        yield `${next(it, '')} => ${next(it, '')}`;\n        yield* it;\n        break;\n      }\n\n      case 'when': {\n        const { state, color } = node;\n        const it = toString(outerPrec, state, color);\n        yield `${next(it, '')}, ${next(it, '')}`;\n        yield* it;\n        break;\n      }\n\n      case 'then':\n        const { state, color, turn } = node;\n        const it = toString(outerPrec, state, color, turn);\n        yield `${next(it, '')}, ${next(it, '')}, ${next(it, '')}`;\n        yield* it;\n        break;\n\n      case 'thenVal': {\n        const { mode } = node;\n        if (mode === '_') {\n          yield '_';\n          break;\n        }\n\n        const { value } = node;\n        const it = toString(outerPrec, value);\n        yield `${mode === '=' ? '' : mode}${next(it, '')}`;\n        yield* it;\n        break;\n      }\n\n      case 'member': {\n        const { value, item } = node;\n        const it = toString(outerPrec, value, item);\n        yield `${next(it, '')}[${next(it, '')}]`;\n        yield* it;\n        break;\n      }\n\n      case 'expr': {\n        const { op, arg1, arg2 } = node;\n        const prec = opPrec.indexOf(op)\n        const it = toString(outerPrec, arg1, arg2);\n        const expr = `${next(it, '')} ${op} ${next(it, '')}`;\n        yield prec < outerPrec ? `(${expr})` : expr;\n        yield* it;\n        break;\n      }\n\n      case 'identifier':\n      case 'symbol': {\n        const { name } = node;\n        yield name;\n        break;\n      }\n\n      case 'ant':\n      case 'turns': {\n        const { type, turns } = node;\n        yield `${type}(${rleFrom(turns\n          .map(({ count: { value: count }, turn }) => [count, TurnSyms[turn]])\n        )\n          .map(([count, sym]) => count > 1 ? `${count}${sym}` : sym)\n          .join(' ')})`;\n        break;\n      }\n\n      case 'turn': {\n        const { names } = node;\n        yield names.map(name => TurnSyms[name]).join('|');\n        break;\n      }\n\n      case 'number': {\n        const { value, base } = node;\n        yield value.toString(base);\n        break;\n      }\n\n      default:\n        assertNever(node, 'invalid grammar node');\n    }\n  }\n}\n\n/** @template T\n * @param {Iterator<T>} it\n * @param {T} or\n */\nfunction next(it, or) {\n  const { done, value } = it.next();\n  return done ? or : value;\n}\n\n/**\n * @param {never} impossible\n * @param {string} mess\n */\nfunction assertNever(impossible, mess) {\n  throw new Error(`${mess}: ${JSON.stringify(impossible)}`);\n}\n","// @ts-check\n\nimport {\n  assign,\n  expr,\n  isAnyExpr,\n  isAnyValue,\n  isEntryNode,\n  isNodeType,\n  member,\n  number,\n  rule,\n  spec,\n  sym,\n  then,\n  thenPass,\n  thenSet,\n  thenVal,\n  turns,\n  when,\n} from './grammar.js';\n\n/** @typedef {import('./grammar.js').AnyExpr} AnyExpr */\n/** @typedef {import('./grammar.js').ThenValNode} ThenValNode */\n/** @typedef {import('./grammar.js').CountTurn} CountTurn */\n\n/** @typedef {import('./grammar.js').Node} Node */\n/** @typedef {import('./grammar.js').SpecNode} SpecNode */\n/** @typedef {import('./grammar.js').NodeType} NodeType */\n\n/** @template T @typedef {import('./grammar.js').TypedNode<T>} TypedNode */\n\n/**\n * @param {SpecNode} spec\n * @returns {Generator<{name: string, label?: string, then: (spec: SpecNode) => SpecNode}>}\n */\nexport function* actions(spec) {\n  if (\n    spec.entries.some(({ type }) => type == 'ant') &&\n    spec.entries.every(({ type }) => type != 'rule')\n  ) yield {\n    name: 'liftToTurmite',\n    label: 'Convert To Turmite',\n    then: spec => transformed(spec,\n      matchType('ant', ({ turns }) => antRule(turns))) || spec,\n  };\n}\n\n/** @param {string} str */\nexport function isJustAnt(str) {\n  return /^\\s*ant(\\(.*|\\s*$)/.test(str);\n}\n\n/**\n * @param {CountTurn[]} antTurns\n * @param {object} options\n * @param {number} [options.state]\n * @param {AnyExpr} [options.whenState]\n * @param {ThenValNode} [options.thenState]\n */\nexport function antRule(antTurns, {\n  state = 0,\n  whenState = number(state),\n  thenState = thenSet(number(state)),\n} = {}) {\n  const c = sym('c');\n  return rule(when(whenState, c), then(\n    thenState,\n    expr('+', c, number(1)),\n    member(turns(...antTurns), c),\n  ));\n}\n\n/**\n * @template {NodeType} T\n * @param {T} type\n * @param {TypedNodeTransform<T>} fn\n * @returns {NodeTransform}\n */\nexport function matchType(type, fn) {\n  return node => isNodeType(type, node)\n    ? fn(node)\n    : undefined;\n}\n\n/** @template {NodeType} T\n * @callback TypedNodeTransform\n * @param {TypedNode<T>} node\n * @returns {Node|null|void}\n */\n\n/** @callback NodeTransform\n * @param {Node} node\n * @returns {Node|null|void}\n */\n\n/**\n * @template {Node} NT\n * @param {NT} node\n * @param {NodeTransform[]} xforms\n * @returns {NT|null}\n */\nexport function transformed(node, ...xforms) {\n  const oldType = node.type;\n\n  /**\n   * @param {Node} n\n   * @returns {n is NT}\n   */\n  function isSameType(n) {\n    return n.type === oldType;\n  }\n\n  const newNode = transform(node, ...xforms);\n  if (newNode === null) return null;\n  if (!newNode) return node;\n  if (!isSameType(newNode)) throw new Error('invalid replacement node');\n\n  return newNode;\n}\n\n/**\n * @param {Node} node\n * @param {NodeTransform[]} xforms\n * @returns {Node|null|void}\n */\nexport function transform(node, ...xforms) {\n  if (!xforms.length) return node;\n\n  /** @type {NodeTransform} */\n  const xform = xforms.length > 1\n    ? node => {\n      for (const xform of xforms) {\n        node = xform(node) || node;\n      }\n      return node;\n    }\n    : xforms[0];\n  return each(node);\n\n  /** @param {Node} node @returns {Node|null|void} */\n  function each(node) {\n    let newNode = xform(node);\n    if (newNode === null) return null; // explicit delete\n    if (newNode && newNode !== node) {\n      newNode = each(newNode) || newNode;\n    }\n    node = newNode || node;\n    const res = descend(node);\n    return res === undefined ? node : res;\n  }\n\n  /** @param {Node} node @returns {Node|null|void} */\n  function descend(node) {\n    switch (node.type) {\n\n      case 'spec': {\n        let any = false;\n        const entries = node.entries.map(entry => {\n          const rep = each(entry);\n          if (rep && !isEntryNode(rep))\n            throw new Error('invalid replacement spec entry');\n          if (rep === undefined) return entry;\n          any = any || rep !== entry;\n          return rep;\n        }).filter(notNull);\n        return !any ? undefined // no change\n          : !entries.length ? null // delete if empty\n            : spec(...entries);\n      }\n\n      case 'assign': {\n        let id = each(node.id);\n        let value = each(node.value);\n        if (id === null || value === null) return null; // delete spreads\n        if (!id && !value) return undefined; // no change\n        if (!id) id = node.id;\n        else if (id.type !== 'identifier') throw new Error('invalid replacement identifier node');\n        if (!value) value = node.value;\n        else if (!isAnyExpr(value)) throw new Error('invalid replacement value node');\n        return assign(id, value);\n      }\n\n      case 'rule': {\n        let when = each(node.when);\n        let then = each(node.then);\n        if (when === null || then === null) return null; // delete spreads\n        if (!when && !then) return undefined; // no change\n        if (!when) when = node.when;\n        else if (when.type !== 'when') throw new Error('invalid replacement when node');\n        if (!then) then = node.then;\n        else if (then.type !== 'then') throw new Error('invalid replacement then node');\n        return rule(when, then);\n      }\n\n      case 'when': {\n        let state = each(node.state);\n        let color = each(node.color);\n        if (state === null || color === null) return null; // delete spreads\n        if (!state && !color) return undefined; // no change\n        if (!state) state = node.state;\n        else if (!isAnyExpr(state)) throw new Error('invalid replacement when.state node');\n        if (!color) color = node.color;\n        else if (!isAnyExpr(color)) throw new Error('invalid replacement when.color node');\n        return when(state, color);\n      }\n\n      case 'then': {\n        let state = each(node.state);\n        let color = each(node.color);\n        let turn = each(node.turn);\n        if (state === null) state = thenPass(); // deleted clause now passes\n        if (color === null) color = thenPass(); // deleted clause now passes\n        if (turn === null) turn = thenPass(); // deleted clause now passes\n        if (!state && !color && !turn) return undefined; // no change\n        if (!state) state = node.state;\n        else if (state.type !== 'thenVal') throw new Error('invalid replacement then.state node');\n        if (!color) color = node.color;\n        else if (color.type !== 'thenVal') throw new Error('invalid replacement then.color node');\n        if (!turn) turn = node.turn;\n        else if (turn.type !== 'thenVal') throw new Error('invalid replacement then.turn node');\n        // delete spreads only if all clauses now pass (at least one was just deleted above)\n        if (state.mode === '_' && color.mode === '_' && turn.mode === '_') return null;\n        return then(state, color, turn);\n      }\n\n      case 'thenVal': {\n        const { mode } = node;\n        if (mode == '_') return undefined; // no change\n        let value = each(node.value);\n        if (value === null) return null; // delete spreads\n        if (!value) return undefined; // no change\n        if (!isAnyExpr(value)) throw new Error('invalid replacement then value node');\n        return thenVal(value, mode);\n      }\n\n      case 'member': {\n        let item = each(node.item);\n        let value = each(node.value);\n        if (item === null || value === null) return null; // delete spreads\n        if (!item && !value) return undefined; // no change\n        if (!item) item = node.item;\n        else if (!isAnyExpr(item)) throw new Error('invalid replacement item node');\n        if (!value) value = node.value;\n        else if (!isAnyValue(value)) throw new Error('invalid replacement value node');\n        return member(value, item);\n      }\n\n      case 'expr': {\n        const { op } = node;\n        let arg1 = each(node.arg1);\n        let arg2 = each(node.arg2);\n        if (arg1 === null || arg2 === null) return null; // delete spreads\n        if (!arg1 && !arg2) return undefined; // no change\n        if (!arg1) arg1 = node.arg1;\n        else if (!isAnyExpr(arg1)) throw new Error('invalid replacement arg1 node');\n        if (!arg2) arg2 = node.arg2;\n        else if (!isAnyExpr(arg2)) throw new Error('invalid replacement arg2 node');\n        return expr(op, arg1, arg2);\n      }\n\n      case 'ant':\n      case 'comment':\n      case 'directive':\n      case 'identifier':\n      case 'number':\n      case 'symbol':\n      case 'turn':\n      case 'turns':\n        return undefined;\n\n      default:\n        assertNever(node, 'invalid transform node');\n        return undefined;\n    }\n  }\n}\n\n/** @template T\n * @param {T|null} val\n * @returns {val is Exclude<T, null>}\n */\nfunction notNull(val) {\n  return val !== null;\n}\n\n/**\n * @param {never} impossible\n * @param {string} mess\n */\nfunction assertNever(impossible, mess) {\n  throw new Error(`${mess}: ${JSON.stringify(impossible)}`);\n}\n","// @ts-check\n\nimport * as rezult from '../rezult.js';\nimport * as constants from './constants.js';\n\nimport * as analyze from './analyze.js';\nimport toSpecString from './tostring.js';\n\nimport {\n  assign,\n  id,\n  member,\n} from './grammar.js';\n\n/** @typedef {import('./grammar.js').Node} Node */\n/** @typedef {import('./grammar.js').SpecNode} SpecNode */\n/** @typedef {import('./grammar.js').AssignNode} AssignNode */\n/** @typedef {import('./grammar.js').RuleNode} RuleNode */\n/** @typedef {import('./grammar.js').WhenNode} WhenNode */\n/** @typedef {import('./grammar.js').ThenNode} ThenNode */\n/** @typedef {import('./grammar.js').ThenValNode} ThenValNode */\n/** @typedef {import('./grammar.js').NumberNode} NumberNode */\n/** @typedef {import('./grammar.js').TurnsNode} TurnsNode */\n/** @typedef {import('./grammar.js').TurnNode} TurnNode */\n/** @typedef {import('./grammar.js').AnyExpr} AnyExpr */\n/** @template T @typedef {import('./grammar.js').Expr<T>} Expr */\n\n// TODO: de-dupe\nconst opPrec = ['+', '-', '*', '/', '%'];\n\n/** @typedef {{[key: number]: number}} Rules - A turmite rule lookup table\n *\n * Keys have 2 bit-packed fields encoding color and state:\n * - color: the value of the cell currently occupied by the turmite\n * - state: the turmite's current internal state value; has no intrinsic\n *          semantics other than as part of rules table keys, broadening\n *          the space of potential rules greatly as compared to an ant that\n *          merely dispatches on color\n *\n * Values have 3 bit-packed fields encoding result color, state, and turn:\n * - color: the cell currently occupied by the turmite will have its color\n *          changed to this value\n * - state: the turmite's state value will be set to this; its primary purpose\n *          is to expand the rule table keyspace, allowing for things like\n *          multiple \"modes\" of turmite rules to be packed into one table\n * - turn: bit field encoding what turn(s) the turmite should make after\n *         updating color and state as above; having multiple turn bits set\n *         implies a \"fork\" (creation of one or more new turmites)\n *\n * Therefore a rules table MUST have a specific/static length to fully\n * encompass all possible color|state keys; see RuleConstants below for how\n * particulars are specified.\n */\n\n/** @typedef {object} RuleConstants - specifies rule lookup table particulars\n * @prop {number} MaxColor - maximum color value; should be some 2^N-1\n * @prop {number} MaxState - maximum state value; should be some 2^N-1\n * @prop {number} MaxTurn - maximum turn value; should be some 2^N-1\n * @prop {number} MaskResultColor - color field mask for result extraction\n * @prop {number} MaskResultState - state field mask for result extraction\n * @prop {number} MaskResultTurn - turn field mask for result extraction\n * @prop {number} ColorShift - bit width to shift color values by when packing keys and extracting results\n * @prop {number} TurnShift - bit width to shift turn values by when extracting results\n * NOTE: state values live in the lowest bits and are therefore unshifted\n */\n\n/** @callback Builder\n * @param {Rules} rules\n * @param {RuleConstants} ruleSpec\n * @returns {rezult.Result<Built>}\n */\n\n/** @typedef {object} Built\n * @prop {number} numColors\n * @prop {number} numStates\n * @prop {string} specString\n */\n\n/**\n * @param {SpecNode} spec\n * @returns {rezult.Result<Builder>}\n */\nexport default function compileBuilder(spec) {\n  const lines = compileCode(spec);\n  const codeRes = rezult.catchErr(() => rezult.just([...endLines(lines)].join('')));\n\n  const funcRes = rezult.bind(codeRes, code => {\n    try {\n      return rezult.just(Function(`\"use strict\"; return (${code})`));\n    } catch (codeErr) {\n      return rezult.error(new Error(`${codeErr}\\nTrying to compile:\\n${code}`));\n    }\n  });\n\n  const valRes = rezult.bind(funcRes, func =>\n    rezult.catchErr(() => rezult.just(func())));\n\n  return rezult.bind(valRes, value => {\n    // TODO replace this runtime type validation with a test-time typecheck of\n    // some example code\n\n    if (typeof value != 'function') {\n      return rezult.error(new Error(\n        `invalid builder function, got a ${typeof value} instead of a function`))\n    }\n\n    return rezult.just(/** @type {Builder} */(value));\n  });\n}\n\n/** @typedef {\"value\"|\"module\"} CodeFormat */\n\n/**\n * @param {SpecNode} spec\n * @param {object} [options]\n * @param {CodeFormat} [options.format]\n */\nexport function compileCode(spec, { format = 'value' } = {}) {\n  const scope = makeScope();\n\n  return compileContent(spec);\n\n  /** @param {SpecNode} spec */\n  function* compileContent(spec) {\n    switch (format) {\n      case 'value':\n        yield* compileArrowFn(scope, ['_rules', 'World'], function*() {\n          yield* compileDefinitions(spec);\n          yield* compileRuleBuilder(spec);\n        });\n        break;\n\n      case 'module':\n        yield* compileDefinitions(spec);\n        yield* compileFunction(scope, 'export default build', ['_rules', 'World'], function*() {\n          yield* compileRuleBuilder(spec);\n        });\n        break;\n\n      default:\n        assertNever(format, 'invalid format');\n    }\n  }\n\n  /** @param {SpecNode} spec */\n  function* compileDefinitions(spec) {\n    scope.define('specString');\n    yield* amend({\n      head: 'const specString = ',\n      cont: '  ',\n      zero: `''`,\n      foot: ';',\n    }, multiLineQuoted(toSpecString(spec)));\n    yield '';\n\n    scope.define('numColors');\n    yield `const numColors = ${countNumColors(spec)};`;\n    yield '';\n  }\n\n  /**\n   * @param {Node} node\n   * @param {amendments} [params]\n   */\n  function* compileSpecComment(node, params) {\n    let spec = toSpecString(node);\n    if (params) spec = amend(params, spec);\n    yield* comment(spec);\n  }\n\n  /** @param {SpecNode} spec */\n  function* compileRuleBuilder(spec) {\n    yield 'if (numColors > World.MaxColor+1) return {err: `required numColors:${numColors} exceeds world max:(${World.MaxColor})`};';\n    yield '';\n\n    scope.define('_states');\n    yield 'const _states = new Set();';\n    yield '';\n\n    for (const entry of spec.entries) {\n      switch (entry.type) {\n        case 'comment':\n          yield* comment([entry.comment.trimStart()]);\n          break;\n\n        case 'directive':\n          yield* comment([`@${entry.name} ${entry.value.trimStart()}`]);\n          break;\n\n        case 'assign':\n          yield '';\n          yield* compileSpecComment(entry, { head: 'assign: ' });\n          yield* compileAssign(entry);\n          break;\n\n        case 'ant':\n          yield '';\n          yield* compileSpecComment(entry, { head: 'rule: ' });\n          yield* compileRule(analyze.antRule(entry.turns));\n          break;\n\n        case 'rule':\n          yield '';\n          yield* compileSpecComment(entry, { head: 'rule: ' });\n          yield* compileRule(entry);\n          break;\n\n        default:\n          assertNever(entry, 'invalid rule node');\n      }\n    }\n\n    yield 'return {value: {specString, numColors, numStates: _states.size}};';\n  }\n\n  /** @param {AssignNode} assign */\n  function* compileAssign({ id: { name }, value }) {\n    scope.define(name);\n    yield `let ${name} = ${compileValue(scope, value)};`; // TODO can this be constified?\n  }\n\n  /** @param {RuleNode} rule */\n  function* compileRule(rule) {\n    yield* scope.block(function*() {\n      /** @type {AssignNode[]} */\n      const assigns = [];\n\n      const xrule = analyze.transformed(rule,\n\n        // TODO possible, but uncertain if should bring back implicit indexing\n        // analyze.matchType('then', ({ state, color, turn }) => {\n        //   const { mode } = turn;\n        //   if (mode === '_') return;\n        //\n        //   const { value } = turn;\n        //   if (value.type !== 'turns') return;\n        //\n        //   /** @type {AnyExpr|null} */\n        //   let colorExpr = null;\n        //   analyze.transform(rule, analyze.matchType('when', ({ color }) => { colorExpr = color }));\n        //   if (!colorExpr) throw new Error('unablet to find when-color expression to auto-index then-turns');\n        //\n        //   turn = analyze.thenVal(analyze.member(value, colorExpr), mode);\n        //   return analyze.then(state, color, turn);\n        // }),\n\n        analyze.matchType('member', ({ value, item }) => {\n          switch (value.type) {\n            case 'symbol':\n            case 'identifier':\n              return;\n            default:\n              const { type } = value;\n              const name = scope.gen(`${type[0].toUpperCase()}${type.slice(1)}`);\n              assigns.push(assign(name, value));\n              return member(id(name), item);\n          }\n        }),\n\n      );\n      if (!xrule) {\n        yield* comment([\n          'eliminated by transform',\n          ...JSON.stringify(rule, null, 2).split(/\\n/)\n        ]);\n        return;\n      }\n\n      const { when, then } = xrule;\n      for (const assign of assigns)\n        yield* compileAssign(assign);\n      yield* compileRuleBody(when, then);\n    });\n  }\n\n  /**\n   * @param {WhenNode} when\n   * @param {ThenNode} then\n   */\n  function* compileRuleBody(\n    { state: whenState, color: whenColor },\n    { state: thenState, color: thenColor, turn: thenTurn },\n  ) {\n\n    /** @typedef {object} ThenDecl\n     * @prop {string} name\n     * @prop {string} mask\n     * @prop {string} max\n     * @prop {string} [shift]\n     */\n\n    const thens = /** @type {({then: ThenValNode} & ThenDecl)[]} */ ([\n      {\n        name: 'state',\n        then: thenState,\n        mask: 'World.MaskResultState',\n        max: 'World.MaxState',\n        shift: 'World.ColorShift',\n      },\n      {\n        name: 'color',\n        then: thenColor,\n        mask: 'World.MaskResultColor',\n        max: 'World.MaxColor',\n        shift: 'World.TurnShift',\n      },\n      {\n        name: 'turn',\n        then: thenTurn,\n        mask: 'World.MaskResultTurn',\n        max: 'World.MaxTurn',\n      },\n    ]).map(({ then, ...decl }) => {\n      let isEmpty = true;\n\n      const { mode } = then;\n      if (mode !== '_') {\n        const { value } = then;\n        isEmpty = mode === '|' && compileValue(\n          // ignore symbol defined check, all we care about here: \"is the expression statically 0?\"\n          { has() { return true } }, value, opPrec.length) === '0';\n      }\n\n      return { then, isEmpty, ...decl };\n    });\n    if (thens.every(({ isEmpty }) => isEmpty)) return;\n\n    /** @typedef {object} WhenDecl\n     * @prop {string} name\n     * @prop {string} cap\n     * @prop {string} sym\n     * @prop {string} max\n     * @prop {string} [shift]\n     * @prop {(cap: string) => string} [init]\n     */\n\n    const whens = /** @type {({when: AnyExpr} & WhenDecl)[]} */ ([\n      {\n        when: whenState,\n        name: 'state',\n        cap: '_state',\n        sym: '_stateKey',\n        shift: 'World.ColorShift',\n        max: 'World.MaxState',\n        init: cap => `_states.add(${cap});`,\n      },\n      {\n        when: whenColor,\n        name: 'color',\n        cap: '_color',\n        sym: '_colorKey',\n        max: 'World.MaxColor',\n      },\n    ]);\n\n    {\n      const maskParts = thens\n        .map(({ then: { mode }, mask }) => mode === '=' ? mask : '')\n        .filter(part => part);\n      switch (maskParts.length) {\n        case 0:\n          break;\n\n        case 1:\n          scope.define('_priorMask');\n          yield `const _priorMask = ~${maskParts[0]};`;\n          yield '';\n          break;\n\n        default:\n          scope.define('_priorMask');\n          yield `const _priorMask = ~(${maskParts\n            .reduce((mask, part) => `${mask}${mask ? ' | ' : ''}${part}`)});`;\n          yield '';\n      }\n    }\n\n    yield* compileWhenMatch(0);\n\n    /**\n     * @param {number} i -- whens[i]\n     * @returns {Generator<string>}\n     */\n    function* compileWhenMatch(i, priorKey = '') {\n      if (i < whens.length) {\n        const\n          { name, when, cap, sym, shift, max, init } = whens[i],\n          body = function*() {\n            let keyExpr = cap;\n            if (shift) {\n              if (priorKey) keyExpr = `(${priorKey} | ${keyExpr})`;\n              keyExpr = `${keyExpr} << ${shift}`;\n            } else if (priorKey) keyExpr = `${priorKey} | ${keyExpr}`;\n            scope.define(sym);\n            yield `const ${sym} = ${keyExpr};`;\n            if (init) yield init(cap);\n            yield '';\n            yield* compileWhenMatch(i + 1, sym);\n          };\n\n        yield* compileSpecComment(when, { head: `when ${name} matches: ` });\n\n        switch (when.type) {\n          case 'symbol':\n          case 'expr':\n            yield* amend(`for (let ${cap} = 0; ${cap} <= ${max}; ${cap}++) `, scope.block(function*() {\n              scope.define(cap);\n\n              const syms = [...freeSymbols(when, scope)];\n              if (syms.length > 1) {\n                throw new Error('matching more than one variable is unsupported');\n              }\n              const free = syms[0];\n              if (!free) {\n                throw new Error('no match variable');\n              }\n              scope.define(free);\n\n              const matchExpr = solve(scope, free, cap, when);\n              if (matchExpr === cap) {\n                yield `const ${free} = ${matchExpr};`;\n              } else {\n                yield `const ${free} = (${max} + ${matchExpr}) % ${max};`;\n                // TODO: gratuitous guard, only needed if division is involved\n                yield `if (Math.floor(${free}) !== ${free}) continue;`;\n              }\n\n              yield* body();\n            }));\n            break;\n\n          case 'number':\n            scope.define(cap);\n            yield `const ${cap} = ${when.value};`;\n            yield* body();\n            break;\n\n          default:\n            throw new Error(`unsupported match type ${when.type}`);\n        }\n      }\n\n      else {\n        /** @type {string[]} */\n        const parts = [];\n\n        const reduceParts = () => {\n          while (parts.length > 1) {\n            const b = parts.pop();\n            const a = parts.pop();\n            parts.push(`${a}\\n| ${b}`);\n          }\n          return parts.pop() || '';\n        };\n\n        for (const { name, then, max, shift } of thens) {\n          const { mode } = then;\n\n          if (mode !== '_') {\n            const { value } = then;\n            const comment = compileSpecComment(\n              value,\n              { head: `then ${name} ${mode}${mode == '=' ? '' : '='} ` });\n            const expr = compileValue(scope, value, opPrec.length);\n            if (expr !== '0') {\n              // TODO &max is only valid if max is some 2^N-1, otherwise should use Math.min(max, ...)\n              parts.push(`${expr} & ${max} ${[...comment].join('\\n')}`);\n            } else yield* comment;\n          }\n\n          if (parts.length && shift) {\n            parts.push(`( ${reduceParts()}\\n) << ${shift}`);\n          }\n        }\n\n        if (scope.has('_priorMask')) {\n          parts.unshift(`_rules[${priorKey}] & _priorMask`);\n        }\n\n        if (parts.length) {\n          yield* amend({\n            head: `_rules[${priorKey}] = `,\n            cont: '  ',\n          }, reduceParts().split(/\\n/));\n          yield '  ;';\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {Scope} scope\n * @param {string} name\n * @param {string[]} args\n * @param {() => Iterable<string>} body\n */\nfunction compileFunction(scope, name, args, body) {\n  const argNames = args.map(arg => {\n    const match = /^(\\w+)\\s*=.*$/.exec(arg);\n    return match ? match[1] : arg;\n  });\n\n  let func = 'function';\n\n  const lastSpace = name.lastIndexOf(' ')\n  if (lastSpace >= 0) {\n    // keywords like export default async (static final frozen :S)\n    func = `${name.slice(lastSpace)} ${func}`;\n    name = name.slice(lastSpace + 1);\n  }\n\n  if (name.startsWith('*')) func = `${func}*`, name = name.slice(1);\n  if (name) scope.define(name), func = `${func} ${name}`;\n\n  return amend(`${func}(${args.join(', ')}) `, scope.block(function*() {\n    scope.define(...argNames);\n    yield* body();\n  }));\n}\n\n/**\n * @param {Scope} scope\n * @param {string[]} args\n * @param {() => Iterable<string>} body\n */\nfunction compileArrowFn(scope, args, body) {\n  const argNames = args.map(arg => {\n    const match = /^(\\w+)\\s*=.*$/.exec(arg);\n    return match ? match[1] : arg;\n  });\n  return amend(`(${args.join(', ')}) => `, scope.block(function*() {\n    scope.define(...argNames);\n    yield* body();\n  }));\n}\n\n/** @param {SpecNode} spec */\nfunction countNumColors(spec) {\n  let numColors = 0;\n  analyze.transform(spec, node => {\n    switch (node.type) {\n      case 'directive': {\n        const { name, value } = node;\n        if (name !== 'numColors') return;\n        const n = parseInt(value);\n        if (!isNaN(n)) numColors = Math.max(numColors, n);\n        break;\n      }\n\n      case 'ant':\n      case 'turns': {\n        const { turns } = node;\n        numColors = Math.max(numColors, turns.length);\n        break;\n      }\n    }\n  });\n  return numColors;\n}\n\n/** @typedef {ReturnType<makeScope>} Scope */\n\nfunction makeScope() {\n  /** @type {Set<string>[]} */\n  const stack = [];\n\n  /** @type {Set<string>} */\n  let scope = new Set();\n\n  function push() {\n    stack.push(scope);\n    scope = new Set([...scope]);\n  }\n\n  function pop() {\n    scope = stack.pop() || new Set();\n  }\n\n  return {\n    /// stack\n    push, pop,\n\n    /// current scope\n    [Symbol.iterator]() {\n      return scope[Symbol.iterator]();\n    },\n\n    /** @param {string} name */\n    has(name) {\n      return scope.has(name);\n    },\n\n    /** @param {string[]} names */\n    define(...names) {\n      for (const name of names) {\n        if (scope.has(name))\n          throw new Error(`redefinition of symbol ${name}`);\n        scope.add(name);\n      }\n    },\n\n    /// convenience utilities\n\n    /** @param {string} name */\n    gen(name) {\n      for (let i = 1; /* TODO non-infinite? */; i++) {\n        const uname = name + i;\n        if (!scope.has(uname)) {\n          return uname;\n        }\n      }\n    },\n\n    /** @param {(() => Iterable<string>)} body */\n    *block(body) {\n      push();\n      yield* block(body());\n      pop();\n    },\n\n  };\n}\n\n/**\n * @param {Scope} scope\n * @param {string} cap\n * @param {string} sym\n * @param {AnyExpr} expr - TODO what even does it mean to solve a turns expression; tighten?\n * @param {number} [outerPrec]\n * @returns {string}\n */\nfunction solve(scope, cap, sym, expr, outerPrec = 0) {\n  const invOp = {\n    '+': '-',\n    '*': '/',\n    '-': '+',\n    '/': '*'\n  };\n\n  /** @type {string[]} */\n  const stack = [sym, ...genStack(expr)];\n\n  /** @returns {string} */\n  const consume = (outerPrec = 0) => {\n    const arg = stack.pop();\n    if (!arg) return 'undefined';\n\n    const prec = opPrec.indexOf(arg);\n    if (prec >= 0) {\n      const b = consume(prec);\n      const a = consume(prec);\n      return prec < outerPrec\n        ? `(${a} ${arg} ${b})`\n        : `${a} ${arg} ${b}`;\n    }\n\n    return arg;\n  };\n\n  const res = consume(outerPrec);\n  if (stack.length) throw new Error('leftover solution stack');\n  return res;\n\n  /**\n   * @param {AnyExpr} expr\n   * @returns {Generator<string>}\n   */\n  function* genStack(expr) {\n    switch (expr.type) {\n\n      case 'expr':\n        const { op, arg1, arg2 } = expr;\n\n        const leftHasSym = usedSymbols(arg1).has(cap);\n        const rightHasSym = usedSymbols(arg2).has(cap);\n        if (leftHasSym && rightHasSym) {\n          // TODO: solve each side to intermediate values\n          throw new Error('matching complex expressions not supported');\n        }\n\n        switch (op) {\n\n          case '+':\n          case '*':\n            // color = c [*+] 6 = 6 [*+] c\n            // c = color [/-] 6\n            if (leftHasSym) {\n              yield* genStack(arg2);\n              yield invOp[op];\n              yield* genStack(arg1);\n              return;\n            }\n            if (rightHasSym) {\n              yield* genStack(arg1);\n              yield invOp[op];\n              yield* genStack(arg2);\n              return;\n            }\n            break;\n\n          case '-':\n          case '/':\n            if (leftHasSym) {\n              // color = c [-/] 6\n              // c = color [+*] 6\n              yield* genStack(arg2);\n              yield invOp[op];\n              yield* genStack(arg1);\n              return;\n            }\n            if (rightHasSym) {\n              // color = 6 [-/] c\n              // c = 6 [-/] color\n              yield* genStack(arg1);\n              yield op;\n              yield* genStack(arg2);\n              return;\n            }\n            break;\n\n          case '%':\n            throw new Error(`unimplemented modulo operator solving`);\n\n          default:\n            assertNever(op, 'invalid expression operator');\n        }\n        break;\n\n      case 'symbol':\n        if (expr.name !== cap) yield expr.name;\n        return;\n    }\n\n    yield compileValue(scope, expr);\n  }\n}\n\n/**\n * @param {{has: (name: string) => boolean}} scope\n * @param {AnyExpr|TurnNode} node\n * @param {number} [outerPrec]\n * @returns {string}\n */\nfunction compileValue(scope, node, outerPrec = 0) {\n  switch (node.type) {\n\n    case 'turn':\n      return `0x${node.names\n        .reduce((turn, name) => turn | constants.Turn[name], 0)\n        .toString(16).padStart(2, '0')}`;\n\n    case 'turns':\n      const parts = [];\n      for (const { count, turn } of node.turns) {\n        const turnStr = `0x${constants.Turn[turn]\n          .toString(16).padStart(2, '0')}`;\n        for (let i = 0; i < count.value; i++) {\n          parts.push(turnStr);\n        }\n      }\n      return `[${parts.join(', ')}]`;\n\n    case 'expr':\n      const prec = opPrec.indexOf(node.op);\n      const val1 = compileValue(scope, node.arg1, prec);\n      const val2 = compileValue(scope, node.arg2, prec);\n      const exprStr = `${val1} ${node.op} ${val2}`;\n      return prec < outerPrec ? `(${exprStr})` : exprStr;\n\n    case 'member':\n      const baseVal = compileValue(scope, node.value, 0);\n      const itemVal = compileValue(scope, node.item, opPrec.length);\n      return `${baseVal}[${`${itemVal} % ${baseVal}.length`}]`;\n\n    case 'symbol':\n    case 'identifier':\n      if (!scope.has(node.name)) {\n        throw new Error(`undefined ${node.type} ${JSON.stringify(node.name)}`);\n      }\n      return node.name;\n\n    case 'number':\n      switch (node.base) {\n        case 16:\n          return `0x${node.value.toString(16)}`;\n        default:\n          return node.value.toString(10);\n      }\n\n    default:\n      assertNever(node, 'invalid value node');\n      return `/* invalid node type */`; // unreachable branch, but tsc can't prove that?\n  }\n}\n\n/**\n * @param {AnyExpr} expr\n * @param {{has: (name: string) => boolean}} symbols\n */\nfunction* freeSymbols(expr, symbols) {\n  for (const name of usedSymbols(expr)) {\n    if (!symbols.has(name)) yield name;\n  }\n}\n\n/** @param {AnyExpr} expr */\nfunction usedSymbols(expr) {\n  /** @type {Set<string>} */\n  const used = new Set();\n  analyze.transform(expr, analyze.matchType('symbol', ({ name }) => {\n    used.add(name);\n  }));\n  return used;\n}\n\n/** @param {Iterable<string>} lines */\nfunction* multiLineQuoted(lines) {\n  // NOTE: there's a similar routine in glsl-loader.js\n  let next = '';\n  for (const line of lines) {\n    if (next) {\n      yield `${next} +`;\n    }\n    next = JSON.stringify(line + '\\n');\n  }\n  if (next) {\n    yield next;\n  }\n}\n\n/** @param {Iterable<string>} lines */\nfunction* comment(lines, mark = '// ') {\n  yield* prefix(mark, lines);\n}\n\n/**\n* @param {string} prefix\n* @param {Iterable<string>} lines\n*/\nfunction* prefix(prefix, lines) {\n  const allSpace = prefix.trim().length == 0;\n  for (const line of lines) {\n    yield line || !allSpace ? prefix + line : line;\n  }\n}\n\n/** @param {Iterable<string>} lines */\nexport function* endLines(lines, nl = '\\n') {\n  for (const line of lines) {\n    yield line + nl;\n  }\n}\n\n/** @typedef {object} amendments\n * @prop {string} [head] - prefix for the first line\n * @prop {string} [foot] - suffix for the last line\n * @prop {string} [cont] - prefix for all lines after the first\n * @prop {string} [zero] - filler value when lines is empty\n */\n\n/** @param {(Iterable<string>|string)[]} parts */\nfunction* block(...parts) {\n  yield* wrap({ head: '{', cont: '  ', foot: '}' }, ...parts)\n}\n\n/**\n * @param {amendments} params\n * @param {(Iterable<string>|string)[]} parts\n */\nfunction* wrap({ head = '', foot = '', cont = '', zero = 'undefined' }, ...parts) {\n  if (head) {\n    yield head;\n  }\n  let any = false;\n  for (const line of chain(...parts)) {\n    yield cont ? `${cont}${line}` : line;\n    any = true;\n  }\n  if (!any && zero) {\n    yield zero;\n  }\n  if (foot) {\n    yield foot;\n  }\n}\n\n/**\n * @param {string|amendments} params\n * @param {(Iterable<string>|string)[]} parts\n */\nfunction* amend(params, ...parts) {\n  if (typeof params == 'string') {\n    params = { head: params };\n  }\n  const { head = '', foot = '', cont = '', zero = 'undefined' } = params;\n  let last = '', any = false;\n  for (const line of chain(...parts)) {\n    if (!any) {\n      any = true;\n      last = `${head}${line}`;\n    } else {\n      yield last;\n      last = `${cont}${line}`;\n    }\n  }\n  if (any) {\n    yield `${last}${foot}`;\n  } else {\n    yield `${head}${zero}${foot}`;\n  }\n}\n\n/** @param {(Iterable<string>|string)[]} parts */\nfunction* chain(...parts) {\n  for (const part of parts) {\n    if (typeof part == 'string') {\n      yield part;\n    } else {\n      yield* part;\n    }\n  }\n}\n\n/**\n * @param {never} impossible\n * @param {string} mess\n */\nfunction assertNever(impossible, mess) {\n  throw new Error(`${mess}: ${JSON.stringify(impossible)}`);\n}\n","// @ts-check\n\nimport { OddQOffset } from '../coord.js';\nimport * as rezult from '../rezult.js';\n\nimport * as constants from './constants.js';\n\nimport parseRaw from './parse.js';\nimport toSpecString from './tostring.js';\n\nimport {\n  default as compileBuilder,\n  compileCode, endLines as addLineEnds\n} from './compile.js';\n\n/** @typedef {import('./compile.js').RuleConstants} RuleConstants */\n/** @typedef {import('./compile.js').Builder} Builder */\n\nimport { actions, isJustAnt } from './analyze.js';\n\n/**\n * @param {string} str\n * @returns {Generator<{name: string, label?: string, then: (spec: string) => string}>}\n */\nexport function* ruleActions(str) {\n  const { value: spec } = parseRaw(str);\n  if (!spec) return;\n  for (const { then, ...action } of actions(spec)) yield {\n    ...action, then(str) {\n      const { value: spec } = parseRaw(str);\n      if (!spec) return str;\n      const newSpec = then(spec);\n      return [...toSpecString(newSpec)].join('\\n');\n    }\n  };\n}\n\n/** @param {string} spec */\nexport function* ruleHelp(spec) {\n  if (isJustAnt(spec)) yield* help.ant();\n  else yield* help.turmite();\n}\n\n/** @type {{[topic: string]: () => Iterable<string>}} */\nconst help = {\n\n  *ant() {\n    yield '# Basic Ant Rule Format'\n    yield '';\n    yield '    ant(<number>?<turn>...)';\n    yield '';\n    yield 'Each <turn> may be one of:';\n    yield '  - L=left, R=right';\n    yield '  - B=back, F=forward';\n    yield '  - P=port, S=starboard (these are rear-facing left/right)';\n    yield '';\n    yield '## Examples';\n    yield '';\n    yield '    ant( R L )';\n    yield '    ant( 2L 13R 2L )';\n    yield '    ant( 2L 13R 2L 42F )';\n  },\n\n  *turmite() {\n    yield '# Turmite Rule Format';\n    yield '';\n    yield 'The basic turmite rule form is:';\n    yield '    <when> => <then>';\n    yield '';\n    yield 'Where <when> has the form:';\n    yield '    <state>, <color>';\n    yield 'The state> and <color> are simple numeric (uint8) expressions that match against the world tile color (uint8) and internal turmite state (uint8).';\n    yield 'For example, a <color> term of 2*c only matches even colors';\n    yield '';\n    yield 'Similarly <then> has the form:';\n    yield '    <state>, <color>, <turn>';\n    yield '';\n    yield '- <turn> may be one of L, R, F, B, P, or S as to an ant(...) rule';\n    yield '  - additonal absolute directions are supported: NW, NO, NE, SE, SO, and SW';\n    yield '- <turn> may also be an indexed turns(...)[INDEX] expression';\n    yield '- right hand side expressions may reference symbols matched on the left';\n    yield '  - e.g. the basic ant(...) construction translates to 0, c => 0, c + 1 turns(...)[c]';\n    yield '- finally, variable assignments may precede rules, to define things like a turn sequence for use in multiple places';\n    yield '';\n    yield '## Examples';\n    yield '';\n    yield 'To make a bi-modal ant that switches between LR / RL rules on every 16-th color:';\n    yield '    0, c => 0, c + 1, turns(L R)[c]'\n    yield '    1, c => 1, c + 1, turns(R L)[c]'\n    yield '    0, 16 * c - 1 => 1, _, _'\n    yield '    1, 16 * c - 1 => 0, _, _'\n  },\n\n};\n\n/** @param {string} str */\nexport function parse(str) {\n  return rezult.bind(parseRaw(str), spec => compileBuilder(spec));\n}\n\nexport class Turmite {\n\n  static TestSpec = {\n    MaxColor: 0xff,\n    MaxState: 0xff,\n    MaxTurn: 0xffff,\n\n    MaskResultState: 0xff000000,\n    MaskResultColor: 0x00ff0000,\n    MaskResultTurn: 0x0000ffff,\n\n    ColorShift: 8,\n    TurnShift: 16,\n\n    // TODO: these are non-standard currently, but should be standardized\n    //       starting here to not hardcode below in dump()\n\n    ColorByteWidth: 1,\n    StateByteWidth: 1,\n    TurnByteWidth: 2,\n\n    ResultByteWidth: 4,\n    ResultStateShift: 24,\n    ResultColorShift: 16,\n    ResultTurnShift: 0,\n\n    KeyByteWidth: 2,\n    KeyStateMask: 0xff00,\n    KeyColorMask: 0x00ff,\n    KeyColorShift: 0,\n    KeyStateShift: 8,\n  };\n\n  /**\n   * @param {string|Builder} arg\n   * @param {RuleConstants} [spec]\n   * @param {Turmite} [ent]\n   * @returns {rezult.Result<Turmite>}\n   */\n  static from(arg, spec = Turmite.TestSpec, ent = new Turmite()) {\n    if (typeof arg === 'string') {\n      const { value, err: parseErr } = parse(arg);\n      if (parseErr) {\n        return rezult.error(parseErr);\n      }\n      arg = value;\n    }\n\n    ent.reset();\n    ent.rules.fill(0);\n\n    const { value: built, err: buildErr } = arg(ent.rules, spec);\n    if (buildErr) {\n      return rezult.error(buildErr);\n    }\n\n    const { numColors, numStates, specString } = built;\n    ent.numColors = numColors;\n    ent.numStates = numStates;\n    ent.specString = specString;\n\n    return rezult.just(ent);\n  }\n\n  constructor() {\n    this.numStates = 0;\n    this.numColors = 0;\n    this.specString = '<null turmite>';\n    this.rules = new Uint32Array(256 * 256);\n    this.dir = 0;\n    this.pos = new OddQOffset(0, 0);\n    this.state = 0;\n    this.index = 0;\n  }\n\n  reset() {\n    this.dir = 0;\n    this.pos.scale(0);\n    this.state = 0;\n  }\n\n  toString() {\n    return this.specString || '<UNKNOWN turmite>';\n  }\n\n  /** @typedef {object} World\n   * @prop {(index: number, fn: (dir: number, state: number, datum: number) => {dir: number, state: number, datum: number}) => void} updateEnt\n   */\n\n  /** @param {World} world */\n  step(world) {\n    const { rules, index } = this;\n    world.updateEnt(index, (dir, state, datum) => {\n\n      // TODO get XXX constants from a spec: RuleConstants arg\n      const color = datum & 0x00ff; // XXX World.MaskColor\n      const flags = datum & 0xff00; // XXX World.MaskFlags\n      const ruleIndex = state << 8 | color; // XXX World.ColorShift\n      const rule = rules[ruleIndex];\n      const turn = rule & 0x0000ffff; // XXX World.MaskResultTurn\n      const write = (rule & 0x00ff0000) >> 16; // XXX &World.MaskResultColor >>World.TurnShift\n      state = (rule & 0xff000000) >> 24; // XXX World.MaskResultState >>(World.TurnShift+World.ColorShift)\n      datum = flags | write | 0x0100; // XXX World.FlagVisited\n\n      const newDirs = [...constants.turnDirs(turn, dir)];\n      switch (newDirs.length) {\n        case 0:\n          break;\n        case 1:\n          dir = newDirs[0];\n          break;\n        default:\n          throw new Error('turmite forking unimplemented');\n      }\n\n      return { dir, state, datum };\n    });\n  }\n}\n\n/**\n * @param {string} str\n * @param {object} [options]\n * @param {boolean} [options.endLines]\n * @param {import('./compile.js').CodeFormat} [options.format]\n */\nexport function compile(str, {\n  endLines = false,\n  format = 'value',\n} = {}) {\n  const spec = rezult.toValue(parseRaw(str));\n  const lines = compileCode(spec, { format });\n  return endLines ? addLineEnds(lines) : lines;\n}\n","/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {ReadonlyMat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\n * Calculates the determinant of a mat3\n *\n * @param {ReadonlyMat3} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to translate\n * @param {ReadonlyVec2} v vector to translate by\n * @returns {mat3} out\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat3} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat3} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to copy\n * @returns {mat3} out\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat3\n *\n * @param {ReadonlyMat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} result the receiving vector\n * @param {ReadonlyVec4} U the first vector\n * @param {ReadonlyVec4} V the second vector\n * @param {ReadonlyVec4} W the third vector\n * @returns {vec4} result\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec4} out\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec4.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\n * Quaternion\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyVec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\n * Gets the angular distance between two unit quaternions\n *\n * @param  {ReadonlyQuat} a     Origin unit quaternion\n * @param  {ReadonlyQuat} b     Destination unit quaternion\n * @return {Number}     Angle, in radians, between the two quaternions\n */\n\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate W component of\n * @returns {quat} out\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\n * Calculate the exponential of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nexport function exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\n * Calculate the natural logarithm of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nexport function ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\n * Calculate the scalar power of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @param {Number} b amount to scale the quaternion by\n * @returns {quat} out\n */\n\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\n * Generates a random unit quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate inverse of\n * @returns {quat} out\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate conjugate of\n * @returns {quat} out\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyMat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {x} Angle to rotate around X axis in degrees.\n * @param {y} Angle to rotate around Y axis in degrees.\n * @param {z} Angle to rotate around Z axis in degrees.\n * @returns {quat} out\n * @function\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\n * Returns a string representation of a quatenion\n *\n * @param {ReadonlyQuat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\n\nexport var clone = vec4.clone;\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\n\nexport var fromValues = vec4.fromValues;\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the source quaternion\n * @returns {quat} out\n * @function\n */\n\nexport var copy = vec4.copy;\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\n\nexport var set = vec4.set;\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n * @function\n */\n\nexport var add = vec4.add;\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {ReadonlyQuat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\n\nexport var scale = vec4.scale;\n/**\n * Calculates the dot product of two quat's\n *\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\n\nexport var dot = vec4.dot;\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n * @function\n */\n\nexport var lerp = vec4.lerp;\n/**\n * Calculates the length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport var length = vec4.length;\n/**\n * Alias for {@link quat.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Calculates the squared length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\n\nexport var normalize = vec4.normalize;\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat} a The first quaternion.\n * @param {ReadonlyQuat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {ReadonlyQuat} a The first vector.\n * @param {ReadonlyQuat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport var equals = vec4.equals;\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {ReadonlyVec3} a the initial vector\n * @param {ReadonlyVec3} b the destination vector\n * @returns {quat} out\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {ReadonlyQuat} c the third operand\n * @param {ReadonlyQuat} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {ReadonlyVec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the source vector\n * @returns {vec2} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to ceil\n * @returns {vec2} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to floor\n * @returns {vec2} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to round\n * @returns {vec2} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\n * Calculates the length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to negate\n * @returns {vec2} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to invert\n * @returns {vec2} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to normalize\n * @returns {vec2} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2d} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat3} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {ReadonlyVec2} a The vec2 point to rotate\n * @param {ReadonlyVec2} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec2} out\n */\n\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\n * Get the angle between two 2D vectors\n * @param {ReadonlyVec2} a The first operand\n * @param {ReadonlyVec2} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec2 to zero\n *\n * @param {vec2} out the receiving vector\n * @returns {vec2} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\n * Alias for {@link vec2.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();","// @ts-check\n\n// TODO:\n// - detect uniform and attr names by static analysis\n// - pursue tighter integration with GLSLShader\n\nexport class GLProgram {\n\n  /**\n   * @param {WebGLRenderingContext} gl\n   * @param {WebGLProgram} prog\n   * @param {Iterable<string>} uniformNames\n   * @param {Iterable<string>} attrNames\n   */\n  constructor(gl, prog, uniformNames, attrNames) {\n\n    /** @type {{[name: string]: WebGLUniformLocation}} */\n    const uniform = {};\n\n    /** @type {{[name: string]: number}} */\n    const attr = {};\n\n    for (const name of uniformNames) {\n      const loc = gl.getUniformLocation(prog, name);\n      if (!loc) {\n        throw new Error(`unable to find uniform ${name}`);\n      }\n      uniform[name] = loc;\n    }\n\n    for (const name of attrNames) {\n      const loc = gl.getAttribLocation(prog, name);\n      if (loc < 0) {\n        throw new Error(`unable to find attrib ${name}`);\n      }\n      attr[name] = loc;\n    }\n\n    this.gl = gl;\n    this.prog = prog;\n    this.uniform = uniform;\n    this.attr = attr;\n  }\n\n  use() {\n    const { gl, prog } = this;\n    gl.useProgram(prog);\n  }\n\n  enable() {\n    const { gl, attr } = this;\n    this.use();\n    for (const attrLoc of Object.values(attr)) {\n      gl.enableVertexAttribArray(attrLoc);\n    }\n  }\n\n  disable() {\n    const { gl, attr } = this;\n    for (const attrLoc of Object.values(attr)) {\n      gl.disableVertexAttribArray(attrLoc);\n    }\n  }\n\n}\n","// @ts-check\n\n/** @typedef {import(\"./colorgen.js\").ColorTuple} ColorTuple */\n\nexport class GLPalette {\n\n  /**\n   * @param {WebGLRenderingContext} gl\n   * @param {object} options\n   * @param {number} options.unit\n   * @param {\"rgb\"|\"srgb\"} [options.format]\n   * @param {Iterable<ColorTuple>} [options.colors]\n   */\n  constructor(gl, { unit, format: formatArg = 'rgb', colors }) {\n    const format = function() {\n      if (formatArg == 'srgb') {\n        const extSRGB = gl.getExtension('EXT_sRGB');\n        if (extSRGB) {\n          return extSRGB.SRGB_EXT;\n        } else {\n          console.warn('sRGB Gl extension not available, falling back to RGB colorspace')\n        }\n      }\n      return gl.RGB;\n    }();\n    const data = new Uint8Array(256 * 3);\n    const tex = gl.createTexture();\n\n    this.gl = gl;\n    this.unit = unit;\n    this.format = format;\n    this.data = data;\n    this.tex = tex;\n\n    gl.activeTexture(gl.TEXTURE0 + unit);\n    gl.bindTexture(gl.TEXTURE_2D, tex);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n    if (colors) {\n      this.setColorsRGB(colors);\n    }\n  }\n\n  /** @param {WebGLUniformLocation} uSampler */\n  use(uSampler) {\n    const { gl, unit } = this;\n    gl.activeTexture(gl.TEXTURE0 + unit);\n    gl.uniform1i(uSampler, unit);\n  }\n\n  /** @param {Iterable<ColorTuple>} [rgbColors] */\n  setColorsRGB(rgbColors = []) {\n    const { gl, unit, tex, format, data } = this;\n    data.fill(0);\n    setNumbers(data, function*() {\n      for (const [r, g, b] of rgbColors) {\n        yield Math.round(255 * r);\n        yield Math.round(255 * g);\n        yield Math.round(255 * b);\n      }\n    }());\n\n    gl.activeTexture(gl.TEXTURE0 + unit);\n    gl.bindTexture(gl.TEXTURE_2D, tex);\n    gl.texImage2D(\n      gl.TEXTURE_2D, 0, format,\n      256, 1, 0,\n      format, gl.UNSIGNED_BYTE, data);\n  }\n\n}\n\n// TODO merge with view_gl.js\n\n/**\n * @param {{readonly length: number, [index: number]: number}|null} ar\n * @param {Iterable<number>} ns\n */\nfunction setNumbers(ar, ns) {\n  const length = ar?.length;\n  if (!length) {\n    return;\n  }\n  let i = 0;\n  for (const n of ns) {\n    ar[i] = n;\n    if (++i >= length) { return; }\n  }\n}\n\n","// @ts-check\n\n/** RangeList is a stride-2 array of numbers.\n * Each pair of numbers is a [begin, end] inclusive range interval.\n * The ranges are mutually disjoint and kept in ascending order.\n *\n * @typedef {number[]} RangeList\n */\n\n/**\n * @param {RangeList} rl\n * @param {number} begin\n * @param {number} end\n */\nexport function add(rl, begin, end) {\n  if (end < begin) {\n    throw new Error(\"invalid range\");\n  }\n\n  // won't add degenerate ranges\n  if (end === begin) {\n    return;\n  }\n\n  // find begin\n  // TODO: use binary search\n  let found = false;\n  let i = 0;\n  for (; i < rl.length; i += 2) {\n    if (begin <= rl[i] - 1) {\n      // ... @i:[begin <= a-1 < b] ...\n      rl[i] = begin;\n      found = true;\n      break;\n    }\n    if (begin <= rl[i + 1] + 1) {\n      // ... @i:[a < begin <= b+1] ...\n      found = true;\n      break;\n    }\n  }\n  // ... < [end < begin]\n  if (!found) {\n    rl.push(begin, end);\n    return;\n  }\n\n  // seek end\n  let j = i;\n  found = false;\n  for (; j < rl.length; j += 2) {\n    if (end < rl[j] - 1) {\n      // ... @i:[a <= begin <= b] ... @j:[end < c-1 < d] ...\n      if (j === i) {\n        throw new Error(\"degenerate range detected\"); // should not be possible\n      }\n      found = true;\n      break;\n    }\n    if (end <= rl[j + 1] + 1) {\n      // ... @i:[a <= begin <= b] ... @j:[c < end <= d+1] ...\n      if (j === i) {\n        // ... @i:[a <= begin < end <= b] ...\n        return;\n      }\n      end = rl[j + 1] + (end === rl[j + 1] + 1 ? 1 : 0);\n      j += 2;\n      found = true;\n      break;\n    }\n  }\n  // ... @i:[a-1 <= begin < b] ...coalesced... < end\n  if (!found) {\n    rl[i + 1] = end;\n    rl.length = i + 2;\n    return;\n  }\n\n  // coalesce\n  // ... @i:[a-1 <= begin < end] ...coalesced... @j ...tail...\n  rl[i + 1] = end;\n  i += 2;\n  if (i == j) {\n    return;\n  }\n  // TODO: rl.copyWithin\n  while (j < rl.length) {\n    rl[i++] = rl[j++];\n    rl[i++] = rl[j++];\n  }\n  rl.length = i;\n  return;\n}\n\n/** @param {RangeList} rl */\nexport function* each(rl) {\n  for (let i = 0; i < rl.length;) {\n    const begin = /** @type {number} */ (rl[i++]);\n    const end = /** @type {number} */ (rl[i++]);\n    yield { begin, end };\n  }\n}\n","// @ts-check\n\nimport {\n  add as rangeListAdd,\n  each as rangeListEach,\n} from './rangelist.js';\n/** @typedef {import('./rangelist.js').RangeList} RangeList */\n\n/**\n * @typedef {Int8Array|Uint8Array|Uint8ClampedArray|Int16Array|Uint16Array|Int32Array|Uint32Array|Float32Array|Float64Array} someTypedArray\n */\n\n// TODO would be nice to generalize this beyond the fixed verts/colors attributes\n\nexport class TileGLBuffer {\n  /**\n   * @param {number} id\n   * @param {GLBuffer} elements\n   * @param {LazyGLBuffer} verts\n   * @param {LazyGLBuffer} colors\n   */\n  constructor(id, elements, verts, colors) {\n    this.id = id;\n    /** @type {BufferIndex} */\n    this.index = [];\n    /** @type {Map<number, [begin: number, end: number]>} */\n    this.tileRanges = new Map();\n    this.usedElements = 0;\n    this.elements = elements;\n    this.verts = verts;\n    this.colors = colors;\n  }\n\n  get capacity() {\n    return Math.min(\n      this.verts.capacity,\n      this.colors.capacity,\n    );\n  }\n\n  reset() {\n    this.index.length = 0;\n    this.tileRanges.clear();\n    this.usedElements = 0;\n  }\n\n  /** @param {number} offset */\n  addElement(offset) {\n    this.elements.data[this.usedElements++] = offset;\n  }\n\n  flush() {\n    this.verts.flush();\n    this.colors.flush();\n    this.shipElements();\n  }\n\n  shipElements() {\n    this.elements.ship(0, this.usedElements);\n  }\n\n  /**\n   * @param {number} id\n   * @param {number} length\n   */\n  addTile(id, length) {\n    const { index, tileRanges, capacity } = this;\n    const [i, j/*,  w */] = placeTile(index, capacity, length);\n    if (i < 0) {\n      return -1;\n    }\n\n    if (i < index.length) {\n      scavengeTombstone(index, i, length);\n      index[i] = id;\n    } else {\n      index.push(id, length);\n    }\n    tileRanges.set(id, [j, j + length]);\n    return j;\n  }\n\n  /** @param {number} id */\n  removeTile(id) {\n    const { index, tileRanges } = this;\n    tileRanges.delete(id);\n    for (let i = 0; i < index.length; i += 2) {\n      if (index[i] === id) {\n        // set tombstone...\n        index[i] = 0;\n        // ...prune trailing tombstones\n        while (index[index.length - 2] === 0) {\n          index.length -= 2;\n        }\n        break;\n      }\n    }\n  }\n\n  /** @param {number} id */\n  tileOffset(id) {\n    const range = this.tileRanges.get(id);\n    return range ? range[0] : -1;\n  }\n}\n\nexport class GLBuffer {\n  /**\n   * @param {WebGLRenderingContext} gl\n   * @param {number} target\n   * @param {number} width\n   * @param {someTypedArray} data\n   */\n  constructor(gl, target, width, data) {\n    this.gl = gl;\n    this.target = target;\n    this.width = width;\n    this.data = data;\n    this.buf = this.gl.createBuffer();\n    this.gl.bindBuffer(this.target, this.buf);\n    this.gl.bufferData(this.target, this.data, gl.STATIC_DRAW);\n  }\n\n  get capacity() {\n    return this.data.length / this.width;\n  }\n\n  /**\n   * @param {number} lo\n   * @param {number} hi\n   */\n  ship(lo, hi) {\n    const { gl, target, buf, data, width } = this;\n    const begin = lo * width, end = hi * width;\n    gl.bindBuffer(target, buf);\n    gl.bufferSubData(target,\n      begin * data.BYTES_PER_ELEMENT,\n      data.subarray(begin, end));\n  }\n}\n\nexport class LazyGLBuffer extends GLBuffer {\n  /**\n   * @param {WebGLRenderingContext} gl\n   * @param {number} target\n   * @param {number} width\n   * @param {someTypedArray} data\n   */\n  constructor(gl, target, width, data) {\n    super(gl, target, width, data);\n    /** @type {RangeList} */\n    this.inval = [];\n  }\n\n  /**\n   * @param {number} lo\n   * @param {number} hi\n   */\n  invalidate(lo, hi) {\n    rangeListAdd(this.inval, lo, hi);\n  }\n\n  flush() {\n    const { gl, inval, target, buf, data, width } = this;\n    if (!inval.length) {\n      return;\n    }\n    gl.bindBuffer(target, buf);\n    for (const { begin, end } of rangeListEach(inval)) {\n      const i = begin * width;\n      const j = end * width;\n      gl.bufferSubData(target, data.BYTES_PER_ELEMENT * i, data.subarray(i, j));\n    }\n    inval.length = 0;\n  }\n}\n\n// TODO: unexport placeTile and scavengeTombstone once we can expand the test horizon past them\n\n/** BufferIndex is a stride-2 array of [tileId, length] pairs, used to allot gl\n * buffer space to tiles of varying sizes.\n *\n * @typedef {number[]} BufferIndex\n */\n\n/** placeTile returns the best place for a tile of length elements within the\n * an indexed buffer. Attempts to re-use any tombstoned prior allotments before\n * alloting at the end of buffer, but only if doing so would waste less buffer\n * space.\n *\n * @param {BufferIndex} index\n * @param {number} capacity - of the underlying buffer\n * @param {number} length - of the tile to place\n * @returns {[i: number, offset: number, waste: number]} - i in index, offset\n * in the underlying buffer, waste is a minmized fragmentation metric\n */\nexport function placeTile(index, capacity, length) {\n  let bestIndex = -1, bestOffset = -1, best = -1;\n  let offset = 0;\n\n  let freeIndex = -1, freeOffset = -1, freeLength = 0;\n  for (let i = 0; i < index.length; i += 2) {\n    const tileId = index[i];\n    const tileLength = index[i + 1];\n    if (!tileId) {\n      if (freeLength === 0) {\n        freeIndex = i;\n        freeOffset = offset;\n      }\n      freeLength += tileLength;\n      if (length <= freeLength) {\n        const waste = freeLength - length;\n        if (best < 0 || waste < best) {\n          bestIndex = freeIndex;\n          bestOffset = freeOffset;\n          best = waste;\n        }\n      }\n    } else if (freeLength !== 0) {\n      freeIndex = -1;\n      freeOffset = -1;\n      freeLength = 0;\n    }\n    offset += tileLength;\n  }\n\n  const free = capacity - offset;\n  if (length <= free) {\n    const waste = free - length;\n    if (best < 0 || waste < best) {\n      bestIndex = index.length;\n      bestOffset = offset;\n      best = waste;\n    }\n  }\n\n  return [bestIndex, bestOffset, best];\n}\n\n/** scavenge space from a prior allotment that has been tombstoned.\n * Any remnant space is placed in a new sucessor tombstone for future allotment.\n *\n * @param {BufferIndex} index\n * @param {number} i\n * @param {number} length\n */\nexport function scavengeTombstone(index, i, length) {\n  if (index[i]) {\n    throw new Error('not a tombstone');\n  }\n\n  let tileLength = index[i + 1];\n  index[i + 1] = length;\n\n  // coalesce range; we assume that we've been told an index of a usable set\n  // of tombstones, and so don't range check here\n  let j = i + 2, k;\n  let spare = 0;\n  for (; tileLength < length; j += 2) {\n    tileLength += index[j + 1];\n    spare += 2;\n  }\n\n  // truncate (finish any coalesce)\n  if (spare > 0) {\n    k = i + 2;\n    while (j < index.length) {\n      index[k++] = index[j++];\n    }\n    j = i + 2;\n  }\n\n  // distribute leftover\n  if (length < tileLength) {\n    const remain = tileLength - length;\n    if (!index[j]) {\n      // easy, give it to the next tombstone\n      index[j + 1] += remain;\n    } else {\n      // split into new tombstone\n      let n = index.length - j;\n      if (spare >= 2) {\n        spare -= 2;\n      } else {\n        index.push(0, 0);\n      }\n      k = index.length - 1;\n      for (; n-- > 0; k--) index[k] = index[k - 2];\n      index[j] = 0;\n      index[j + 1] = remain;\n    }\n  }\n\n  index.length -= spare;\n}\n","// @ts-check\n\nimport {\n  OddQOffset,\n  OddQBox,\n} from './coord.js';\n\n/**\n * @typedef {object} oddQPotent\n * @prop {(oqo: OddQOffset) => void} toOddQOffsetInto\n */\n\n/** @type {OddQHexTile[]} */\nconst pool = [];\n\nexport class OddQHexTile {\n  static NextId = 1;\n\n  static alloc() {\n    if (pool.length > 0) {\n      const tile = pool.shift()\n      if (tile !== undefined) {\n        return tile;\n      }\n    }\n    return new OddQHexTile();\n  }\n\n  /** @param {OddQHexTile} tile */\n  static free(tile) {\n    pool.push(tile);\n  }\n\n  free() {\n    OddQHexTile.free(this);\n  }\n\n\n  constructor() {\n    this.id = OddQHexTile.NextId++;\n    this.origin = new OddQOffset();\n    this.oqo = new OddQOffset();\n    this.width = 0;\n    this.height = 0;\n    /** @type {null|Uint16Array} */\n    this.data = null;\n    this.dirty = false;\n  }\n\n  /**\n   * @param {oddQPotent} origin\n   * @param {number} width\n   * @param {number} height\n   */\n  init(origin, width, height) {\n    const need = width * height;\n    const needBytes = need * Uint16Array.BYTES_PER_ELEMENT;\n    origin.toOddQOffsetInto(this.origin);\n    this.width = width;\n    this.height = height;\n    if (this.data === null || this.data.buffer.byteLength < needBytes) {\n      this.data = new Uint16Array(need);\n    } else {\n      if (this.data.length !== need) {\n        this.data = new Uint16Array(this.data.buffer, 0, need);\n      }\n      this.data.fill(0);\n    }\n    this.dirty = false;\n    return this;\n  }\n\n  boundingBox() {\n    const { origin, width, height } = this;\n    return new OddQBox(origin, origin.copy().addTo(width, height));\n  }\n\n  centerPoint() {\n    const { origin, width, height } = this;\n    return new OddQOffset(\n      origin.q + Math.floor(width / 2),\n      origin.r + Math.floor(height / 2)\n    );\n  }\n\n  /**\n   * @param {oddQPotent} point\n   */\n  pointToIndex(point) {\n    const { oqo, origin, width } = this;\n    point.toOddQOffsetInto(oqo);\n    return (oqo.r - origin.r) * width +\n      (oqo.q - origin.q);\n  }\n\n  /**\n   * @param {oddQPotent} point\n   * @param {(datum: number, point: oddQPotent) => number} func\n   * @returns {number}\n   */\n  update(point, func) {\n    const { data } = this;\n    if (!data) {\n      return NaN;\n    }\n    const i = this.pointToIndex(point);\n    const datum = func(orNaN(data[i]), point);\n    data[i] = datum;\n    return datum;\n  }\n\n  /**\n   * @param {oddQPotent} point\n   * @returns {number}\n   */\n  get(point) {\n    const { data } = this;\n    return data ? orNaN(data[this.pointToIndex(point)]) : NaN;\n  }\n\n  /**\n   * @param {oddQPotent} point\n   * @param {number} datum\n   * @returns {number}\n   */\n  set(point, datum) {\n    const { data } = this;\n    if (data) {\n      data[this.pointToIndex(point)] = datum;\n    }\n    return datum;\n  }\n\n  /** @param {(tile: OddQHexTile) => void} each */\n  eachTile(each) {\n    each(this);\n  }\n\n  /** @param {(point: OddQOffset, datum: number) => void} each */\n  eachDataPoint(each) {\n    const {\n      oqo: point,\n      origin: { q: loQ, r: loR },\n      width, height, data,\n    } = this;\n    if (data) {\n      const hiQ = loQ + width;\n      const hiR = loR + height;\n      let i = 0;\n      for (point.r = loR; point.r < hiR; point.r++) {\n        for (point.q = loQ; point.q < hiQ; point.q++, i++) {\n          each(point, orNaN(data[i]));\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {OddQOffset} tl\n   * @param {OddQOffset} br\n   */\n  expandBoxTo(tl, br) {\n    const {\n      origin: { q: tlq, r: tlr },\n      width, height,\n    } = this;\n    const brq = tlq + width;\n    const brr = tlr + height;\n    if (isNaN(tl.q) || isNaN(tl.r) || isNaN(br.q) || isNaN(br.r)) {\n      tl.q = tlq;\n      tl.r = tlr;\n      br.q = brq;\n      br.r = brr;\n    } else {\n      if (tlq < tl.q) tl.q = tlq;\n      if (tlr < tl.r) tl.r = tlr;\n      if (brq > br.q) br.q = brq;\n      if (brr > br.r) br.r = brr;\n    }\n  }\n\n  /**\n   * @param {OddQOffset} tl\n   * @param {OddQOffset} br\n   * @param {number} mask\n   */\n  expandBoxToIf(tl, br, mask) {\n    const { data, width, origin: { q: oq } } = this;\n    let { origin: { q, r } } = this, i = 0;\n    if (!data) {\n      return;\n    }\n\n    // if any part of the box isn't defined, initialize from the first masked\n    // point\n    if (isNaN(tl.q) || isNaN(tl.r) || isNaN(br.q) || isNaN(br.r)) {\n      while (i < data.length) {\n        if (orNaN(data[i]) & mask) {\n          tl.q = q;\n          br.q = q;\n          tl.r = r;\n          br.r = r;\n          break;\n        }\n        i++;\n        q++;\n        if (q >= oq + width) {\n          q = oq;\n          r++;\n        }\n      }\n    }\n\n    // now just expand to each masked point\n    while (i < data.length) {\n      if (orNaN(data[i]) & mask) {\n        if (q < tl.q) {\n          tl.q = q;\n        } else if (q >= br.q) {\n          br.q = q;\n        }\n        if (r < tl.r) {\n          tl.r = r;\n        } else if (r >= br.r) {\n          br.r = r;\n        }\n      }\n      i++;\n      q++;\n      if (q >= oq + width) {\n        q = oq;\n        r++;\n      }\n    }\n  }\n\n  *dump() {\n    const {\n      origin,\n      data,\n      width,\n    } = this;\n    yield 'Tile @' + origin.toString();\n    if (data) {\n      const row = [];\n      for (let i = 0; i < data.length; i++) {\n        if (i && i % width === 0) {\n          yield row.join(' ');\n          row.splice(0);\n        }\n        row.push(orNaN(data[i]).toString());\n      }\n      yield row.join(' ');\n    }\n  }\n\n}\n\n/** @param {number|undefined} un */\nfunction orNaN(un) {\n  return un === undefined ? NaN : un;\n}\n","// @ts-check\n\nimport { OddQOffset, OddQBox } from './coord.js';\nimport { OddQHexTile } from './hextile.js';\n\n/**\n * @typedef {object} oddQPotent\n * @prop {(oqo: OddQOffset) => void} toOddQOffsetInto\n */\n\n/** @typedef {(tile: OddQHexTile) => void} tileCallback */\n/** @typedef {OddQHexTile|HexTileTreeNode} tileOrNode */\n/** @typedef {tileOrNode|null} tileOrNodeOrNull */\n\nexport class HexTileTree {\n  constructor() {\n    this.minTileArea = 4;\n    this.maxTileArea = 64;\n    this.oqo = new OddQOffset(0, 0);\n\n    /** @type {null|HexTileTreeNode} */\n    this.root = null;\n\n    // TODO Map\n    /** @type {Map<number, OddQHexTile>} */\n    this.tiles = new Map();\n\n    /** @type {OddQHexTile[]} */\n    this.dirtyTiles = [];\n\n    /** @type {tileCallback} */\n    this.tileRemoved = noop;\n\n    /** @type {tileCallback} */\n    this.tileAdded = noop;\n  }\n\n  /**\n   * @param {number} id\n   * @returns {null|OddQHexTile}\n   */\n  getTile(id) {\n    return this.tiles.get(id) || null;\n  }\n\n  /** @param {OddQHexTile} tile */\n  addTile(tile) {\n    this.tiles.set(tile.id, tile);\n    tile.dirty = true;\n    this.dirtyTiles.push(tile);\n    this.tileAdded(tile);\n  }\n\n  /** @param {OddQHexTile[]} tiles */\n  removeTiles(...tiles) {\n    const { dirtyTiles } = this;\n    if (tiles.some(tile => tile.dirty)) {\n      const goneIDs = new Set(tiles.map(({ id }) => id));\n      let j = 0;\n      for (let k = 0; k < dirtyTiles.length; ++k) {\n        const dirtyTile = dirtyTiles[k];\n        if (dirtyTile) {\n          const { id } = dirtyTile;\n          if (!goneIDs.has(id)) {\n            if (j != k) {\n              dirtyTiles[j] = dirtyTile;\n            }\n            ++j;\n          }\n        }\n      }\n      dirtyTiles.length = j;\n    }\n\n    for (const tile of tiles) {\n      this.tileRemoved(tile);\n    }\n\n    for (const { id } of tiles) {\n      this.tiles.delete(id);\n    }\n\n    for (const tile of tiles) {\n      tile.free();\n    }\n  }\n\n  reset() {\n    this.dirtyTiles.length = 0;\n    this.tiles.clear();\n    this.root = null;\n  }\n\n  dump() {\n    const { root } = this;\n    return root ? [...root.dump()].join('\\n') : '';\n  }\n\n  boundingBox() {\n    const { root } = this;\n    return root ? root.boundingBox() : null;\n  }\n\n  /** @param {(tile: OddQHexTile) => void} each */\n  eachTile(each) {\n    const { root } = this;\n    if (root !== null) {\n      root.eachTile(each);\n    }\n  }\n\n  /** @param {(point: OddQOffset, datum: number) => void} each */\n  eachDataPoint(each) {\n    const { root } = this;\n    if (root !== null) {\n      root.eachDataPoint(each, null);\n    }\n  }\n\n  centerPoint() {\n    const { root } = this;\n    return root ? root.centerPoint() : null;\n  }\n\n  /** @returns {HexTileTreeNode} */\n  _ensureRoot() {\n    let { root } = this;\n    if (!root) {\n      const s = Math.ceil(Math.sqrt(this.minTileArea)) * 2;\n      root = HexTileTreeNode.alloc ? HexTileTreeNode.alloc() : new HexTileTreeNode()\n      root.init(this, null, s);\n    }\n    return root;\n  }\n\n  /** @param {oddQPotent} point */\n  _ensureTile(point) {\n    const { oqo } = this;\n    let root = this._ensureRoot();\n    point.toOddQOffsetInto(oqo);\n    while (!root.box.contains(oqo)) {\n      const expanded = root.expand();\n      if (!expanded) {\n        return null;\n      }\n      root = expanded;\n    }\n    if (root !== this.root) {\n      this.root = root;\n    }\n    root.oqo.copyFrom(oqo);\n    return root._getOrCreateTile(); // FIXME implicit oqo pass from copy in last line\n    // FIXME implicit side return in this.oqo\n  }\n\n  /**\n   * @param {oddQPotent} point\n   * @param {(datum: number, point: oddQPotent) => number} func\n   * @returns {number}\n   */\n  update(point, func) {\n    const { oqo, dirtyTiles } = this;\n    const tile = this._ensureTile(point); // NOTE: implicit return into shared oqo\n    if (!tile) { return NaN }\n    if (tile instanceof OddQHexTile && !tile.dirty) {\n      tile.dirty = true;\n      dirtyTiles.push(tile);\n    }\n    return tile.update(oqo, func);\n  }\n\n  /**\n   * @param {oddQPotent} point\n   * @returns {number}\n   */\n  get(point) {\n    return this._ensureRoot().get(point);\n  }\n\n  /**\n   * @param {oddQPotent} point\n   * @param {number} datum\n   * @returns {number}\n   */\n  set(point, datum) {\n    const { oqo, dirtyTiles } = this;\n    const tile = this._ensureTile(point); // NOTE: implicit return into shared oqo\n    if (!tile) { return NaN }\n    if (tile instanceof OddQHexTile && !tile.dirty) {\n      tile.dirty = true;\n      dirtyTiles.push(tile);\n    }\n    return tile.set(oqo, datum);\n  }\n\n}\n\nconst zoomPerm = [\n  3, // 0 --> 3\n  2, // 1 --> 2\n  1, // 2 --> 1\n  0  // 3 --> 0\n];\n\nconst tileOriginOffset = [\n  new OddQOffset(0, 0),\n  new OddQOffset(1, 0),\n  new OddQOffset(0, 1),\n  new OddQOffset(1, 1)\n];\n\nconst nodeOriginOffset = [\n  new OddQOffset(-1, -1),\n  new OddQOffset(1, -1),\n  new OddQOffset(-1, 1),\n  new OddQOffset(1, 1)\n];\n\n/** TODO this exists as a dubious testing surface, refactor it away someday\n *\n * @param {HexTileTree} tree\n * @param {OddQHexTile|HexTileTreeNode|null} tile\n * @param {number} i\n */\nexport function growTile(tree, tile, i) {\n  if (!tile) { return null }\n\n  const originOffset = tile instanceof OddQHexTile ? tileOriginOffset[i] : nodeOriginOffset[i];\n  const zoom = zoomPerm[i];\n  if (originOffset == undefined || zoom == undefined) { return null }\n\n  const tileSize = tile instanceof OddQHexTile ? tile.width : tile.tileSize;\n  const growthOrigin = tile.oqo\n    .copyFrom(originOffset)\n    .scale(tileSize)\n    .add(tile.origin);\n  const growthSize = 2 * (tile instanceof OddQHexTile ? tile.width : tile.size);\n  const tileNode = HexTileTreeNode.alloc ? HexTileTreeNode.alloc() : new HexTileTreeNode();\n  tileNode.init(tree, growthOrigin, growthSize);\n  tileNode._setTile(zoom, tile);\n  return tileNode;\n}\n\n/** @type {HexTileTreeNode[]} */\nconst pool = [];\n\nexport class HexTileTreeNode {\n  static alloc() {\n    if (pool.length > 0) {\n      const node = pool.shift()\n      if (node !== undefined) {\n        return node;\n      }\n    }\n    return new HexTileTreeNode();\n  }\n\n  /** @param {HexTileTreeNode} node */\n  static free(node) {\n    node.reset();\n    pool.push(node);\n  }\n\n  free() {\n    HexTileTreeNode.free(this);\n  }\n\n  constructor() {\n    /** @type {HexTileTree|null} */\n    this.tree = null;\n\n    this.origin = new OddQOffset(0, 0);\n    this.oqo = new OddQOffset(0, 0);\n    this.box = new OddQBox();\n    this.size = 0;\n    this.tileSize = 0;\n    this.concrete = 0;\n\n    /** @type {[tileOrNodeOrNull, tileOrNodeOrNull, tileOrNodeOrNull, tileOrNodeOrNull]} */\n    this.tiles = [null, null, null, null];\n\n    /** @type {tileCallback|null} */\n    this._replaceme = null;\n  }\n\n  /**\n   * @param {HexTileTree} tree\n   * @param {oddQPotent?} origin\n   * @param {number} size\n   * @param {tileCallback} [replaceme]\n   */\n  init(tree, origin, size, replaceme) {\n    this.tree = tree;\n    this.concrete = 0;\n    this._replaceme = replaceme || null;\n    if (origin !== null) {\n      origin.toOddQOffsetInto(this.origin);\n    } else {\n      this.origin.q = this.origin.r = 0;\n    }\n    this._setSize(size);\n    return this;\n  }\n\n  reset() {\n    const { tiles } = this;\n    const [a, b, c, d] = tiles;\n    if (a) {\n      a.free();\n      tiles[0] = null;\n    }\n    if (b) {\n      b.free();\n      tiles[1] = null;\n    }\n    if (c) {\n      c.free();\n      tiles[2] = null;\n    }\n    if (d) {\n      d.free();\n      tiles[3] = null;\n    }\n  }\n\n  /** @param {number} size */\n  _setSize(size) {\n    const { origin: { q, r }, box: { topLeft, bottomRight } } = this;\n    const tileSize = Math.floor(size / 2);\n    this.size = size;\n    this.tileSize = tileSize;\n    topLeft.q = q - tileSize;\n    topLeft.r = r - tileSize;\n    bottomRight.q = q + tileSize;\n    bottomRight.r = r + tileSize;\n  }\n\n  /** @returns {Generator<string>} */\n  *dump() {\n    const { origin, box, tiles } = this;\n    yield `TreeNode @${origin}`;\n    yield `  box: ${box}`;\n    for (let i = 0; i < tiles.length; i++) {\n      const tile = tiles[i];\n      const [first, ...tileparts] = tile ? [...tile.dump()] : ['null'];\n      yield `[${i}]: ${first}`;\n      for (const tilepart of tileparts) {\n        yield `     ${tilepart}`;\n      }\n    }\n  }\n\n  /** @param {(tile: OddQHexTile) => void} each */\n  eachTile(each) {\n    const tile = this._mayCompact();\n    if (tile) {\n      tile.eachTile(each);\n      return;\n    }\n\n    const { tiles: [a, b, c, d] } = this;\n    if (a) a.eachTile(each);\n    if (b) b.eachTile(each);\n    if (c) c.eachTile(each);\n    if (d) d.eachTile(each);\n  }\n\n  expand() {\n    const { tree, tiles } = this;\n    if (!tree) { return null }\n    this._setSize(this.size * 2);\n    for (let i = 0; i < tiles.length; i++) {\n      const tile = tiles[i];\n      const tileNode = growTile(tree, tile, i);\n      if (tileNode) {\n        this._setTile(i, tileNode);\n      }\n    }\n    return this;\n  }\n\n  boundingBox() {\n    return this.box;\n  }\n\n  /**\n   * @param {(point: OddQOffset, datum: number) => void} each\n   * @param {null|number} [fill]\n   */\n  eachDataPoint(each, fill = null) {\n    const tile = this._mayCompact();\n    if (tile) {\n      tile.eachDataPoint(each);\n      return;\n    }\n\n    const {\n      tileSize,\n      origin: { q: oq, r: or },\n      oqo: point,\n      tiles: [a, b, c, d],\n    } = this\n\n    if (a) a.eachDataPoint(each, fill); else doFill(0);\n    if (b) b.eachDataPoint(each, fill); else doFill(1);\n    if (c) c.eachDataPoint(each, fill); else doFill(2);\n    if (d) d.eachDataPoint(each, fill); else doFill(3);\n\n    /** @param {number} i */\n    function doFill(i) {\n      if (typeof fill !== 'number') {\n        return;\n      }\n      const tileCol = i & 1;\n      const tileRow = i >> 1;\n      const loQ = oq + (tileCol ? 0 : -tileSize);\n      const loR = or + (tileRow ? 0 : -tileSize);\n      const hiQ = loQ + tileSize;\n      const hiR = loR + tileSize;\n      point.q = loQ, point.r = loR;\n      for (point.r = loR; point.r < hiR; point.r++) {\n        for (point.q = loQ; point.q < hiQ; point.q++) {\n          each(point, fill);\n        }\n      }\n    }\n  }\n\n  _mayCompact() {\n    if (!this.tree || !this._replaceme) {\n      return null;\n    }\n\n    if (this.concrete != 4) {\n      return null;\n    }\n\n    const tile = this.compact();\n    if (tile === null) {\n      // setting concrete to 5 caches the negative result of \"won't compact\" so\n      // that we don't try again in the future\n      this.concrete = 5;\n      return null;\n    }\n\n    /** @type {OddQHexTile[]} */\n    const subTiles = [];\n    for (const tile of this.tiles) {\n      if (tile && tile instanceof OddQHexTile) {\n        subTiles.push(tile);\n      }\n    }\n\n    this._replaceme(tile);\n\n    this.tree.removeTiles(...subTiles);\n\n    this.tree.addTile(tile);\n    return tile;\n  }\n\n  compact() {\n    if (!this.tree) { return null }\n    const { size, tree: { maxTileArea } } = this;\n    if (size * size > maxTileArea) {\n      return null;\n    }\n\n    // TODO should be able to do region copies from each subTile into newTile,\n    // rather than all the overhead of each => set\n\n    const { box: { topLeft }, tiles } = this;\n    const newTile = OddQHexTile.alloc ? OddQHexTile.alloc() : new OddQHexTile();\n    newTile.init(topLeft, size, size);\n    for (const subTile of tiles) {\n      if (subTile) subTile.eachDataPoint(\n        (point, datum) => newTile.set(point, datum),\n        null);\n    }\n    return newTile;\n  }\n\n  centerPoint() {\n    return this.origin;\n  }\n\n  /**\n   * @param {oddQPotent} point\n   * @param {(datum: number, point: oddQPotent) => number} func\n   * @returns {number}\n   */\n  update(point, func) {\n    const { oqo, box, tree } = this;\n    if (!tree) { return NaN }\n    const { dirtyTiles } = tree;\n    point.toOddQOffsetInto(oqo);\n    if (!box.contains(oqo)) {\n      throw new Error('update out of bounds');\n    }\n    const tile = this._mayCompact() || this._getOrCreateTile(); // FIXME implicit oqo pass\n    if (!tile) { return NaN }\n    if (tile instanceof OddQHexTile && !tile.dirty) {\n      tile.dirty = true;\n      dirtyTiles.push(tile);\n    }\n    return tile.update(oqo, func);\n  }\n\n  /**\n   * @param {oddQPotent} point\n   * @returns {number}\n   */\n  get(point) {\n    const { oqo, box } = this;\n    point.toOddQOffsetInto(oqo);\n    if (!box.contains(oqo)) {\n      return NaN;\n    }\n    const tile = this._getTile(); // FIXME implicit oqo pass\n    if (tile) {\n      return tile.get(oqo);\n    }\n    return 0;\n  }\n\n  /**\n   * @param {oddQPotent} point\n   * @param {number} datum\n   * @returns {number}\n   */\n  set(point, datum) {\n    const { oqo, box, tree } = this;\n    if (!tree) { return NaN }\n    const { dirtyTiles } = tree;\n    point.toOddQOffsetInto(oqo);\n    if (!box.contains(oqo)) {\n      throw new Error('set out of bounds');\n    }\n\n    const tile = this._mayCompact() || this._getOrCreateTile(); // FIXME implicit oqo pass\n    if (!tile) { return NaN }\n    if (tile instanceof OddQHexTile && !tile.dirty) {\n      tile.dirty = true;\n      dirtyTiles.push(tile);\n    }\n    return tile.set(this.oqo, datum);\n  }\n\n  _index() {\n    // FIXME implicit oqo arg\n    const { oqo: { q, r }, origin: { q: oq, r: or } } = this;\n\n    // TODO: bit hack: negated sign-bit of subtraction would make this branchless\n    const tileCol = q < oq ? 0 : 1;\n    const tileRow = r < or ? 0 : 1;\n    return tileRow * 2 + tileCol;\n  }\n\n  _getTile() {\n    const i = this._index(); // FIXME implicit operation on oqo passed thru\n    return this.tiles[i];\n  }\n\n  _getOrCreateTile() {\n    const { tree, tiles, tileSize } = this;\n    if (!tree) { return null }\n    const i = this._index(); // FIXME implicit operation on oqo passed thru\n    const tile = tiles[i];\n    if (tile) {\n      return tile;\n    }\n    if (tileSize * tileSize <= tree.minTileArea) {\n      return this._allocTile(i);\n    }\n    return this._allocNode(i);\n  }\n\n  /** @param {number} i */\n  _allocTile(i) {\n\n    // FIXME implicit oqo arg\n    const { tree, oqo: { q, r }, tileSize } = this;\n    if (!tree) { return null }\n    const origin = this.origin.copy();\n    if (q < origin.q) origin.q -= tileSize;\n    if (r < origin.r) origin.r -= tileSize;\n\n    const tile = OddQHexTile.alloc ? OddQHexTile.alloc() : new OddQHexTile();\n    tile.init(origin, tileSize, tileSize);\n    this._setTile(i, tile);\n    tree.addTile(tile);\n    return tile;\n  }\n\n  /** @param {number} i */\n  _allocNode(i) {\n\n    // FIXME implicit oqo arg\n    const { tree, oqo: { q, r }, tileSize } = this;\n    if (!tree) { return null }\n    const origin = this.origin.copy();\n    origin.q += tileSize / (q < origin.q ? -2 : 2);\n    origin.r += tileSize / (r < origin.r ? -2 : 2);\n\n    const node = HexTileTreeNode.alloc ? HexTileTreeNode.alloc() : new HexTileTreeNode();\n    node.init(tree, origin, tileSize);\n    this._setTile(i, node);\n    return node;\n  }\n\n  /**\n   * @param {number} i\n   * @param {tileOrNode} tile\n   */\n  _setTile(i, tile) {\n    const prior = this.tiles[i];\n    if (prior && prior instanceof HexTileTreeNode) {\n      prior._replaceme = null;\n    }\n    this.tiles[i] = tile;\n    if (tile instanceof OddQHexTile) {\n      this.concrete++;\n    } else if (tile instanceof HexTileTreeNode) {\n      tile._replaceme = tile => this._setTile(i, tile);\n    }\n  }\n\n}\n\nfunction noop() {\n}\n","// @ts-check\n\nimport { CubePoint, OddQOffset } from './coord.js';\nimport { HexTileTree } from './hextiletree.js';\n\nconst REDRAW_TIMING_WINDOW = 5000;\n\n// TODO refactor ent to be system oriented, pushing array ownership out of\n// World into a passed in EntSystem interface\n\n/** @typedef {object} Ent\n * @prop {number} index\n * @prop {number} numColors\n * @prop {number} numStates\n * @prop {OddQOffset} pos\n * @prop {number} dir\n * @prop {number} state\n * @prop {() => void} reset\n * @prop {(world: World) => void} step\n */\n\n/** @typedef {object} View\n * @prop {() => void} step - TODO why are view stepped?\n * @prop {() => void} reset\n * @prop {boolean} needsRedraw -- TODO push this concern down into view?\n * @prop {() => void} redraw\n * @prop {(i: number) => void} addEnt\n * @prop {(i: number) => void} updateEnt\n * @prop {(i: number) => void} removeEnt\n * @prop {() => void} updateEnts\n */\n\n// TODO view per-ent concerns may be better to push down into each view\n// entirely; pass EntSystem to each view?\n\nexport class World {\n\n  static MaxColor = 0xff\n  static MaxState = 0xff\n  static MaxTurn = 0xffff\n\n  static MaskResultState = 0xff000000\n  static MaskResultColor = 0x00ff0000\n  static MaskResultTurn = 0x0000ffff\n\n  static ColorShift = 8\n  static TurnShift = 16\n\n  static FlagVisited = 0x0100\n  static MaskColor = 0x00ff\n  static MaskFlags = 0xff00\n\n  constructor() {\n    this.numColors = 0;\n    this.numStates = 0;\n    this.stepCount = 0;\n    this.tile = new HexTileTree();\n\n    /** @type {Ent[]} */\n    this.ents = [];\n\n    /** @type {View[]} */\n    this.views = [];\n\n    /** @type {number[]} */\n    this.redrawTiming = [];\n    this.now = () => performance.now();\n\n    this.tmpCP = new CubePoint();\n  }\n\n  /** @param {number} i */\n  getEntPos(i) {\n    // TODO push this method out into EntSystem implementations\n    const ent = this.ents[i];\n    return ent ? ent.pos : new OddQOffset(NaN, NaN);\n  }\n\n  /** @param {number} i */\n  getEntDir(i) {\n    // TODO push this method out into EntSystem implementations\n    const ent = this.ents[i];\n    return ent ? ent.dir : NaN;\n  }\n\n  reset() {\n    const { ents, tile, views } = this;\n\n    // TODO push out into EntSystem.reset()\n    for (const ent of ents) {\n      ent.reset();\n    }\n\n    tile.reset();\n    this.stepCount = 0;\n\n    for (const view of views) {\n      view.reset();\n    }\n\n    // TODO push out into EntSystem.occupiedPositions()\n    const occupiedPositions = ents.map(({ pos }) => pos);\n    for (const pos of occupiedPositions) {\n      tile.update(pos, datum => World.FlagVisited | datum);\n    }\n\n  }\n\n  /**\n   * @param {number} i\n   * @param {(dir: number, state: number, datum: number) => {dir: number, state: number, datum: number}} fn\n   */\n  updateEnt(i, fn) {\n    // TODO refactor into unified EntSystem.step(tile);\n    //      currently this is called by Turmite.prototype.step() ala Ent.step()\n\n    const { ents, tile, tmpCP } = this;\n    const ent = ents[i];\n    if (!ent) { return }\n    const { pos, dir, state } = ent;\n    tile.update(pos, datum => {\n      const { dir: newDir, state: newState, datum: newDatum } = fn(dir, state, datum);\n      const basis = CubePoint.basis[newDir];\n      if (basis) {\n        pos.toCubeInto(tmpCP)\n          .add(basis)\n          .toOddQOffsetInto(pos);\n      }\n      ent.dir = newDir;\n      ent.state = newState;\n      return newDatum;\n    });\n    tile.update(ent.pos, datum => World.FlagVisited | datum);\n  }\n\n  step() {\n    this._step();\n    this.redraw();\n  }\n\n  /** @param {number} n */\n  stepn(n) {\n    for (let i = 0; i < n; i++) {\n      this._step();\n    }\n    this.stepCount += n;\n    return this.redraw();\n  }\n\n  _step() {\n    // TODO becomes EntSystem.step()\n    for (const ent of this.ents) {\n      ent.step(this);\n    }\n    // TODO why are view stepped? that sounds like a (re)drawing concern?\n    for (const view of this.views) {\n      view.step();\n    }\n    this.stepCount++;\n  }\n\n  redraw() {\n    let didredraw = false;\n\n    const t0 = this.now();\n    for (const view of this.views) {\n      if (view.needsRedraw) {\n        view.redraw();\n        didredraw = true;\n      }\n    }\n    const t1 = this.now();\n\n    // TODO encapulate similarly to Sample... TimingSample?\n    if (didredraw) {\n      const { redrawTiming } = this;\n      while (\n        redrawTiming[0] !== undefined &&\n        t0 - redrawTiming[0] > REDRAW_TIMING_WINDOW\n      ) {\n        redrawTiming.shift();\n        redrawTiming.shift();\n      }\n      redrawTiming.push(t0, t1);\n    }\n\n    return didredraw;\n  }\n\n  redrawTimingStats() {\n    const { redrawTiming } = this;\n    if (redrawTiming.length < 4) {\n      return null;\n    }\n\n    let n = 0, m1 = 0, m2 = 0;\n\n    let i = 0;\n    while (i < redrawTiming.length) {\n      // NOTE: the ||NaN is mainly for undefined proof, but 0 is also not a\n      // reasonable number in redrawTiming, so annihilating any maths circa a\n      // spurious 0 is likely a Good Idea ™️ ... or is at least more likely to\n      // get noticed sooner ;-)\n      const t0 = redrawTiming[i++] || NaN;\n      const t1 = redrawTiming[i++] || NaN;\n      const dur = t1 - t0;\n      const delta = dur - m1;\n      n++\n      m1 += delta / n;\n      m2 += delta * delta;\n    }\n\n    m2 /= n - 1;\n    return { n, m1, m2 };\n  }\n\n  /** @param {Ent} ent */\n  removeEnt(ent) {\n    // TODO push out into EntSystem internal concerns;\n    //      does not need to be on the World : EntSystem surface\n    const { index } = ent;\n    const { ents, views } = this;\n    if (ents[index] !== ent) {\n      throw new Error('removeEnt mismatch');\n    }\n\n    let i = index;\n    for (let j = i++; j < ents.length; j++) {\n      const ent = ents[j];\n      if (ent) {\n        ents[i] = ent;\n        ent.index = i;\n        i++;\n      }\n    }\n    ents.length = i;\n\n    for (let view of views) {\n      view.removeEnt(i);\n    }\n  }\n\n  /** @param {Ent[]} newEnts */\n  setEnts(newEnts) {\n    const { ents, tile, views } = this;\n    const priorEntsLength = ents.length;\n\n    ents.length = 0;\n    for (const ent of newEnts) {\n      ent.index = ents.length;\n      ents.push(ent);\n    }\n\n    // TODO EntSystem.occupiedPositions()\n    const occupiedPositions = newEnts.map(({ pos }) => pos);\n    for (const pos of occupiedPositions) {\n      tile.update(pos, datum => World.FlagVisited | datum);\n    }\n\n    // TODO EntSystem.numColors()\n    this.numColors = Math.max.apply(null, ents.map(({ numColors }) => numColors));\n    this.numStates = Math.max.apply(null, ents.map(({ numStates }) => numStates));\n\n    // TODO why can't this just be for view of views view.udpateEnts()\n    let i = 0;\n    for (; i < priorEntsLength; ++i) {\n      for (const view of views) {\n        view.updateEnt(i);\n      }\n    }\n    for (; i < newEnts.length; ++i) {\n      for (const view of views) {\n        view.addEnt(i);\n      }\n    }\n    for (; i < priorEntsLength; ++i) {\n      for (const view of views) {\n        view.removeEnt(i);\n      }\n    }\n  }\n\n  /** @param {View} view */\n  addView(view) {\n    this.views.push(view);\n    view.updateEnts(); // 🤦 and yet we had to do all that update/add/remove per-ent dance above?🍐wut\n    return view;\n  }\n\n}\n","// @ts-check\n\nimport * as rezult from './rezult.js';\n\nexport default class GLSLShader {\n\n  /**\n   * @param {string} name\n   * @param {string} type\n   * @param {string} source\n   * @param {GLSLShader} [nextShader]\n   */\n  constructor(name, type, source, nextShader) {\n    this.name = name;\n    this.type = type;\n    this.source = source;\n    this.nextShader = nextShader;\n  }\n\n  /** @param {GLSLShader} nextShader */\n  linkWith(nextShader) {\n    const { name, type, source, nextShader: myNextShader } = this;\n    if (myNextShader) {\n      nextShader = myNextShader.linkWith(nextShader);\n    }\n    return new GLSLShader(name, type, source, nextShader);\n  }\n\n  /** @param {WebGLRenderingContext} gl */\n  compile(gl) {\n    const { name, type, source } = this;\n\n    const typeRes = glShaderType(gl, type);\n    if (typeRes.err) {\n      return typeRes;\n    }\n\n    const shader = gl.createShader(typeRes.value);\n    if (!shader) {\n      return rezult.error(new Error(`unable to create ${type} shader`));\n    }\n\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n      const log = gl.getShaderInfoLog(shader) || '';\n      const mess = annotateCompileError(source, log);\n      return rezult.error(new Error(\n        `${name} ${type} shader compile error: ${mess}`));\n    }\n\n    return rezult.just(shader);\n  }\n\n  /**\n   * @param {WebGLRenderingContext} gl\n   * @returns {rezult.Result<WebGLProgram>}\n   */\n  load(gl) {\n    const prog = gl.createProgram();\n    if (!prog) {\n      return rezult.error(new Error('unable to create gl program'));\n    }\n\n    for (let shader = /** @type {GLSLShader|undefined} */ (this); shader; shader = shader.nextShader) {\n      const res = shader.compile(gl);\n      if (res.err) {\n        return res;\n      }\n      gl.attachShader(prog, res.value);\n    }\n\n    gl.linkProgram(prog);\n    if (!gl.getProgramParameter(prog, gl.LINK_STATUS)) {\n      const log = gl.getProgramInfoLog(prog);\n      return rezult.error(new Error(`shader program link error: ${log}`));\n    }\n\n    return rezult.just(prog);\n  }\n}\n\n/**\n * @param {WebGLRenderingContext} gl\n * @param {string} type\n */\nfunction glShaderType(gl, type) {\n  switch (type) {\n    case 'frag':\n      return rezult.just(gl.FRAGMENT_SHADER);\n    case 'vert':\n      return rezult.just(gl.VERTEX_SHADER);\n    default:\n      return rezult.error(new Error('invalid glsl shader type ' + JSON.stringify(type)));\n  }\n}\n\n/**\n * @param {string} src\n * @param {string} mess\n */\nfunction annotateCompileError(src, mess) {\n  var match = /^ERROR: \\d+:(\\d+):/.exec(mess);\n  if (!match) {\n    return mess;\n  }\n  const lineNo = parseInt(match[1] || '');\n  const contextCount = 3;\n\n  const lines = src.split(/\\n/);\n  const numLines = lines.length;\n  const w = numLines.toString().length;\n\n  return [...annotateLine(\n    numberLines(w, lines),\n    lineNo, contextCount,\n    `${' '.repeat(w)} ^-- ${mess}`\n  )].join('\\n');\n}\n\n/**\n * @param {number} w\n * @param {Iterable<string>} lines\n */\nfunction* numberLines(w, lines) {\n  let n = 0;\n  for (const line of lines) {\n    n++;\n    yield `${n.toString().padStart(w)}: ${line}`;\n  }\n}\n\n/**\n * @param {Iterable<string>} lines\n * @param {number} lineNo\n * @param {number} contextCount\n * @param {string} mess\n */\nfunction* annotateLine(lines, lineNo, contextCount, mess) {\n  let n = 0;\n  for (const line of lines) {\n    n++;\n    if (Math.abs(lineNo - n) <= contextCount) {\n      yield line;\n    }\n    if (n === lineNo) {\n      yield mess;\n    }\n  }\n}\n","// @generated from id:8fe5d2a30398cabcc7ed4fe8d8701663f454c3accc0674ba6aee737df82bcc30\n\n// @ts-check\n\nimport GLSLShader from '././glsl-shader.js';\n\nexport default new GLSLShader(\"oddq_point\", \"vert\",\n  \"/* A vertex shader for point vertices that are positioned using odd-q hexagonal\\n\" +\n  \" * coordinates.\\n\" +\n  \" *\\n\" +\n  \" * The vert attribute is just a Q,R vec2.\\n\" +\n  \" *\\n\" +\n  \" * The shader converts the Q,R vert into X,Y space, and sets gl_PointSize based\\n\" +\n  \" * on the viewport and radius uniforms.\\n\" +\n  \" *\\n\" +\n  \" * The color is simply passed along to the fragment shader\\n\" +\n  \" * for palette resolution.\\n\" +\n  \" *\\n\" +\n  \" * The optional ang attribute makes the hex partial, its two components are\\n\" +\n  \" * just a lo and hi value between 0 and 2*π.  If hi < lo, then the\\n\" +\n  \" * complementing range is drawn.\\n\" +\n  \" */\\n\" +\n  \"\\n\" +\n  \"uniform mat4 uPMatrix;\\n\" +\n  \"uniform vec2 uVP;\\n\" +\n  \"uniform float uRadius;\\n\" +\n  \"\\n\" +\n  \"attribute vec2 vert; // q, r\\n\" +\n  \"attribute vec2 ang; // aLo, aHi\\n\" +\n  \"attribute lowp float color; // i\\n\" +\n  \"\\n\" +\n  \"const vec2 scale = vec2(1.5, sqrt(3.0));\\n\" +\n  \"\\n\" +\n  \"varying lowp float vertColor;\\n\" +\n  \"varying mediump vec2 varAng;\\n\" +\n  \"\\n\" +\n  \"void main(void) {\\n\" +\n  \"    gl_PointSize = uVP.y * abs(uPMatrix[1][1]) * uRadius;\\n\" +\n  \"    gl_Position = uPMatrix * vec4(\\n\" +\n  \"        vec2(\\n\" +\n  \"            vert.x,\\n\" +\n  \"            vert.y + mod(vert.x, 2.0)/2.0\\n\" +\n  \"        ) * scale,\\n\" +\n  \"        0.0,\\n\" +\n  \"        1.0\\n\" +\n  \"    );\\n\" +\n  \"    vertColor = color + 1.0/512.0;\\n\" +\n  \"    varAng = ang;\\n\" +\n  \"}\\n\"\n);\n","// @generated from id:e9953cec26100334f8c622af64aa4e105217621f14ded4a5172b08f00a1b60fc\n\n// @ts-check\n\nimport GLSLShader from '././glsl-shader.js';\n\nexport default new GLSLShader(\"hex\", \"frag\",\n  \"/* A fragment shader which draws flat-topped hexagonal point sprites.\\n\" +\n  \" */\\n\" +\n  \"\\n\" +\n  \"varying lowp float vertColor;\\n\" +\n  \"varying mediump vec2 varAng;\\n\" +\n  \"\\n\" +\n  \"const mediump float pi = 3.141592653589793;\\n\" +\n  \"const mediump float tau = 2.0 * pi;\\n\" +\n  \"const mediump vec2 off = vec2(0.5, 0.5);\\n\" +\n  \"const mediump vec2 P0 = vec2(1.0, 0.0) / 2.0;\\n\" +\n  \"const mediump vec2 P1 = vec2(0.5, sqrt(3.0)/2.0) / 2.0;\\n\" +\n  \"const mediump float M10 = (P1.y - P0.y) / (P1.x - P0.x);\\n\" +\n  \"const mediump float B10 = P1.y - M10 * P1.x;\\n\" +\n  \"\\n\" +\n  \"uniform sampler2D uSampler;\\n\" +\n  \"\\n\" +\n  \"void main(void) {\\n\" +\n  \"    mediump vec2 p = gl_PointCoord - off;\\n\" +\n  \"    if (varAng.x != varAng.y) {\\n\" +\n  \"        mediump float a = mod(atan(p.y, p.x), tau);\\n\" +\n  \"        if (varAng.x < varAng.y) {\\n\" +\n  \"            if (a < varAng.x || a > varAng.y) {\\n\" +\n  \"                discard;\\n\" +\n  \"            }\\n\" +\n  \"        } else {\\n\" +\n  \"            if (a >= varAng.y && a <= varAng.x) {\\n\" +\n  \"                discard;\\n\" +\n  \"            }\\n\" +\n  \"        }\\n\" +\n  \"    }\\n\" +\n  \"    p = abs(p);\\n\" +\n  \"    if (p.y > P1.y || p.y > M10 * p.x + B10) {\\n\" +\n  \"        discard;\\n\" +\n  \"    }\\n\" +\n  \"    gl_FragColor = texture2D(uSampler, vec2(vertColor, 0));\\n\" +\n  \"}\\n\"\n);\n","// @ts-check\n\nimport { mat4 } from 'gl-matrix';\n\nimport { OddQOffset } from './coord.js';\nimport { GLProgram } from './glprogram.js';\nimport { GLPalette } from './glpalette.js';\nimport * as rezult from './rezult.js';\nimport {\n  GLBuffer,\n  LazyGLBuffer,\n  TileGLBuffer,\n} from './tileglbuffer.js';\nimport { World } from './world.js';\n\n// TODO how to get these resolved for type checking?\n// @ts-ignore\nimport oddqPointShader from './oddq_point.js';\n// @ts-ignore\nimport hexFragShader from './hex.js';\n\n/** @typedef {import('./coord.js').oddQToable} oddQToable */\n\n/** @typedef {import('./colorgen.js').ColorGenMaker} ColorGenMaker */\n/** @typedef {import('./colorgen.js').ColorGen} ColorGen */\n/** @typedef {import('./hextile.js').OddQHexTile} OddQHexTile */\n\n// TODO:\n// - in redraw lazily only draw dirty tiles, expand permitting\n// - switch to uint32 elements array if supported by extension\n// - switch to uint32 for q,r, use a highp in the shader\n\nconst tau = 2 * Math.PI;\nconst hexAngStep = tau / 6;\nconst float2 = 2 * Float32Array.BYTES_PER_ELEMENT;\n\nexport class ViewGL {\n\n  /**\n   * @param {World} world\n   * @param {HTMLCanvasElement} $canvas\n   */\n  constructor(world, $canvas) {\n    // TODO can we get away with not getting/retaining a world reference, and\n    // just do with what get passed in through the world -> view surface?\n    // i.e. move from `world -> view(world) + view -> world` to `world -(components)> view`\n\n    this.world = world;\n    this.$canvas = $canvas;\n\n    this.topLeftQ = new OddQOffset();\n    this.bottomRightQ = new OddQOffset();\n\n    // max uint16 value for elements:\n    // TODO: may be able to use uint32 extension\n    // TODO: platform may define max in that case? (i.e. it would seem unlikely\n    // that we can actually use a full 4Gi vert attribute, let alone that we\n    // really don't want to allocate the 224GiB vert + color arrays that it\n    // would imply\n    this.maxElement = 0xffff;\n\n    this.gl = this.$canvas.getContext('webgl') || null;\n    if (!this.gl) {\n      throw new Error('no webgl support');\n    }\n\n    this.perspectiveMatrix = mat4.identity(new Float32Array(16));\n\n    // TODO refactor GLProgram to just take a variadic list of shaders, and own\n    // the linking, rather than the shader linked-list deal it is currently\n\n    // TODO refactor GLSLShader so that each shader carries data about its\n    // uniforms and attributes; provide that data by analyzing source in the\n    // loader\n\n    // TODO @type only needed because import is not resolvable by typescript above\n    const shader = oddqPointShader.linkWith(hexFragShader);\n    const prog = rezult.toValue(shader.load(this.gl));\n\n    this.hexShader = new GLProgram(this.gl,\n      prog,\n      ['uPMatrix', 'uVP', 'uRadius'],\n      ['vert', 'ang', 'color']\n    );\n    this.uSampler = this.gl.getUniformLocation(this.hexShader.prog, 'uSampler'); // TODO: GLProgram borg\n    if (!this.uSampler) {\n      throw new Error('missing uSampler uniform');\n    }\n\n    this.tileWriter = new TileWriter(this.maxElement + 1);\n    // TODO tileBufferer should only need access to the tile storage system, not the entire world\n    this.tileBufferer = new TileBufferer(this.gl, this.world, this.tileWriter);\n    this.entBuffer = new EntGLBuffer(this.gl);\n    this.maxCellsPerTile = Math.floor((this.maxElement + 1) / this.tileWriter.cellSize);\n\n    this.cellPallete = new GLPalette(this.gl, { unit: 0 });\n    this.bodyPallete = new GLPalette(this.gl, { unit: 1 });\n    this.headPallete = new GLPalette(this.gl, { unit: 2 });\n\n    /** @type {ColorGen|null} */\n    this.antCellColorGen = null;\n    /** @type {ColorGen|null} */\n    this.emptyCellColorGen = null;\n    /** @type {ColorGen|null} */\n    this.bodyColorGen = null;\n    /** @type {ColorGen|null} */\n    this.headColorGen = null;\n\n    this.needsRedraw = false;\n\n    this.gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    this.hexShader.use();\n\n    this.gl.uniform1f(this.hexShader.uniform.uRadius, 1);\n\n    this.updateSize(); // XXX: drop?\n  }\n\n  reset() {\n    const {\n      tileBufferer,\n      topLeftQ, bottomRightQ,\n      world: { tile },\n    } = this;\n    tileBufferer.reset();\n    topLeftQ.q = 0, topLeftQ.r = 0;\n    bottomRightQ.q = 0, bottomRightQ.r = 0;\n    tile.eachTile(tileBufferer.drawUnvisited\n      ? tile => tile.expandBoxTo(topLeftQ, bottomRightQ)\n      : tile => tile.expandBoxToIf(topLeftQ, bottomRightQ, World.FlagVisited));\n    this.updateSize();\n  }\n\n  /** @param {oddQToable} pointArg */\n  expandTo(pointArg) {\n    const { topLeftQ, bottomRightQ } = this;\n    const { q, r } = pointArg.toOddQOffset();\n    let expanded = false;\n\n    if (q < topLeftQ.q) {\n      topLeftQ.q = q;\n      expanded = true;\n    } else if (q >= bottomRightQ.q) {\n      bottomRightQ.q = q;\n      expanded = true;\n    }\n\n    if (r < topLeftQ.r) {\n      topLeftQ.r = r;\n      expanded = true;\n    } else if (r >= bottomRightQ.r) {\n      bottomRightQ.r = r;\n      expanded = true;\n    }\n\n    return expanded;\n  }\n\n  updateSize() {\n    const {\n      gl,\n      hexShader: {\n        uniform: { uVP, uPMatrix },\n      },\n      perspectiveMatrix,\n      $canvas: { width, height },\n      tileWriter: {\n        cellHalfWidth: rx,\n        cellHalfHeight: ry,\n      },\n      topLeftQ, bottomRightQ,\n    } = this;\n\n    gl.viewport(0, 0, width, height);\n    gl.uniform2f(uVP, width, height);\n\n    let { x: topX, y: topY } = topLeftQ.toScreen();\n    let { x: botX, y: botY } = bottomRightQ.toScreen();\n    topX -= rx, topY -= ry;\n    botX += rx, botY += ry;\n\n    // TODO: sometimes over tweaks, but only noticable at small scale\n    const oddEnough = (bottomRightQ.q - topLeftQ.q) > 0;\n    if (topLeftQ.q & 1) {\n      topY -= ry;\n    }\n    if (bottomRightQ.q & 1 || oddEnough) {\n      botY += ry;\n    }\n\n    // fixAspectRatio\n    const aspectRatio = gl.drawingBufferWidth / gl.drawingBufferHeight;\n    const gridWidth = botX - topX;\n    const gridHeight = botY - topY;\n    const ratio = gridWidth / gridHeight;\n    if (ratio < aspectRatio) {\n      const dx = gridHeight * aspectRatio / 2 - gridWidth / 2;\n      topX -= dx, botX += dx;\n    } else if (ratio > aspectRatio) {\n      const dy = gridWidth / aspectRatio / 2 - gridHeight / 2;\n      topY -= dy, botY += dy;\n    }\n\n    mat4.ortho(perspectiveMatrix, topX, botX, botY, topY, -1, 1);\n    gl.uniformMatrix4fv(uPMatrix, false, perspectiveMatrix);\n  }\n\n  /** @param {boolean} should */\n  setDrawTrace(should) {\n    this.drawTrace = should;\n    this.updateColors();\n  }\n\n  /**\n   * @param {number} width\n   * @param {number} height\n   */\n  resize(width, height) {\n    const { $canvas } = this;\n    $canvas.width = width;\n    $canvas.height = height;\n    this.updateSize();\n    this.redraw();\n  }\n\n  redraw() {\n    const { gl, hexShader } = this;\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    hexShader.enable();\n    this.drawTiles();\n    this.drawEntities();\n    hexShader.disable();\n\n    gl.finish();\n    this.needsRedraw = false;\n  }\n\n  drawTiles() {\n    const {\n      gl,\n      hexShader: {\n        attr: {\n          ang: angAttr,\n          vert: vertAttr,\n          color: colorAttr,\n        },\n        uniform: { uRadius },\n      },\n      uSampler,\n      cellPallete,\n      tileBufferer,\n    } = this;\n\n    // flush changed tile data to buffers\n    tileBufferer.flush();\n\n    gl.uniform1f(uRadius, 1.0);\n\n    // tiles are full hexes without an ang attribute\n    gl.disableVertexAttribArray(angAttr);\n\n    cellPallete.use(uSampler);\n\n    // draw all tiles\n    for (const { index, verts, colors, elements, usedElements } of tileBufferer.tileBuffers) {\n      if (index.length) {\n        gl.bindBuffer(gl.ARRAY_BUFFER, verts.buf);\n        gl.vertexAttribPointer(vertAttr, verts.width, gl.FLOAT, false, 0, 0);\n        gl.bindBuffer(gl.ARRAY_BUFFER, colors.buf);\n        gl.vertexAttribPointer(colorAttr, colors.width, gl.UNSIGNED_BYTE, true, 0, 0);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elements.buf);\n        gl.drawElements(gl.POINTS, usedElements, gl.UNSIGNED_SHORT, 0);\n      }\n    }\n  }\n\n  drawEntities() {\n    const {\n      gl,\n      hexShader: {\n        attr: {\n          ang: angAttr,\n          vert: vertAttr,\n          color: colorAttr,\n        },\n        uniform: { uRadius },\n      },\n      uSampler,\n      bodyPallete, headPallete,\n      entBuffer,\n      world: { ents },\n    } = this;\n\n    if (!ents.length) {\n      return;\n    }\n\n    // extract world entity data\n    const poss = ents.map(({ pos }) => pos);\n    const dirs = ents.map(({ dir }) => dir);\n    entBuffer.ensureLen(ents.length);\n\n    // head and body are partial hexes with an ang attribute\n    gl.enableVertexAttribArray(angAttr);\n\n    // lay down entity color palette indices\n    setNumbers(entBuffer.colors, function*() {\n      // TODO ent color scheme beyond monotonic\n      for (let i = 0; i < poss.length; i++) {\n        yield i;\n      }\n    }());\n\n    // lay down entity positions and body arcs\n    setNumbers(entBuffer.verts, function*() {\n      for (const [{ q, r }, dir] of zip(poss, dirs)) {\n        yield q; yield r;\n        const ang = dir * hexAngStep;\n        yield ang + hexAngStep; yield ang;\n      }\n    }());\n\n    // draw entity bodies\n    bodyPallete.use(uSampler);\n    gl.uniform1f(uRadius, 0.5);\n    gl.bindBuffer(gl.ARRAY_BUFFER, entBuffer.bodyVertsBuf);\n    gl.bufferData(gl.ARRAY_BUFFER, entBuffer.verts, gl.STATIC_DRAW);\n    gl.vertexAttribPointer(vertAttr, 2, gl.FLOAT, false, float2, 0);\n    gl.vertexAttribPointer(angAttr, 2, gl.FLOAT, false, float2, float2);\n    gl.bindBuffer(gl.ARRAY_BUFFER, entBuffer.bodyColorsBuf);\n    gl.bufferData(gl.ARRAY_BUFFER, entBuffer.colors, gl.STATIC_DRAW);\n    gl.vertexAttribPointer(colorAttr, 1, gl.UNSIGNED_BYTE, true, 0, 0);\n    gl.drawArrays(gl.POINTS, 0, entBuffer.len);\n\n    // lay down entity head co-arcs\n    setStridedNumbers(entBuffer.verts, 2, 4, function*() {\n      for (const dir of dirs) {\n        const ang = dir * hexAngStep;\n        yield ang; yield ang + hexAngStep;\n      }\n    }());\n\n    // draw entity heads\n    headPallete.use(uSampler);\n    gl.uniform1f(uRadius, 0.75);\n    gl.bindBuffer(gl.ARRAY_BUFFER, entBuffer.headVertsBuf);\n    gl.bufferData(gl.ARRAY_BUFFER, entBuffer.verts, gl.STATIC_DRAW);\n    gl.vertexAttribPointer(vertAttr, 2, gl.FLOAT, false, float2, 0);\n    gl.vertexAttribPointer(angAttr, 2, gl.FLOAT, false, float2, float2);\n    gl.bindBuffer(gl.ARRAY_BUFFER, entBuffer.headColorsBuf);\n    gl.bufferData(gl.ARRAY_BUFFER, entBuffer.colors, gl.STATIC_DRAW);\n    gl.vertexAttribPointer(colorAttr, 1, gl.UNSIGNED_BYTE, true, 0, 0);\n    gl.drawArrays(gl.POINTS, 0, entBuffer.len);\n  }\n\n  // TODO these are terrible legacy api callbacks for World, burn it down...\n  // these methods used to do something different in prior iteration of the\n  // view, but are all now redundant 💀\n  addEnt() { this.updateColors(); }\n  updateEnt() { this.updateColors(); }\n  removeEnt() { this.updateColors(); }\n  updateEnts() { this.updateColors(); }\n\n  /** @param {ColorGenMaker} colorGenMaker */\n  setColorGen(colorGenMaker) {\n    const { makeColorGen } = colorGenMaker;\n    this.emptyCellColorGen = extendColorGen(makeColorGen(0), World.MaxColor);\n    this.antCellColorGen = extendColorGen(makeColorGen(1), World.MaxColor);\n    this.bodyColorGen = makeColorGen(2);\n    this.headColorGen = makeColorGen(3);\n    this.updateColors();\n  }\n\n  updateColors() {\n    const {\n      drawTrace,\n      world: { ents, numColors },\n      cellPallete, emptyCellColorGen, antCellColorGen,\n      bodyPallete, bodyColorGen,\n      headPallete, headColorGen,\n    } = this;\n    const cellGen = drawTrace ? emptyCellColorGen : antCellColorGen;\n    if (cellGen) {\n      cellPallete.setColorsRGB(cellGen(numColors));\n    }\n    if (bodyColorGen) {\n      bodyPallete.setColorsRGB(bodyColorGen(ents.length));\n    }\n    if (headColorGen) {\n      headPallete.setColorsRGB(headColorGen(ents.length));\n    }\n  }\n\n  get drawUnvisited() {\n    return this.tileBufferer.drawUnvisited;\n  }\n  set drawUnvisited(drawUnvisited) {\n    this.tileBufferer.drawUnvisited = drawUnvisited;\n  }\n\n  step() {\n    const { world } = this;\n    let expanded = false;\n    for (let i = 0; i < world.ents.length; i++) {\n      expanded = this.expandTo(world.getEntPos(i)) || expanded;\n    }\n    if (expanded) {\n      this.updateSize();\n    }\n    this.needsRedraw = true;\n  }\n}\n\nclass EntGLBuffer {\n  /** @param {WebGLRenderingContext} gl */\n  constructor(gl) {\n    this.gl = gl;\n    this.len = 0;\n    this.cap = 0;\n\n    /** @type {Float32Array|null} */\n    this.verts = null;\n    /** @type {Uint8Array|null} */\n    this.colors = null;\n\n    /** @type {WebGLBuffer|null} */\n    this.bodyVertsBuf = null;\n    /** @type {WebGLBuffer|null} */\n    this.bodyColorsBuf = null;\n\n    /** @type {WebGLBuffer|null} */\n    this.headVertsBuf = null;\n    /** @type {WebGLBuffer|null} */\n    this.headColorsBuf = null;\n  }\n\n  free() {\n    const { gl } = this;\n    this.verts = null;\n    this.colors = null;\n    gl.deleteBuffer(this.bodyVertsBuf);\n    gl.deleteBuffer(this.bodyColorsBuf);\n    gl.deleteBuffer(this.headVertsBuf);\n    gl.deleteBuffer(this.headColorsBuf);\n  }\n\n  /** @param {number} cap */\n  alloc(cap) {\n    this.cap = cap;\n    this.verts = new Float32Array(this.cap * 4);\n    this.colors = new Uint8Array(this.cap * 1);\n    this.bodyVertsBuf = this.gl.createBuffer();\n    this.bodyColorsBuf = this.gl.createBuffer();\n    this.headVertsBuf = this.gl.createBuffer();\n    this.headColorsBuf = this.gl.createBuffer();\n  }\n\n  /** @param {number} len */\n  ensureLen(len) {\n    if (len > this.cap) {\n      if (this.cap > 0) {\n        this.free();\n      }\n      this.alloc(len < 1024\n        ? 2 * len\n        : len + Math.floor(len / 4));\n    }\n    this.len = len;\n  }\n}\n\nclass TileWriter {\n  /** @param {number} bufferSize */\n  constructor(bufferSize) {\n    this.bufferSize = bufferSize;\n    this.vertSize = 2;\n    this.colorSize = 1;\n    this.cellSize = 1;\n    this.maxCells = Math.floor(this.bufferSize / this.cellSize);\n    if (this.maxCells < 1) {\n      throw new Error(\"can't fit any tiles in that bufferSize\");\n    }\n    this.elementsSize = this.cellSize * this.maxCells + 2 * (this.maxCells - 1);\n    this.colors = null;\n\n    // Flat-topped vertices indexed by 2 * Math.PI * i / 6:\n    //     2 1\n    //   3     0\n    //     4 5\n    this.cellWidth = Math.cos(0) - Math.cos(Math.PI);\n    this.cellHeight =\n      Math.sin(2 * Math.PI / 6) -\n      Math.sin(2 * Math.PI * 5 / 6);\n    this.cellHalfWidth = this.cellWidth / 2;\n    this.cellHalfHeight = this.cellHeight / 2;\n  }\n\n  /**\n   * @param {number} id\n   * @param {WebGLRenderingContext} gl\n   */\n  newTileBuffer(id, gl) {\n    const { elementsSize, bufferSize, vertSize, colorSize } = this;\n    return new TileGLBuffer(id,\n      new GLBuffer(gl, gl.ELEMENT_ARRAY_BUFFER, 1, new Uint16Array(elementsSize)),\n      new LazyGLBuffer(gl, gl.ARRAY_BUFFER, vertSize, new Float32Array(bufferSize * vertSize)),\n      new LazyGLBuffer(gl, gl.ARRAY_BUFFER, colorSize, new Uint8Array(bufferSize * colorSize)),\n    );\n  }\n\n  /**\n   * @param {OddQHexTile} tile\n   * @param {TileGLBuffer} tileBuffer\n   * @param {number} start\n   */\n  writeTileVerts({ data, origin, width, height }, { verts }, start) {\n    if (!data) { return }\n    setNumbers(verts.data.subarray(start * this.vertSize), function*() {\n      const { q: loQ, r: loR } = origin;\n      const hiQ = loQ + width;\n      const hiR = loR + height;\n      for (let r = loR; r < hiR; r++) {\n        for (let q = loQ; q < hiQ; q++) {\n          yield q;\n          yield r;\n        }\n      }\n    }());\n    const end = start + width * height;\n    verts.invalidate(start, end);\n    return end;\n  }\n\n  /**\n   * @param {OddQHexTile} tile\n   * @param {TileGLBuffer} tileBuffer\n   * @param {number} start\n   */\n  writeTileColors({ data }, { colors }, start) {\n    if (!data) { return }\n    setNumbers(colors.data.subarray(start * this.colorSize), function*() {\n      for (const datum of data) {\n        yield datum & World.MaskColor;\n      }\n    }());\n    const end = start + data.length;\n    colors.invalidate(start, end);\n    return end;\n  }\n}\n\nclass TileBufferer {\n  /**\n   * @param {WebGLRenderingContext} gl\n   * @param {World} world\n   * @param {TileWriter} tileWriter\n   */\n  constructor(gl, world, tileWriter) {\n    this.gl = gl;\n    this.world = world;\n    this.tileWriter = tileWriter;\n    this.drawUnvisited = false;\n\n    /** @type {TileGLBuffer[]} */\n    this.tileBuffers = [];\n\n    /** @type {Map<number, number>} */\n    this.bufferForTileId = new Map();\n\n    /** @type {Set<number>} */\n    this.dirtyTileBuffers = new Set();\n\n    // TODO this is a singular callback... that'll never work for more than one view...\n    this.world.tile.tileRemoved = tile => this.onWorldTileRemoved(tile);\n  }\n\n  reset() {\n    const {\n      bufferForTileId,\n      dirtyTileBuffers,\n      tileBuffers,\n    } = this;\n    bufferForTileId.clear();\n    dirtyTileBuffers.clear();\n    for (const tileBuffer of tileBuffers) {\n      tileBuffer.reset();\n    }\n  }\n\n  /** @param {OddQHexTile} tile */\n  onWorldTileRemoved(tile) {\n    const {\n      bufferForTileId,\n      tileBuffers,\n    } = this;\n    const bufferId = bufferForTileId.get(tile.id);\n    if (bufferId !== undefined) {\n      const tileBuffer = tileBuffers[bufferId];\n      if (!tileBuffer) {\n        throw new Error('got tileRemoved for an unknown tile');\n      }\n      tileBuffer.removeTile(tile.id);\n      bufferForTileId.delete(tile.id);\n    }\n  }\n\n  flush() {\n    const {\n      world: { tile: { dirtyTiles } },\n      dirtyTileBuffers,\n      tileBuffers,\n    } = this;\n    for (const tile of dirtyTiles) {\n      this.flushTile(tile);\n    }\n    dirtyTiles.length = 0;\n\n    for (const id of dirtyTileBuffers) {\n      const tileBuffer = tileBuffers[id];\n      this.flushTileBuffer(tileBuffer);\n    }\n    dirtyTileBuffers.clear();\n  }\n\n  /** @param {OddQHexTile} tile */\n  flushTile(tile) {\n    const {\n      dirtyTileBuffers,\n      tileWriter,\n    } = this;\n    const { tileBuffer, offset } = this.bufferFor(tile);\n    tileWriter.writeTileVerts(tile, tileBuffer, offset);\n    tileWriter.writeTileColors(tile, tileBuffer, offset);\n    dirtyTileBuffers.add(tileBuffer.id);\n    tile.dirty = false;\n  }\n\n  /**\n   * @param {OddQHexTile} tile\n   * @returns {{tileBuffer: TileGLBuffer, offset: number}}\n   */\n  bufferFor(tile) {\n    if (!tile.data) {\n      throw new Error('unallocated tile will not be assigned a buffer');\n    }\n\n    const {\n      gl,\n      bufferForTileId,\n      tileWriter,\n      tileBuffers,\n    } = this;\n\n    const bufferId = bufferForTileId.get(tile.id);\n    if (bufferId !== undefined) {\n      const tileBuffer = tileBuffers[bufferId];\n      const offset = tileBuffer.tileOffset(tile.id);\n      if (offset < 0) {\n        throw new Error('dissociated tileBuffer.tiles -> tile');\n      }\n      return { tileBuffer, offset };\n    }\n\n    for (const tileBuffer of tileBuffers) {\n      const offset = tileBuffer.addTile(tile.id, tile.data.length * tileWriter.cellSize);\n      if (offset >= 0) {\n        bufferForTileId.set(tile.id, tileBuffer.id);\n        return { tileBuffer, offset };\n      }\n    }\n\n    const tileBuffer = tileWriter.newTileBuffer(tileBuffers.length, gl);\n    tileBuffers.push(tileBuffer);\n    const offset = tileBuffer.addTile(tile.id, tile.data.length * tileWriter.cellSize);\n    if (offset < 0) {\n      throw new Error('unable to add tile to new tileBuffer');\n    }\n    bufferForTileId.set(tile.id, tileBuffer.id);\n    return { tileBuffer, offset };\n  }\n\n  /** @param {TileGLBuffer} tileBuffer */\n  flushTileBuffer(tileBuffer) {\n    const { world, drawUnvisited } = this;\n    tileBuffer.usedElements = 0;\n    for (const tileId of tileBuffer.tileRanges.keys()) {\n      const tile = world.tile.getTile(tileId);\n      if (!tile) {\n        throw new Error(`tile #${tileId} missing in buffer #${tileBuffer.id}`);\n      }\n      if (!tile.data) {\n        throw new Error(`tile #${tileId} has no data for buffer #${tileBuffer.id}`);\n      }\n      let offset = tileBuffer.tileOffset(tile.id);\n      for (const datum of tile.data) {\n        if (drawUnvisited || datum & World.FlagVisited) {\n          tileBuffer.addElement(offset);\n        }\n        offset++;\n      }\n    }\n    tileBuffer.flush();\n  }\n}\n\n/**\n * @param {ColorGen} gen\n * @param {number} n\n * @returns {ColorGen}\n */\nfunction extendColorGen(gen, n) {\n  return function*(m) {\n    const ar = [...gen(m)];\n    m = ar.length;\n    if (!m) return;\n    yield* ar;\n    for (let i = ar.length; i < n; i++) {\n      yield ar[i % ar.length];\n    }\n  };\n}\n\n/** @template A, B\n * @param {ArrayLike<A>} a\n * @param {ArrayLike<B>} b\n */\nfunction* zip(a, b) {\n  for (let i = 0; i < a.length && i < b.length; i++) {\n    yield /** @type {[A, B]} */([a[i], b[i]]);\n  }\n}\n\n/**\n * @param {{readonly length: number, [index: number]: number}|null} ar\n * @param {Iterable<number>} ns\n */\nfunction setNumbers(ar, ns) {\n  const length = ar?.length;\n  if (!length) {\n    return;\n  }\n  let i = 0;\n  for (const n of ns) {\n    ar[i] = n;\n    if (++i >= length) { return; }\n  }\n}\n\n/**\n * @param {{readonly length: number, [index: number]: number}|null} ar\n * @param {number} offset\n * @param {number} stride\n * @param {Iterable<number>} ns\n */\nfunction setStridedNumbers(ar, offset, stride, ns) {\n  const length = ar?.length;\n  if (!length) {\n    return;\n  }\n  let i = offset;\n  for (const n of ns) {\n    ar[i] = n;\n    if (++i >= length) { return; }\n    if (i % stride == 0) {\n      i += offset;\n    }\n  }\n}\n","// @ts-check\n\nimport colorGen from './colorgen.js';\nimport { mayQuery, mustQuery } from './domkit.js';\nimport makeHash from './hashbind.js';\nimport {\n  runPrompt,\n  loop as promptIOLoop,\n} from './prompt.js';\nimport * as rezult from './rezult.js';\nimport { Sample } from './sample.js';\nimport {\n  Turmite,\n  ruleActions as turmiteRuleActions,\n  ruleHelp as turmiteRuleHelp,\n} from './turmite/index.js';\nimport { ViewGL } from './view_gl.js';\nimport { World } from './world.js';\n\n/** @typedef {import('./world.js').Ent} Ent */\n\nconst FPSInterval = 3 * 1000;\nconst NumTimingSamples = FPSInterval / 1000 * 60;\nconst MinFPS = 20;\n\nexport default class Hexant {\n\n  /**\n   * @param {object} options\n   * @param {HTMLElement} options.$body\n   * @param {HTMLCanvasElement} [options.$view]\n   * @param {HTMLElement} [options.$fpsOverlay]\n   * @param {HTMLElement} [options.$step]\n   * @param {HTMLElement} [options.$fps]\n   * @param {HTMLElement} [options.$sps]\n   * @param {HTMLElement} [options.$redrawTiming]\n   */\n  constructor({\n    $body,\n    $view = mustQuery($body, '#view', HTMLCanvasElement),\n    $fpsOverlay = mustQuery($body, '#fpsOverlay', HTMLElement),\n    $step = mustQuery($body, '#step', HTMLElement),\n    $fps = mustQuery($body, '#fps', HTMLElement),\n    $sps = mustQuery($body, '#sps', HTMLElement),\n    $redrawTiming = mustQuery($body, '#redrawTiming', HTMLElement),\n  }) {\n    const window = $body.ownerDocument.defaultView;\n    if (!window) {\n      throw new Error('$body has no defaultView');\n    }\n\n    this.$body = $body;\n\n    function makePrompt() {\n      let $prompt = mayQuery($body, '#prompt', HTMLElement);\n      if ($prompt) $body.removeChild($prompt);\n      $prompt = $body.appendChild($body.ownerDocument.createElement('div'));\n      $prompt.id = 'prompt';\n      $prompt.classList.add('prompt');\n      return $prompt;\n    }\n\n    this.$fpsOverlay = $fpsOverlay;\n    this.$step = $step;\n    this.$fps = $fps;\n    this.$sps = $sps;\n    this.$redrawTiming = $redrawTiming;\n\n    this.window = window;\n    this.lastStepTime = null;\n    this.goalStepRate = 0;\n    this.stepRate = 0;\n    this.locked = false;\n    this.paused = true;\n    this.showFPS = false;\n\n    /** @type {number[]} */\n    this.animTimes = [];\n\n    /** @type {number[]} */\n    this.stepTimes = [];\n\n    this.animTiming = new Sample(NumTimingSamples);\n\n    this.titleBase = this.window.document.title;\n\n    this.world = new World();\n\n    this.view = new ViewGL(this.world, $view);\n    this.world.addView(this.view);\n    this.world.tile.maxTileArea = this.view.maxCellsPerTile;\n\n    const {\n      bind: bindHash,\n      load: loadHash,\n      ...hash\n    } = makeHash(window);\n\n    bindHash('colors', {\n      parse: colorGen,\n      defaultValue: rezult.toValue(colorGen('light')),\n      listener: gen => {\n        this.view.setColorGen(gen);\n        this.view.redraw();\n      },\n    });\n\n    bindHash('rule', {\n      parse: str => Turmite.from(str, World),\n      defaultValue: rezult.toValue(Turmite.from('ant(L R)', World)),\n      listener: ent => this.setEnts(ent ? [ent] : []),\n    });\n\n    bindHash('showFPS', {\n      defaultValue: false,\n      listener: showFPS => {\n        this.showFPS = showFPS;\n        this.$fpsOverlay.style.display = this.showFPS ? '' : 'none';\n      },\n    });\n\n    bindHash('stepRate', {\n      parse: rezult.lift(parseInt),\n      defaultValue: 4,\n      listener: rate => this.setStepRate(rate),\n    });\n\n    bindHash('drawUnvisited', {\n      defaultValue: false,\n      listener: drawUnvisited => this.view.drawUnvisited = drawUnvisited,\n    });\n\n    bindHash('drawTrace', {\n      defaultValue: false,\n      listener: drawTrace => {\n        this.view.setDrawTrace(drawTrace);\n        this.view.redraw();\n      },\n    });\n\n    loadHash();\n\n    this.hash = hash;\n\n    /**\n     * @typedef {object} ActionProps\n     * @prop {string[]} keys\n     * @prop {string} name\n     * @prop {string} desc\n     */\n\n    /** @template T @typedef {import('./prompt.js').Interactor<T>} Interactor */\n    /** @template T @typedef {import('./prompt.js').Looper<T>} Looper */\n\n    /**\n     * @typedef {ActionProps & (\n     * | {then: () => void}\n     * | {prompt: Interactor<unknown>}\n     * | {loop: Looper<void>}\n     * )} Action\n     */\n\n    /** @type {Action[]} */\n    const actions = [\n\n      {\n        name: 'help',\n        desc: 'show this help screen',\n        keys: ['?', 'h', 'button2'],\n        loop: function*() {\n          yield { title: 'Actions' };\n          yield {\n            help: function*() {\n              // yield `| Name | Key | Description |`;\n              // yield `|------|-----|-------------|`;\n              for (const { name, keys: [key], desc } of actions) {\n                // yield `| ${name} | \\`${key}\\` | ${desc} |`;\n                yield `${name} ( key: \\`${key}\\` )`;\n                // TODO display other keys\n                yield `: ${desc}`;\n                yield ``;\n              }\n            }()\n          }\n        },\n      },\n\n      {\n        name: 'play',\n        desc: 'play / pause the simulation',\n        keys: ['Space', 'button0'],\n        then: () => { this.playpause() },\n      },\n\n      {\n        name: 'step',\n        desc: 'single step when paused, pause if playing',\n        keys: ['.', 'button1'],\n        then: () => this.stepit(),\n      },\n\n      {\n        name: 'reset',\n        keys: ['*'],\n        desc: 'reset the simulation to initial state',\n        then: () => this.reboot(),\n      },\n\n      {\n        name: 'rule',\n        keys: ['/'],\n        desc: 'edit the simulated ant ruleset',\n        prompt: this.rulePrompt(),\n      },\n\n      {\n        name: 'colorscheme',\n        keys: ['c'],\n        desc: 'edit the color scheme used for tiles and ants',\n        prompt: this.colorPrompt(),\n      },\n\n      {\n        name: 'speed up',\n        desc: 'double simulation speed',\n        keys: ['+'],\n        then: () => this.hash.set('stepRate', this.stepRate * 2),\n      },\n\n      {\n        name: 'slow down',\n        desc: 'halve simulation speed',\n        keys: ['-'],\n        then: () => this.hash.set('stepRate', Math.max(1, Math.floor(this.stepRate / 2))),\n      },\n\n      {\n        name: 'FPS',\n        desc: 'show/hide runtime statistic overlay',\n        keys: ['f'],\n        then: () => this.hash.set('showFPS', !this.showFPS),\n      },\n\n      {\n        name: 'unvisited cells',\n        desc: 'toggle whether all visible cells are drawn instead of just visted cells ones',\n        keys: ['u'],\n        then: () => this.hash.set('drawUnvisited', !this.view.drawUnvisited),\n        // TODO trigger an immediate redraw\n      },\n\n      // TODO this used to work\n      // {\n      //   name: 'trace cells',\n      //   desc: 'toggle whether to draw traces of recently visited cells',\n      //   keys: ['t'],\n      //   then: () => this.hash.set('drawTrace', !this.view.drawTrace),\n      // },\n\n      // TODO doesn't work correctly, just replace with an action that directly\n      // generates and offer for copy such url, rather than change encoding\n      // scheme\n      //\n      // {\n      //   name: 'toggle base64 #fragment',\n      //   desc: 'change url encoding scheme to output a more easily shareable base64 form',\n      //   keys: ['b'],\n      //   then: () => this.hash.encoding = this.hash.encoding == 'b64:' ? '' : 'b64:',\n      // },\n\n      {\n        name: 'fullscreen',\n        desc: 'enter/exit fullscreen mode',\n        keys: ['Enter'],\n        then() {\n          const { ownerDocument: document } = $body;\n          if (!document.fullscreenElement) {\n            $body.requestFullscreen();\n          } else if (document.exitFullscreen) {\n            document.exitFullscreen();\n          }\n        },\n      },\n\n    ];\n\n    // TODO shifted keys are a bit awkward right now\n    /** @type {Map<string, (key: string) => void>} */\n    this.keymap = new Map(actions.flatMap(action => {\n      const then = 'then' in action ? action.then : (prompt =>\n        () => runPrompt(makePrompt, prompt)\n      )('prompt' in action ? action.prompt : promptIOLoop(action.loop));\n      return action.keys.map(key => [key, () => then()])\n    }));\n    this.keymap.set('Escape', () => {\n      let $prompt = mayQuery($body, '#prompt', HTMLElement);\n      if ($prompt) $body.removeChild($prompt);\n    });\n    // this.keymap.set('', k => console.log('?', k)) // to log unhandled events\n\n    this.window.addEventListener('keydown', this);\n    this.window.addEventListener('keyup', this);\n    this.window.addEventListener('mouseup', this);\n\n    let autoplay = false;\n    let autorefresh = 0;\n    if (this.hash.get('fullauto')) {\n      autoplay = true;\n      autorefresh = 24 * 60 * 60;\n    } else {\n      autoplay = this.hash.get('autoplay');\n      autorefresh = parseInt(this.hash.get('autorefresh'), 10);\n    }\n\n    if (!isNaN(autorefresh) && autorefresh) {\n      this.window.setTimeout(\n        () => this.window.location.reload(),\n        autorefresh * 1000);\n    }\n\n    if (autoplay) this.play();\n  }\n\n  reboot() {\n    this.pause();\n    this.setEnts([this.hash.get('rule')]);\n  }\n\n  /** @param {Ent[]} ents */\n  setEnts(ents) {\n    const title = ents.map(ent => `${ent}`).join(', ');\n    this.world.setEnts(ents);\n    this.world.reset();\n    this.view.$canvas.width = this.view.$canvas.width;\n    this.view.redraw();\n    this.window.document.title = this.titleBase + ': ' + title;\n  }\n\n  /** @param {Event} e */\n  handleEvent(e) {\n\n    /** @param {string} key */\n    const dispatch = key => {\n      let fn =\n        this.keymap.get(`${key}`)\n        || this.keymap.get(`${key.toLowerCase()}`)\n        || this.keymap.get('');\n      if (fn) {\n        e.preventDefault();\n        fn(key);\n      }\n    };\n\n    const { type } = e;\n    let $prompt = mayQuery(this.$body, '#prompt', HTMLElement);\n\n    const { target } = e;\n    if (!(\n      target === $prompt ||\n      target === this.view.$canvas ||\n      target === this.window.document.documentElement ||\n      target === this.window.document.body\n    )) return;\n\n    switch (type) {\n      case 'mouseup':\n        if (e instanceof MouseEvent) {\n          dispatch(keycode(e, { button: e.button }));\n        }\n        break;\n\n      case 'keydown':\n        if (e instanceof KeyboardEvent) {\n          switch (e.key) {\n            case 'Escape':\n              e.preventDefault();\n              break;\n          }\n        }\n        break;\n\n      case 'keyup':\n        if (e instanceof KeyboardEvent) {\n          dispatch(keycode(e, { key: e.key }));\n        }\n    }\n  }\n\n  rulePrompt() {\n    const { hash } = this;\n    const hashName = 'rule';\n    return promptIOLoop(function*(inputs) {\n      let value = hash.getStr(hashName);\n\n      for (const input of inputs) {\n        if ('value' in input) {\n          ({ value } = input);\n          const { res: { err }, str: revalue } = hash.set(hashName, value);\n          if (!err) { return true }\n          if (revalue) value = revalue;\n          yield { error: err.message };\n        }\n      }\n\n      for (const { name, then } of turmiteRuleActions(value)) {\n        for (const input of inputs) {\n          if ('command' in input) {\n            const { command } = input;\n            if (command === name) {\n              let ok = false;\n              try {\n                value = then(value);\n                ok = true;\n              } catch (e) {\n                yield { error: `${e}` }\n              }\n              if (ok) {\n                const { res: { err }, str: revalue } = hash.set(hashName, value);\n                if (revalue) value = revalue;\n                if (err) yield { error: err.message };\n              }\n            }\n          }\n        }\n      }\n\n      for (const { name, label } of turmiteRuleActions(value)) {\n        yield { command: name, label: label || name };\n      }\n\n      yield { title: 'Rule' };\n      yield { value };\n      yield { help: turmiteRuleHelp(value) };\n\n      return undefined;\n    });\n  }\n\n  colorPrompt() {\n    const { hash } = this;\n    const hashName = 'colors';\n    return promptIOLoop(\n      function*(inputs) {\n        for (const input of inputs) {\n          if ('value' in input) {\n            const { value } = input;\n            const { res: { err }, str: revalue } = hash.set(hashName, value);\n            if (!err) { return true }\n            yield { error: err.message };\n            yield { value: revalue || value };\n            yield { title: 'Colors' };\n          }\n        }\n        return undefined;\n      },\n\n      function*() {\n        const value = hash.getStr(hashName);\n        yield { value };\n        yield { title: 'Colors' };\n        return undefined;\n      });\n  }\n\n  /** @param {number} time */\n  calcSteps(time) {\n    if (!this.lastStepTime) {\n      this.lastStepTime = time;\n      return 0;\n    }\n\n    const sinceLast = time - this.lastStepTime;\n    if (sinceLast > 0) {\n      this.animTiming.collect(sinceLast);\n    }\n    this.throttle();\n    return Math.round(sinceLast / 1000 * this.stepRate);\n  }\n\n  /** @param {number} time */\n  stepWorld(time) {\n    if (this.locked) { return; }\n    const steps = this.calcSteps(time);\n    if (steps < 1) {\n      return;\n    }\n    if (steps == 1) {\n      this.world.step();\n    } else {\n      this.world.stepn(steps);\n    }\n    this.stepTimes.push(time, steps);\n    this.lastStepTime = time;\n  }\n\n  /** @param {number} time */\n  updateFPS(time) {\n    this.animTimes.push(time);\n    while (time - this.animTimes[0] > FPSInterval) {\n      this.animTimes.shift();\n    }\n    while (time - this.stepTimes[0] > FPSInterval) {\n      this.stepTimes.shift();\n    }\n    if (!this.showFPS) return;\n    this.$step.innerText = '#' + this.world.stepCount;\n    this.$fps.innerText = this.computeFPS().toFixed(0) + 'fps';\n    this.$sps.innerText = toSI(this.computeSPS()) + 'sps';\n    var stats = this.world.redrawTimingStats();\n    if (stats) {\n      this.$redrawTiming.innerText =\n        'µ=' + toSI(stats.m1 / 1e3) + 's ' +\n        '𝜎=' + toSI(Math.sqrt(stats.m2 / 1e3)) + 's';\n    } else {\n      this.$redrawTiming.innerText = '';\n    }\n  }\n\n  throttle() {\n    if (!this.animTiming.complete()) {\n      return;\n    }\n\n    if (this.animTiming.sinceWeightedMark() <= 3) {\n      return;\n    }\n\n    if (this.stepRate > 1) {\n      const fps = this.computeFPS();\n      if (fps < MinFPS) {\n        this.animTiming.weightedMark(2);\n        this.stepRate /= 2;\n        return;\n      }\n    }\n\n    var as = this.animTiming.classifyAnomalies();\n    var i = as.length - 1;\n    if (\n      this.stepRate > 1 &&\n      as[i] > 0.5 && as[i - 1] > 0.5 && as[i - 2] > 0.5\n    ) {\n      this.stepRate /= 2;\n      this.animTiming.weightedMark(2);\n    } else if (\n      this.stepRate < this.goalStepRate &&\n      as[i] <= 0 && as[i - 1] <= 0 && as[i - 2] <= 0\n    ) {\n      this.stepRate *= 2;\n      this.animTiming.weightedMark(0.5);\n    }\n\n  }\n\n  computeFPS() {\n    return this.animTimes.length / FPSInterval * 1000;\n  }\n\n  computeSPS() {\n    let totalSteps = 0;\n    for (var i = 1; i < this.stepTimes.length; i += 2) {\n      totalSteps += this.stepTimes[i];\n    }\n    return totalSteps / FPSInterval * 1000;\n  }\n\n  async play() {\n    if (this.locked) { return; }\n    this.paused = false;\n    this.animTimes.length = 0;\n    this.stepTimes.length = 0;\n    this.animTiming.reset();\n    this.$fps.innerText = '';\n    this.$sps.innerText = '';\n    this.$redrawTiming.innerText = '';\n    this.lastStepTime = null;\n\n    while (!this.paused) {\n      const time = await nextFrame(this.window);\n      /* eslint-disable no-try-catch */\n      try {\n        this.stepWorld(time);\n        this.updateFPS(time);\n      } catch (err) {\n        this.pause();\n        this.locked = true;\n        logError(err, 'Hexant playtime',\n          ['config', Object.fromEntries(this.hash.stringEntries())],\n          ['step', this.world.stepCount],\n          ['fps', this.computeFPS()],\n          ['sps', this.computeSPS()],\n          ['redrawTiming', this.world.redrawTimingStats()],\n        );\n      }\n    }\n  }\n\n  pause() {\n    this.paused = true;\n    this.$fps.innerText = '<' + this.$fps.innerText + '>';\n    this.$sps.innerText = '<' + this.$sps.innerText + '>';\n    this.$redrawTiming.innerText = '<' + this.$redrawTiming.innerText + '>';\n    this.lastStepTime = null;\n  }\n\n  playpause() {\n    if (this.paused) {\n      this.play();\n    } else {\n      this.pause();\n    }\n  }\n\n  stepit() {\n    if (!this.paused) {\n      this.pause();\n    } else if (!this.locked) {\n      this.world.step();\n    }\n  }\n\n  /** @param {number} rate */\n  setStepRate(rate) {\n    if (this.stepRate === this.goalStepRate) {\n      this.stepRate = rate;\n    }\n    this.goalStepRate = rate;\n  }\n\n  /**\n   * @param {number} width\n   * @param {number} height\n   */\n  resize(width, height) {\n    this.view.resize(width, height);\n  }\n\n}\n\nconst nsiSuffix = ['', 'm', 'µ', 'n'];\nconst siSuffix = ['K', 'M', 'G', 'T', 'E'];\n\n/** @param {number} n */\nfunction toSI(n) {\n  if (n < 1) {\n    let nsi = 0;\n    while (nsi < nsiSuffix.length && n < 1) {\n      nsi++;\n      n *= 1e3;\n    }\n    return n.toPrecision(3) + nsiSuffix[nsi];\n  }\n  if (n < 1e3) {\n    return n.toFixed(0);\n  }\n  n /= 1e3;\n  let si = 0;\n  while (si < siSuffix.length && n > 1e3) {\n    si++;\n    n /= 1e3;\n  }\n  return n.toPrecision(3) + siSuffix[si];\n}\n\n/**\n * @param {Window} [window]\n * @returns {Promise<number>}\n */\nfunction nextFrame(window = global.window) {\n  return new Promise(\n    resolve => window.requestAnimationFrame(resolve)\n  );\n}\n\n/** @typedef {object} ModifierKeyEvent\n * @prop {boolean} metaKey\n * @prop {boolean} altKey\n * @prop {boolean} ctrlKey\n * @prop {boolean} shiftKey\n */\n\n/**\n * @param {ModifierKeyEvent} e\n * @param {{key:string}|{button:number}} kb\n */\nfunction keycode({ metaKey, altKey, ctrlKey }, kb) {\n  return [...function*() {\n    let key = '';\n\n    if (metaKey) yield `M`;\n    if (altKey) yield `A`;\n    if (ctrlKey) yield `C`;\n    // if (shiftKey)  yield `S`; // NOTE ignoring shift for now\n    if ('key' in kb) {\n      ({ key } = kb);\n      switch (key) {\n        case ' ':\n          yield 'Space';\n          break;\n\n        default:\n          yield key;\n      }\n    } else yield `button${kb.button}`;\n  }()].join('-');\n}\n\n/**\n * @param {any} err\n * @param {string} desc\n * @param {[key: string, data: any][]} details\n */\nfunction logError(err, desc, ...details) {\n  console.group(`${desc} error`);\n  console.error(err);\n  for (const [key, data] of details) {\n    console.log(key, JSON.stringify(data));\n  }\n  console.groupEnd();\n}\n","// @ts-check\n\nimport Hexant from './src/hexant.js';\n\nconst hexant = new Hexant({\n  $body: document.querySelector('#main'),\n});\n\nfunction updateSize() {\n  const {\n    innerWidth, innerHeight,\n    document: {\n      documentElement: { clientWidth, clientHeight },\n    },\n  } = window;\n  const width = Math.max(clientWidth, innerWidth || 0);\n  const height = Math.max(clientHeight, innerHeight || 0);\n  hexant.resize(width, height);\n}\n\nwindow.addEventListener('resize', () => updateSize());\nupdateSize();\n"],"names":["parse","rezult.error","rezult.just","hsluvToRgb","rezult.toValue","assertNever","this","id","rezult.catchErr","opPrec","rleFrom","rezult.bind","analyze.antRule","analyze.transformed","analyze.matchType","analyze.transform","constants.Turn","parseRaw","constants.turnDirs","create","glMatrix.ARRAY_TYPE","normalize","glMatrix.EPSILON","vec4.normalize","vec3.create","vec3.fromValues","dot","vec3.dot","vec3.cross","vec3.len","vec3.normalize","mat3.create","setNumbers","rangeListAdd","rangeListEach","pool","mat4.identity","mat4.ortho","colorGen","rezult.lift","promptIOLoop","turmiteRuleActions","turmiteRuleHelp"],"mappings":"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"}